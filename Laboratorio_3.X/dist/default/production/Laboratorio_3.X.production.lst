

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Feb 07 20:14:39 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.10
    17                           ; Generated 31/07/2019 GMT
    18                           ; 
    19                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0000                     	;# 
   207  0001                     	;# 
   208  0002                     	;# 
   209  0003                     	;# 
   210  0004                     	;# 
   211  0005                     	;# 
   212  0006                     	;# 
   213  0007                     	;# 
   214  0008                     	;# 
   215  0009                     	;# 
   216  000A                     	;# 
   217  000B                     	;# 
   218  000C                     	;# 
   219  000D                     	;# 
   220  000E                     	;# 
   221  000E                     	;# 
   222  000F                     	;# 
   223  0010                     	;# 
   224  0011                     	;# 
   225  0012                     	;# 
   226  0013                     	;# 
   227  0014                     	;# 
   228  0015                     	;# 
   229  0015                     	;# 
   230  0016                     	;# 
   231  0017                     	;# 
   232  0018                     	;# 
   233  0019                     	;# 
   234  001A                     	;# 
   235  001B                     	;# 
   236  001B                     	;# 
   237  001C                     	;# 
   238  001D                     	;# 
   239  001E                     	;# 
   240  001F                     	;# 
   241  0081                     	;# 
   242  0085                     	;# 
   243  0086                     	;# 
   244  0087                     	;# 
   245  0088                     	;# 
   246  0089                     	;# 
   247  008C                     	;# 
   248  008D                     	;# 
   249  008E                     	;# 
   250  008F                     	;# 
   251  0090                     	;# 
   252  0091                     	;# 
   253  0092                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0094                     	;# 
   258  0095                     	;# 
   259  0096                     	;# 
   260  0097                     	;# 
   261  0098                     	;# 
   262  0099                     	;# 
   263  009A                     	;# 
   264  009B                     	;# 
   265  009C                     	;# 
   266  009D                     	;# 
   267  009E                     	;# 
   268  009F                     	;# 
   269  0105                     	;# 
   270  0107                     	;# 
   271  0108                     	;# 
   272  0109                     	;# 
   273  010C                     	;# 
   274  010C                     	;# 
   275  010D                     	;# 
   276  010E                     	;# 
   277  010F                     	;# 
   278  0185                     	;# 
   279  0187                     	;# 
   280  0188                     	;# 
   281  0189                     	;# 
   282  018C                     	;# 
   283  018D                     	;# 
   284  0006                     _PORTBbits	set	6
   285  0008                     _PORTD	set	8
   286  0007                     _PORTC	set	7
   287  0006                     _PORTB	set	6
   288  0005                     _PORTA	set	5
   289  0088                     _TRISD	set	136
   290  0087                     _TRISC	set	135
   291  0086                     _TRISB	set	134
   292  0085                     _TRISA	set	133
   293                           
   294                           	psect	strings
   295  0003                     __pstrings:	
   296  0003                     stringtab:	
   297  0003                     __stringtab:	
   298  0003                     stringcode:	
   299                           ;	String table - string pointers are 1 byte each
   300                           
   301  0003                     stringdir:	
   302  0003  3000               	movlw	high stringdir
   303  0004  008A               	movwf	10
   304  0005  0804               	movf	4,w
   305  0006  0A84               	incf	4,f
   306  0007  0782               	addwf	2,f
   307  0008                     __stringbase:	
   308  0008  3400               	retlw	0
   309  0009                     __end_of__stringtab:	
   310  0009                     STR_1:	
   311  0009  3450               	retlw	80	;'P'
   312  000A  344F               	retlw	79	;'O'
   313  000B  3454               	retlw	84	;'T'
   314  000C  3431               	retlw	49	;'1'
   315  000D  3400               	retlw	0
   316  000E                     STR_2:	
   317  000E  3450               	retlw	80	;'P'
   318  000F  344F               	retlw	79	;'O'
   319  0010  3454               	retlw	84	;'T'
   320  0011  3432               	retlw	50	;'2'
   321  0012  3400               	retlw	0
   322  0013                     STR_3:	
   323  0013  3454               	retlw	84	;'T'
   324  0014  3454               	retlw	84	;'T'
   325  0015  344C               	retlw	76	;'L'
   326  0016  3400               	retlw	0
   327                           
   328                           ; #config settings
   329  0000                     
   330                           	psect	cinit
   331  07FC                     start_initialization:	
   332  07FC                     __initialization:	
   333  07FC                     end_of_initialization:	
   334                           ;End of C runtime variable initialization code
   335                           
   336  07FC                     __end_of__initialization:	
   337  07FC  0183               	clrf	3
   338  07FD  120A  118A  2F68   	ljmp	_main	;jump to C main() function
   339                           
   340                           	psect	cstackCOMMON
   341  0070                     __pcstackCOMMON:	
   342  0070                     ?_initLCD:	
   343  0070                     ?_lcd_clr:	
   344                           ; 1 bytes @ 0x0
   345                           
   346  0070                     ?_lcd_write_string:	
   347                           ; 1 bytes @ 0x0
   348                           
   349  0070                     ?_lcd_cmd:	
   350                           ; 1 bytes @ 0x0
   351                           
   352  0070                     ??_lcd_cmd:	
   353                           ; 1 bytes @ 0x0
   354                           
   355  0070                     ?_main:	
   356                           ; 1 bytes @ 0x0
   357                           
   358  0070                     ?_lcd_write_char:	
   359                           ; 1 bytes @ 0x0
   360                           
   361  0070                     ??_lcd_write_char:	
   362                           ; 1 bytes @ 0x0
   363                           
   364                           
   365                           ; 1 bytes @ 0x0
   366  0070                     	ds	2
   367  0072                     lcd_cmd@command:	
   368  0072                     lcd_write_char@var:	
   369                           ; 1 bytes @ 0x2
   370                           
   371                           
   372                           ; 1 bytes @ 0x2
   373  0072                     	ds	1
   374  0073                     ??_initLCD:	
   375  0073                     ??_lcd_clr:	
   376                           ; 1 bytes @ 0x3
   377                           
   378  0073                     ?_lcd_set_cursor:	
   379                           ; 1 bytes @ 0x3
   380                           
   381  0073                     ??_lcd_write_string:	
   382                           ; 1 bytes @ 0x3
   383                           
   384  0073                     lcd_set_cursor@posy:	
   385                           ; 1 bytes @ 0x3
   386                           
   387  0073                     lcd_write_string@i:	
   388                           ; 1 bytes @ 0x3
   389                           
   390                           
   391                           ; 2 bytes @ 0x3
   392  0073                     	ds	1
   393  0074                     ??_lcd_set_cursor:	
   394  0074                     lcd_set_cursor@posx:	
   395                           ; 1 bytes @ 0x4
   396                           
   397                           
   398                           ; 1 bytes @ 0x4
   399  0074                     	ds	1
   400  0075                     lcd_write_string@var:	
   401                           
   402                           ; 1 bytes @ 0x5
   403  0075                     	ds	1
   404  0076                     ??_main:	
   405                           
   406                           	psect	maintext
   407  0768                     __pmaintext:	
   408                           ; 1 bytes @ 0x6
   409 ;;
   410 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   411 ;;
   412 ;; *************** function _main *****************
   413 ;; Defined at:
   414 ;;		line 30 in file "LCD.c"
   415 ;; Parameters:    Size  Location     Type
   416 ;;		None
   417 ;; Auto vars:     Size  Location     Type
   418 ;;		None
   419 ;; Return value:  Size  Location     Type
   420 ;;                  1    wreg      void 
   421 ;; Registers used:
   422 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   423 ;; Tracked objects:
   424 ;;		On entry : B00/0
   425 ;;		On exit  : 0/0
   426 ;;		Unchanged: 0/0
   427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   428 ;;      Params:         0       0       0       0       0
   429 ;;      Locals:         0       0       0       0       0
   430 ;;      Temps:          0       0       0       0       0
   431 ;;      Totals:         0       0       0       0       0
   432 ;;Total ram usage:        0 bytes
   433 ;; Hardware stack levels required when called:    2
   434 ;; This function calls:
   435 ;;		_initLCD
   436 ;;		_lcd_clr
   437 ;;		_lcd_set_cursor
   438 ;;		_lcd_write_string
   439 ;; This function is called by:
   440 ;;		Startup code after reset
   441 ;; This function uses a non-reentrant model
   442 ;;
   443                           
   444                           
   445                           ;psect for function _main
   446  0768                     _main:	
   447  0768                     l757:	
   448                           ;incstack = 0
   449                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   450                           
   451                           
   452                           ;LCD.c: 31:     TRISA = 0b11111111;
   453  0768  30FF               	movlw	255
   454  0769  1683               	bsf	3,5	;RP0=1, select bank1
   455  076A  1303               	bcf	3,6	;RP1=0, select bank1
   456  076B  0085               	movwf	5	;volatile
   457  076C                     l759:	
   458                           
   459                           ;LCD.c: 32:     TRISB = 0;
   460  076C  0186               	clrf	6	;volatile
   461  076D                     l761:	
   462                           
   463                           ;LCD.c: 33:     TRISC = 0;
   464  076D  0187               	clrf	7	;volatile
   465  076E                     l763:	
   466                           
   467                           ;LCD.c: 34:     TRISD = 0;
   468  076E  0188               	clrf	8	;volatile
   469  076F                     l765:	
   470                           
   471                           ;LCD.c: 36:     PORTA = 0;
   472  076F  1283               	bcf	3,5	;RP0=0, select bank0
   473  0770  1303               	bcf	3,6	;RP1=0, select bank0
   474  0771  0185               	clrf	5	;volatile
   475  0772                     l767:	
   476                           
   477                           ;LCD.c: 37:     PORTB = 0;
   478  0772  0186               	clrf	6	;volatile
   479  0773                     l769:	
   480                           
   481                           ;LCD.c: 38:     PORTC = 0;
   482  0773  0187               	clrf	7	;volatile
   483  0774                     l771:	
   484                           
   485                           ;LCD.c: 39:     PORTD = 0;
   486  0774  0188               	clrf	8	;volatile
   487  0775                     l773:	
   488                           
   489                           ;LCD.c: 41:     initLCD ();
   490  0775  120A  118A  27AD  120A  118A  	fcall	_initLCD
   491  077A                     l775:	
   492                           
   493                           ;LCD.c: 42:     lcd_clr();
   494  077A  120A  118A  26F9  120A  118A  	fcall	_lcd_clr
   495  077F                     l777:	
   496                           
   497                           ;LCD.c: 43:     lcd_set_cursor(1,1);
   498  077F  01F3               	clrf	lcd_set_cursor@posy
   499  0780  0AF3               	incf	lcd_set_cursor@posy,f
   500  0781  3001               	movlw	1
   501  0782  120A  118A  2728  120A  118A  	fcall	_lcd_set_cursor
   502  0787                     l779:	
   503                           
   504                           ;LCD.c: 44:     lcd_write_string("POT1");
   505  0787  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   506  0788  120A  118A  2743  120A  118A  	fcall	_lcd_write_string
   507  078D                     l781:	
   508                           
   509                           ;LCD.c: 45:     lcd_set_cursor(6,1);
   510  078D  01F3               	clrf	lcd_set_cursor@posy
   511  078E  0AF3               	incf	lcd_set_cursor@posy,f
   512  078F  3006               	movlw	6
   513  0790  120A  118A  2728  120A  118A  	fcall	_lcd_set_cursor
   514  0795                     l783:	
   515                           
   516                           ;LCD.c: 46:     lcd_write_string("POT2");
   517  0795  3006               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   518  0796  120A  118A  2743  120A  118A  	fcall	_lcd_write_string
   519  079B                     l785:	
   520                           
   521                           ;LCD.c: 47:     lcd_set_cursor(11,1);
   522  079B  01F3               	clrf	lcd_set_cursor@posy
   523  079C  0AF3               	incf	lcd_set_cursor@posy,f
   524  079D  300B               	movlw	11
   525  079E  120A  118A  2728  120A  118A  	fcall	_lcd_set_cursor
   526  07A3                     l787:	
   527                           
   528                           ;LCD.c: 48:     lcd_write_string("TTL");
   529  07A3  300B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   530  07A4  120A  118A  2743  120A  118A  	fcall	_lcd_write_string
   531  07A9                     l29:	
   532                           ;LCD.c: 51:     while (1){
   533                           
   534  07A9                     l30:	
   535                           ;LCD.c: 53:     }
   536                           
   537  07A9  2FA9               	goto	l29
   538  07AA  120A  118A  2800   	ljmp	start
   539  07AD                     __end_of_main:	
   540                           
   541                           	psect	text1
   542  0743                     __ptext1:	
   543 ;; *************** function _lcd_write_string *****************
   544 ;; Defined at:
   545 ;;		line 57 in file "LCD_Init.c"
   546 ;; Parameters:    Size  Location     Type
   547 ;;  var             1    wreg     PTR unsigned char 
   548 ;;		 -> STR_3(4), STR_2(5), STR_1(5), 
   549 ;; Auto vars:     Size  Location     Type
   550 ;;  var             1    5[COMMON] PTR unsigned char 
   551 ;;		 -> STR_3(4), STR_2(5), STR_1(5), 
   552 ;;  i               2    3[COMMON] int 
   553 ;; Return value:  Size  Location     Type
   554 ;;                  1    wreg      void 
   555 ;; Registers used:
   556 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   557 ;; Tracked objects:
   558 ;;		On entry : 0/0
   559 ;;		On exit  : 0/0
   560 ;;		Unchanged: 0/0
   561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   562 ;;      Params:         0       0       0       0       0
   563 ;;      Locals:         3       0       0       0       0
   564 ;;      Temps:          0       0       0       0       0
   565 ;;      Totals:         3       0       0       0       0
   566 ;;Total ram usage:        3 bytes
   567 ;; Hardware stack levels used:    1
   568 ;; Hardware stack levels required when called:    1
   569 ;; This function calls:
   570 ;;		_lcd_write_char
   571 ;; This function is called by:
   572 ;;		_main
   573 ;; This function uses a non-reentrant model
   574 ;;
   575                           
   576                           
   577                           ;psect for function _lcd_write_string
   578  0743                     _lcd_write_string:	
   579                           
   580                           ;incstack = 0
   581                           ; Regs used in _lcd_write_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   582                           ;lcd_write_string@var stored from wreg
   583  0743  00F5               	movwf	lcd_write_string@var
   584  0744                     l749:	
   585                           
   586                           ;LCD_Init.c: 58:     int i;;LCD_Init.c: 59:  for(i=0;var[i]!='\0';i++)
   587  0744  01F3               	clrf	lcd_write_string@i
   588  0745  01F4               	clrf	lcd_write_string@i+1
   589  0746  2F5A               	goto	l755
   590  0747                     l751:	
   591                           
   592                           ;LCD_Init.c: 60:     lcd_write_char(var[i]);
   593  0747  0873               	movf	lcd_write_string@i,w
   594  0748  0775               	addwf	lcd_write_string@var,w
   595  0749  0084               	movwf	4
   596  074A  120A  118A  2003  120A  118A  	fcall	stringdir
   597  074F  120A  118A  2714  120A  118A  	fcall	_lcd_write_char
   598  0754                     l753:	
   599  0754  3001               	movlw	1
   600  0755  07F3               	addwf	lcd_write_string@i,f
   601  0756  1803               	skipnc
   602  0757  0AF4               	incf	lcd_write_string@i+1,f
   603  0758  3000               	movlw	0
   604  0759  07F4               	addwf	lcd_write_string@i+1,f
   605  075A                     l755:	
   606  075A  0873               	movf	lcd_write_string@i,w
   607  075B  0775               	addwf	lcd_write_string@var,w
   608  075C  0084               	movwf	4
   609  075D  120A  118A  2003  120A  118A  	fcall	stringdir
   610  0762  3A00               	xorlw	0
   611  0763  1D03               	skipz
   612  0764  2F66               	goto	u61
   613  0765  2F67               	goto	u60
   614  0766                     u61:	
   615  0766  2F47               	goto	l751
   616  0767                     u60:	
   617  0767                     l63:	
   618  0767  0008               	return
   619  0768                     __end_of_lcd_write_string:	
   620                           
   621                           	psect	text2
   622  0714                     __ptext2:	
   623 ;; *************** function _lcd_write_char *****************
   624 ;; Defined at:
   625 ;;		line 49 in file "LCD_Init.c"
   626 ;; Parameters:    Size  Location     Type
   627 ;;  var             1    wreg     unsigned char 
   628 ;; Auto vars:     Size  Location     Type
   629 ;;  var             1    2[COMMON] unsigned char 
   630 ;; Return value:  Size  Location     Type
   631 ;;                  1    wreg      void 
   632 ;; Registers used:
   633 ;;		wreg
   634 ;; Tracked objects:
   635 ;;		On entry : 0/0
   636 ;;		On exit  : 0/0
   637 ;;		Unchanged: 0/0
   638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   639 ;;      Params:         0       0       0       0       0
   640 ;;      Locals:         1       0       0       0       0
   641 ;;      Temps:          2       0       0       0       0
   642 ;;      Totals:         3       0       0       0       0
   643 ;;Total ram usage:        3 bytes
   644 ;; Hardware stack levels used:    1
   645 ;; This function calls:
   646 ;;		Nothing
   647 ;; This function is called by:
   648 ;;		_lcd_write_string
   649 ;; This function uses a non-reentrant model
   650 ;;
   651                           
   652                           
   653                           ;psect for function _lcd_write_char
   654  0714                     _lcd_write_char:	
   655                           
   656                           ;incstack = 0
   657                           ; Regs used in _lcd_write_char: [wreg]
   658                           ;lcd_write_char@var stored from wreg
   659  0714  00F2               	movwf	lcd_write_char@var
   660  0715                     l663:	
   661                           
   662                           ;LCD_Init.c: 50:     PORTBbits.RB6 = 1;
   663  0715  1283               	bcf	3,5	;RP0=0, select bank0
   664  0716  1303               	bcf	3,6	;RP1=0, select bank0
   665  0717  1706               	bsf	6,6	;volatile
   666  0718                     l665:	
   667                           
   668                           ;LCD_Init.c: 51:     PORTD = var;
   669  0718  0872               	movf	lcd_write_char@var,w
   670  0719  0088               	movwf	8	;volatile
   671  071A                     l667:	
   672                           
   673                           ;LCD_Init.c: 52:     PORTBbits.RB7 = 1;
   674  071A  1786               	bsf	6,7	;volatile
   675                           
   676                           ;LCD_Init.c: 53:     _delay((unsigned long)((4)*(4000000/4000.0)));
   677  071B  3006               	movlw	6
   678  071C  00F1               	movwf	??_lcd_write_char+1
   679  071D  3030               	movlw	48
   680  071E  00F0               	movwf	??_lcd_write_char
   681  071F                     u77:	
   682  071F  0BF0               	decfsz	??_lcd_write_char,f
   683  0720  2F1F               	goto	u77
   684  0721  0BF1               	decfsz	??_lcd_write_char+1,f
   685  0722  2F1F               	goto	u77
   686  0723  0000               	nop
   687  0724                     l669:	
   688                           
   689                           ;LCD_Init.c: 54:     PORTBbits.RB7 = 0;
   690  0724  1283               	bcf	3,5	;RP0=0, select bank0
   691  0725  1303               	bcf	3,6	;RP1=0, select bank0
   692  0726  1386               	bcf	6,7	;volatile
   693  0727                     l57:	
   694  0727  0008               	return
   695  0728                     __end_of_lcd_write_char:	
   696                           
   697                           	psect	text3
   698  0728                     __ptext3:	
   699 ;; *************** function _lcd_set_cursor *****************
   700 ;; Defined at:
   701 ;;		line 40 in file "LCD_Init.c"
   702 ;; Parameters:    Size  Location     Type
   703 ;;  posx            1    wreg     unsigned char 
   704 ;;  posy            1    3[COMMON] unsigned char 
   705 ;; Auto vars:     Size  Location     Type
   706 ;;  posx            1    4[COMMON] unsigned char 
   707 ;; Return value:  Size  Location     Type
   708 ;;                  1    wreg      void 
   709 ;; Registers used:
   710 ;;		wreg, status,2, status,0, pclath, cstack
   711 ;; Tracked objects:
   712 ;;		On entry : 0/0
   713 ;;		On exit  : 0/0
   714 ;;		Unchanged: 0/0
   715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   716 ;;      Params:         1       0       0       0       0
   717 ;;      Locals:         1       0       0       0       0
   718 ;;      Temps:          0       0       0       0       0
   719 ;;      Totals:         2       0       0       0       0
   720 ;;Total ram usage:        2 bytes
   721 ;; Hardware stack levels used:    1
   722 ;; Hardware stack levels required when called:    1
   723 ;; This function calls:
   724 ;;		_lcd_cmd
   725 ;; This function is called by:
   726 ;;		_main
   727 ;; This function uses a non-reentrant model
   728 ;;
   729                           
   730                           
   731                           ;psect for function _lcd_set_cursor
   732  0728                     _lcd_set_cursor:	
   733                           
   734                           ;incstack = 0
   735                           ; Regs used in _lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
   736                           ;lcd_set_cursor@posx stored from wreg
   737  0728  00F4               	movwf	lcd_set_cursor@posx
   738  0729                     l741:	
   739                           
   740                           ;LCD_Init.c: 41:     if(posy == 1){
   741  0729  0373               	decf	lcd_set_cursor@posy,w
   742  072A  1D03               	btfss	3,2
   743  072B  2F2D               	goto	u41
   744  072C  2F2E               	goto	u40
   745  072D                     u41:	
   746  072D  2F35               	goto	l745
   747  072E                     u40:	
   748  072E                     l743:	
   749                           
   750                           ;LCD_Init.c: 42:         lcd_cmd (0x80 + posx - 1);
   751  072E  0874               	movf	lcd_set_cursor@posx,w
   752  072F  3E7F               	addlw	127
   753  0730  120A  118A  2700  120A  118A  	fcall	_lcd_cmd
   754  0735                     l745:	
   755                           
   756                           ;LCD_Init.c: 44:     if(posy == 2){
   757  0735  3002               	movlw	2
   758  0736  0673               	xorwf	lcd_set_cursor@posy,w
   759  0737  1D03               	btfss	3,2
   760  0738  2F3A               	goto	u51
   761  0739  2F3B               	goto	u50
   762  073A                     u51:	
   763  073A  2F42               	goto	l54
   764  073B                     u50:	
   765  073B                     l747:	
   766                           
   767                           ;LCD_Init.c: 45:         lcd_cmd (0xC0 + posx - 1);
   768  073B  0874               	movf	lcd_set_cursor@posx,w
   769  073C  3EBF               	addlw	191
   770  073D  120A  118A  2700  120A  118A  	fcall	_lcd_cmd
   771  0742                     l54:	
   772  0742  0008               	return
   773  0743                     __end_of_lcd_set_cursor:	
   774                           
   775                           	psect	text4
   776  06F9                     __ptext4:	
   777 ;; *************** function _lcd_clr *****************
   778 ;; Defined at:
   779 ;;		line 36 in file "LCD_Init.c"
   780 ;; Parameters:    Size  Location     Type
   781 ;;		None
   782 ;; Auto vars:     Size  Location     Type
   783 ;;		None
   784 ;; Return value:  Size  Location     Type
   785 ;;                  1    wreg      void 
   786 ;; Registers used:
   787 ;;		wreg, status,2, status,0, pclath, cstack
   788 ;; Tracked objects:
   789 ;;		On entry : 0/0
   790 ;;		On exit  : 0/0
   791 ;;		Unchanged: 0/0
   792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   793 ;;      Params:         0       0       0       0       0
   794 ;;      Locals:         0       0       0       0       0
   795 ;;      Temps:          0       0       0       0       0
   796 ;;      Totals:         0       0       0       0       0
   797 ;;Total ram usage:        0 bytes
   798 ;; Hardware stack levels used:    1
   799 ;; Hardware stack levels required when called:    1
   800 ;; This function calls:
   801 ;;		_lcd_cmd
   802 ;; This function is called by:
   803 ;;		_main
   804 ;; This function uses a non-reentrant model
   805 ;;
   806                           
   807                           
   808                           ;psect for function _lcd_clr
   809  06F9                     _lcd_clr:	
   810  06F9                     l691:	
   811                           ;incstack = 0
   812                           ; Regs used in _lcd_clr: [wreg+status,2+status,0+pclath+cstack]
   813                           
   814                           
   815                           ;LCD_Init.c: 37:     lcd_cmd(0x01);
   816  06F9  3001               	movlw	1
   817  06FA  120A  118A  2700  120A  118A  	fcall	_lcd_cmd
   818  06FF                     l49:	
   819  06FF  0008               	return
   820  0700                     __end_of_lcd_clr:	
   821                           
   822                           	psect	text5
   823  07AD                     __ptext5:	
   824 ;; *************** function _initLCD *****************
   825 ;; Defined at:
   826 ;;		line 7 in file "LCD_Init.c"
   827 ;; Parameters:    Size  Location     Type
   828 ;;		None
   829 ;; Auto vars:     Size  Location     Type
   830 ;;		None
   831 ;; Return value:  Size  Location     Type
   832 ;;                  1    wreg      void 
   833 ;; Registers used:
   834 ;;		wreg, status,2, status,0, pclath, cstack
   835 ;; Tracked objects:
   836 ;;		On entry : 0/0
   837 ;;		On exit  : 0/0
   838 ;;		Unchanged: 0/0
   839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   840 ;;      Params:         0       0       0       0       0
   841 ;;      Locals:         0       0       0       0       0
   842 ;;      Temps:          2       0       0       0       0
   843 ;;      Totals:         2       0       0       0       0
   844 ;;Total ram usage:        2 bytes
   845 ;; Hardware stack levels used:    1
   846 ;; Hardware stack levels required when called:    1
   847 ;; This function calls:
   848 ;;		_lcd_cmd
   849 ;; This function is called by:
   850 ;;		_main
   851 ;; This function uses a non-reentrant model
   852 ;;
   853                           
   854                           
   855                           ;psect for function _initLCD
   856  07AD                     _initLCD:	
   857  07AD                     l671:	
   858                           ;incstack = 0
   859                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
   860                           
   861                           
   862                           ;LCD_Init.c: 8: _delay((unsigned long)((15)*(4000000/4000.0)));
   863  07AD  3014               	movlw	20
   864  07AE  00F4               	movwf	??_initLCD+1
   865  07AF  3079               	movlw	121
   866  07B0  00F3               	movwf	??_initLCD
   867  07B1                     u87:	
   868  07B1  0BF3               	decfsz	??_initLCD,f
   869  07B2  2FB1               	goto	u87
   870  07B3  0BF4               	decfsz	??_initLCD+1,f
   871  07B4  2FB1               	goto	u87
   872  07B5  2FB6               	nop2
   873  07B6                     l673:	
   874                           
   875                           ;LCD_Init.c: 10: lcd_cmd(0x030);
   876  07B6  3030               	movlw	48
   877  07B7  120A  118A  2700  120A  118A  	fcall	_lcd_cmd
   878  07BC                     l675:	
   879                           
   880                           ;LCD_Init.c: 11: _delay((unsigned long)((5)*(4000000/4000.0)));
   881  07BC  3007               	movlw	7
   882  07BD  00F4               	movwf	??_initLCD+1
   883  07BE  307D               	movlw	125
   884  07BF  00F3               	movwf	??_initLCD
   885  07C0                     u97:	
   886  07C0  0BF3               	decfsz	??_initLCD,f
   887  07C1  2FC0               	goto	u97
   888  07C2  0BF4               	decfsz	??_initLCD+1,f
   889  07C3  2FC0               	goto	u97
   890                           
   891                           ;LCD_Init.c: 13: lcd_cmd(0x030);
   892  07C4  3030               	movlw	48
   893  07C5  120A  118A  2700  120A  118A  	fcall	_lcd_cmd
   894  07CA                     l677:	
   895                           
   896                           ;LCD_Init.c: 14: _delay((unsigned long)((11)*(4000000/4000.0)));
   897  07CA  300F               	movlw	15
   898  07CB  00F4               	movwf	??_initLCD+1
   899  07CC  3047               	movlw	71
   900  07CD  00F3               	movwf	??_initLCD
   901  07CE                     u107:	
   902  07CE  0BF3               	decfsz	??_initLCD,f
   903  07CF  2FCE               	goto	u107
   904  07D0  0BF4               	decfsz	??_initLCD+1,f
   905  07D1  2FCE               	goto	u107
   906  07D2  2FD3               	nop2
   907  07D3                     l679:	
   908                           
   909                           ;LCD_Init.c: 16: lcd_cmd(0x030);
   910  07D3  3030               	movlw	48
   911  07D4  120A  118A  2700  120A  118A  	fcall	_lcd_cmd
   912                           
   913                           ;LCD_Init.c: 17: _delay((unsigned long)((160)*(4000000/4000000.0)));
   914  07D9  3035               	movlw	53
   915  07DA  00F3               	movwf	??_initLCD
   916  07DB                     u117:	
   917  07DB  0BF3               	decfsz	??_initLCD,f
   918  07DC  2FDB               	goto	u117
   919  07DD                     l681:	
   920                           
   921                           ;LCD_Init.c: 19: lcd_cmd(0x38);
   922  07DD  3038               	movlw	56
   923  07DE  120A  118A  2700  120A  118A  	fcall	_lcd_cmd
   924  07E3                     l683:	
   925                           
   926                           ;LCD_Init.c: 20: lcd_cmd(0x10);
   927  07E3  3010               	movlw	16
   928  07E4  120A  118A  2700  120A  118A  	fcall	_lcd_cmd
   929  07E9                     l685:	
   930                           
   931                           ;LCD_Init.c: 21: lcd_cmd(0x01);
   932  07E9  3001               	movlw	1
   933  07EA  120A  118A  2700  120A  118A  	fcall	_lcd_cmd
   934  07EF                     l687:	
   935                           
   936                           ;LCD_Init.c: 22: lcd_cmd(0x06);
   937  07EF  3006               	movlw	6
   938  07F0  120A  118A  2700  120A  118A  	fcall	_lcd_cmd
   939  07F5                     l689:	
   940                           
   941                           ;LCD_Init.c: 23: lcd_cmd(0x0C);
   942  07F5  300C               	movlw	12
   943  07F6  120A  118A  2700  120A  118A  	fcall	_lcd_cmd
   944  07FB                     l43:	
   945  07FB  0008               	return
   946  07FC                     __end_of_initLCD:	
   947                           
   948                           	psect	text6
   949  0700                     __ptext6:	
   950 ;; *************** function _lcd_cmd *****************
   951 ;; Defined at:
   952 ;;		line 28 in file "LCD_Init.c"
   953 ;; Parameters:    Size  Location     Type
   954 ;;  command         1    wreg     unsigned char 
   955 ;; Auto vars:     Size  Location     Type
   956 ;;  command         1    2[COMMON] unsigned char 
   957 ;; Return value:  Size  Location     Type
   958 ;;                  1    wreg      void 
   959 ;; Registers used:
   960 ;;		wreg
   961 ;; Tracked objects:
   962 ;;		On entry : 0/0
   963 ;;		On exit  : 0/0
   964 ;;		Unchanged: 0/0
   965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   966 ;;      Params:         0       0       0       0       0
   967 ;;      Locals:         1       0       0       0       0
   968 ;;      Temps:          2       0       0       0       0
   969 ;;      Totals:         3       0       0       0       0
   970 ;;Total ram usage:        3 bytes
   971 ;; Hardware stack levels used:    1
   972 ;; This function calls:
   973 ;;		Nothing
   974 ;; This function is called by:
   975 ;;		_initLCD
   976 ;;		_lcd_clr
   977 ;;		_lcd_set_cursor
   978 ;; This function uses a non-reentrant model
   979 ;;
   980                           
   981                           
   982                           ;psect for function _lcd_cmd
   983  0700                     _lcd_cmd:	
   984                           
   985                           ;incstack = 0
   986                           ; Regs used in _lcd_cmd: [wreg]
   987                           ;lcd_cmd@command stored from wreg
   988  0700  00F2               	movwf	lcd_cmd@command
   989  0701                     l655:	
   990                           
   991                           ;LCD_Init.c: 29:     PORTBbits.RB6 = 0;
   992  0701  1283               	bcf	3,5	;RP0=0, select bank0
   993  0702  1303               	bcf	3,6	;RP1=0, select bank0
   994  0703  1306               	bcf	6,6	;volatile
   995  0704                     l657:	
   996                           
   997                           ;LCD_Init.c: 30:     PORTD = command;
   998  0704  0872               	movf	lcd_cmd@command,w
   999  0705  0088               	movwf	8	;volatile
  1000  0706                     l659:	
  1001                           
  1002                           ;LCD_Init.c: 31:     PORTBbits.RB7 = 1;
  1003  0706  1786               	bsf	6,7	;volatile
  1004                           
  1005                           ;LCD_Init.c: 32:     _delay((unsigned long)((4)*(4000000/4000.0)));
  1006  0707  3006               	movlw	6
  1007  0708  00F1               	movwf	??_lcd_cmd+1
  1008  0709  3030               	movlw	48
  1009  070A  00F0               	movwf	??_lcd_cmd
  1010  070B                     u127:	
  1011  070B  0BF0               	decfsz	??_lcd_cmd,f
  1012  070C  2F0B               	goto	u127
  1013  070D  0BF1               	decfsz	??_lcd_cmd+1,f
  1014  070E  2F0B               	goto	u127
  1015  070F  0000               	nop
  1016  0710                     l661:	
  1017                           
  1018                           ;LCD_Init.c: 33:     PORTBbits.RB7 = 0;
  1019  0710  1283               	bcf	3,5	;RP0=0, select bank0
  1020  0711  1303               	bcf	3,6	;RP1=0, select bank0
  1021  0712  1386               	bcf	6,7	;volatile
  1022  0713                     l46:	
  1023  0713  0008               	return
  1024  0714                     __end_of_lcd_cmd:	
  1025  007E                     btemp	set	126	;btemp
  1026  007E                     wtemp0	set	126


Data Sizes:
    Strings     14
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_write_string@var	PTR unsigned char  size(1) Largest target is 5
		 -> STR_3(CODE[4]), STR_2(CODE[5]), STR_1(CODE[5]), 


Critical Paths under _main in COMMON

    _main->_lcd_write_string
    _lcd_write_string->_lcd_write_char
    _lcd_set_cursor->_lcd_cmd
    _lcd_clr->_lcd_cmd
    _initLCD->_lcd_cmd

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     565
                            _initLCD
                            _lcd_clr
                     _lcd_set_cursor
                   _lcd_write_string
 ---------------------------------------------------------------------------------
 (1) _lcd_write_string                                     3     3      0     204
                                              3 COMMON     3     3      0
                     _lcd_write_char
 ---------------------------------------------------------------------------------
 (2) _lcd_write_char                                       3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd_set_cursor                                       2     1      1     331
                                              3 COMMON     2     1      1
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_clr                                              0     0      0      15
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              2     2      0      15
                                              3 COMMON     2     2      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initLCD
     _lcd_cmd
   _lcd_clr
     _lcd_cmd
   _lcd_set_cursor
     _lcd_cmd
   _lcd_write_string
     _lcd_write_char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Feb 07 20:14:39 2020

                        pc 0002                __CFG_CP$OFF 0000                         l30 07A9  
                       l43 07FB                         l29 07A9                         l46 0713  
                       l54 0742                         l63 0767                         l49 06FF  
                       l57 0727                         u40 072E                         u41 072D  
                       u50 073B                         u51 073A                         u60 0767  
                       u61 0766                         u77 071F                         u87 07B1  
                       u97 07C0                         fsr 0004             lcd_cmd@command 0072  
                      l661 0710                        l741 0729                        l655 0701  
                      l671 07AD                        l743 072E                        l663 0715  
                      l751 0747                        l657 0704                        l681 07DD  
                      l673 07B6                        l745 0735                        l665 0718  
                      l753 0754                        l761 076D                        l659 0706  
                      l683 07E3                        l675 07BC                        l691 06F9  
                      l747 073B                        l667 071A                        l755 075A  
                      l771 0774                        l763 076E                        l685 07E9  
                      l677 07CA                        l669 0724                        l749 0744  
                      l781 078D                        l773 0775                        l765 076F  
                      l757 0768                        l687 07EF                        l679 07D3  
                      l783 0795                        l775 077A                        l767 0772  
                      l759 076C                        l689 07F5                        l785 079B  
                      l777 077F                        l769 0773                        l787 07A3  
                      l779 0787                        u107 07CE                        u117 07DB  
                      u127 070B               __CFG_CPD$OFF 0000                        fsr0 0004  
          ?_lcd_set_cursor 0073               __CFG_LVP$OFF 0000                       STR_1 0009  
                     STR_2 000E                       STR_3 0013               __CFG_WRT$OFF 0000  
   __end_of_lcd_write_char 0728                       _main 0768                       btemp 007E  
                     start 0000              __CFG_IESO$OFF 0000                      ?_main 0070  
            __CFG_WDTE$OFF 0000                      _PORTA 0005                      _PORTB 0006  
                    _PORTC 0007                      _PORTD 0008                      _TRISA 0085  
                    _TRISB 0086                      _TRISC 0087                      _TRISD 0088  
           __CFG_FCMEN$OFF 0000            __end_of_lcd_cmd 0714            __end_of_lcd_clr 0700  
          __end_of_initLCD 07FC             __CFG_BOREN$OFF 0000                      pclath 000A  
          ?_lcd_write_char 0070                      status 0003                      wtemp0 007E  
           __CFG_MCLRE$OFF 0000            __initialization 07FC               __end_of_main 07AD  
                   ??_main 0076          lcd_write_char@var 0072             __CFG_PWRTE$OFF 0000  
 __end_of_lcd_write_string 0768                  ??_lcd_cmd 0070                  ??_lcd_clr 0073  
                ??_initLCD 0073          lcd_write_string@i 0073    __end_of__initialization 07FC  
           __pcstackCOMMON 0070           ??_lcd_set_cursor 0074                 __pmaintext 0768  
         ??_lcd_write_char 0070                 __stringtab 0003                    __ptext1 0743  
                  __ptext2 0714                    __ptext3 0728                    __ptext4 06F9  
                  __ptext5 07AD                    __ptext6 0700                    _lcd_cmd 0700  
                  _lcd_clr 06F9                    _initLCD 07AD       end_of_initialization 07FC  
                _PORTBbits 0006          ?_lcd_write_string 0070         ??_lcd_write_string 0073  
      start_initialization 07FC   __CFG_FOSC$INTRC_NOCLKOUT 0000                  ___latbits 0002  
                __pstrings 0003                   ?_lcd_cmd 0070                   ?_lcd_clr 0070  
                 ?_initLCD 0070    __size_of_lcd_set_cursor 001B                __stringbase 0008  
__size_of_lcd_write_string 0025    __size_of_lcd_write_char 0014         __end_of__stringtab 0009  
         __size_of_lcd_cmd 0014           __size_of_lcd_clr 0007         lcd_set_cursor@posx 0074  
       lcd_set_cursor@posy 0073           __size_of_initLCD 004F          __CFG_BOR4V$BOR40V 0000  
            __size_of_main 0045             _lcd_set_cursor 0728                  stringcode 0003  
                 stringdir 0003                   stringtab 0003     __end_of_lcd_set_cursor 0743  
         _lcd_write_string 0743             _lcd_write_char 0714        lcd_write_string@var 0075  
