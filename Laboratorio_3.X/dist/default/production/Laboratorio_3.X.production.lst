

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Feb 08 08:56:05 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	text28,local,class=CODE,merge=1,delta=2
    40                           	psect	text29,local,class=CODE,merge=1,delta=2
    41                           	psect	text30,local,class=CODE,merge=1,delta=2
    42                           	psect	text31,local,class=CODE,merge=1,delta=2
    43                           	psect	text32,local,class=CODE,merge=1,delta=2
    44                           	psect	intentry,global,class=CODE,delta=2
    45                           	dabs	1,0x7E,2
    46  0000                     
    47                           ; Version 2.10
    48                           ; Generated 31/07/2019 GMT
    49                           ; 
    50                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC16F887 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     	;# 
    82  0001                     	;# 
    83  0002                     	;# 
    84  0003                     	;# 
    85  0004                     	;# 
    86  0005                     	;# 
    87  0006                     	;# 
    88  0007                     	;# 
    89  0008                     	;# 
    90  0009                     	;# 
    91  000A                     	;# 
    92  000B                     	;# 
    93  000C                     	;# 
    94  000D                     	;# 
    95  000E                     	;# 
    96  000E                     	;# 
    97  000F                     	;# 
    98  0010                     	;# 
    99  0011                     	;# 
   100  0012                     	;# 
   101  0013                     	;# 
   102  0014                     	;# 
   103  0015                     	;# 
   104  0015                     	;# 
   105  0016                     	;# 
   106  0017                     	;# 
   107  0018                     	;# 
   108  0019                     	;# 
   109  001A                     	;# 
   110  001B                     	;# 
   111  001B                     	;# 
   112  001C                     	;# 
   113  001D                     	;# 
   114  001E                     	;# 
   115  001F                     	;# 
   116  0081                     	;# 
   117  0085                     	;# 
   118  0086                     	;# 
   119  0087                     	;# 
   120  0088                     	;# 
   121  0089                     	;# 
   122  008C                     	;# 
   123  008D                     	;# 
   124  008E                     	;# 
   125  008F                     	;# 
   126  0090                     	;# 
   127  0091                     	;# 
   128  0092                     	;# 
   129  0093                     	;# 
   130  0093                     	;# 
   131  0093                     	;# 
   132  0094                     	;# 
   133  0095                     	;# 
   134  0096                     	;# 
   135  0097                     	;# 
   136  0098                     	;# 
   137  0099                     	;# 
   138  009A                     	;# 
   139  009B                     	;# 
   140  009C                     	;# 
   141  009D                     	;# 
   142  009E                     	;# 
   143  009F                     	;# 
   144  0105                     	;# 
   145  0107                     	;# 
   146  0108                     	;# 
   147  0109                     	;# 
   148  010C                     	;# 
   149  010C                     	;# 
   150  010D                     	;# 
   151  010E                     	;# 
   152  010F                     	;# 
   153  0185                     	;# 
   154  0187                     	;# 
   155  0188                     	;# 
   156  0189                     	;# 
   157  018C                     	;# 
   158  018D                     	;# 
   159  0000                     	;# 
   160  0001                     	;# 
   161  0002                     	;# 
   162  0003                     	;# 
   163  0004                     	;# 
   164  0005                     	;# 
   165  0006                     	;# 
   166  0007                     	;# 
   167  0008                     	;# 
   168  0009                     	;# 
   169  000A                     	;# 
   170  000B                     	;# 
   171  000C                     	;# 
   172  000D                     	;# 
   173  000E                     	;# 
   174  000E                     	;# 
   175  000F                     	;# 
   176  0010                     	;# 
   177  0011                     	;# 
   178  0012                     	;# 
   179  0013                     	;# 
   180  0014                     	;# 
   181  0015                     	;# 
   182  0015                     	;# 
   183  0016                     	;# 
   184  0017                     	;# 
   185  0018                     	;# 
   186  0019                     	;# 
   187  001A                     	;# 
   188  001B                     	;# 
   189  001B                     	;# 
   190  001C                     	;# 
   191  001D                     	;# 
   192  001E                     	;# 
   193  001F                     	;# 
   194  0081                     	;# 
   195  0085                     	;# 
   196  0086                     	;# 
   197  0087                     	;# 
   198  0088                     	;# 
   199  0089                     	;# 
   200  008C                     	;# 
   201  008D                     	;# 
   202  008E                     	;# 
   203  008F                     	;# 
   204  0090                     	;# 
   205  0091                     	;# 
   206  0092                     	;# 
   207  0093                     	;# 
   208  0093                     	;# 
   209  0093                     	;# 
   210  0094                     	;# 
   211  0095                     	;# 
   212  0096                     	;# 
   213  0097                     	;# 
   214  0098                     	;# 
   215  0099                     	;# 
   216  009A                     	;# 
   217  009B                     	;# 
   218  009C                     	;# 
   219  009D                     	;# 
   220  009E                     	;# 
   221  009F                     	;# 
   222  0105                     	;# 
   223  0107                     	;# 
   224  0108                     	;# 
   225  0109                     	;# 
   226  010C                     	;# 
   227  010C                     	;# 
   228  010D                     	;# 
   229  010E                     	;# 
   230  010F                     	;# 
   231  0185                     	;# 
   232  0187                     	;# 
   233  0188                     	;# 
   234  0189                     	;# 
   235  018C                     	;# 
   236  018D                     	;# 
   237  0000                     	;# 
   238  0001                     	;# 
   239  0002                     	;# 
   240  0003                     	;# 
   241  0004                     	;# 
   242  0005                     	;# 
   243  0006                     	;# 
   244  0007                     	;# 
   245  0008                     	;# 
   246  0009                     	;# 
   247  000A                     	;# 
   248  000B                     	;# 
   249  000C                     	;# 
   250  000D                     	;# 
   251  000E                     	;# 
   252  000E                     	;# 
   253  000F                     	;# 
   254  0010                     	;# 
   255  0011                     	;# 
   256  0012                     	;# 
   257  0013                     	;# 
   258  0014                     	;# 
   259  0015                     	;# 
   260  0015                     	;# 
   261  0016                     	;# 
   262  0017                     	;# 
   263  0018                     	;# 
   264  0019                     	;# 
   265  001A                     	;# 
   266  001B                     	;# 
   267  001B                     	;# 
   268  001C                     	;# 
   269  001D                     	;# 
   270  001E                     	;# 
   271  001F                     	;# 
   272  0081                     	;# 
   273  0085                     	;# 
   274  0086                     	;# 
   275  0087                     	;# 
   276  0088                     	;# 
   277  0089                     	;# 
   278  008C                     	;# 
   279  008D                     	;# 
   280  008E                     	;# 
   281  008F                     	;# 
   282  0090                     	;# 
   283  0091                     	;# 
   284  0092                     	;# 
   285  0093                     	;# 
   286  0093                     	;# 
   287  0093                     	;# 
   288  0094                     	;# 
   289  0095                     	;# 
   290  0096                     	;# 
   291  0097                     	;# 
   292  0098                     	;# 
   293  0099                     	;# 
   294  009A                     	;# 
   295  009B                     	;# 
   296  009C                     	;# 
   297  009D                     	;# 
   298  009E                     	;# 
   299  009F                     	;# 
   300  0105                     	;# 
   301  0107                     	;# 
   302  0108                     	;# 
   303  0109                     	;# 
   304  010C                     	;# 
   305  010C                     	;# 
   306  010D                     	;# 
   307  010E                     	;# 
   308  010F                     	;# 
   309  0185                     	;# 
   310  0187                     	;# 
   311  0188                     	;# 
   312  0189                     	;# 
   313  018C                     	;# 
   314  018D                     	;# 
   315  0000                     	;# 
   316  0001                     	;# 
   317  0002                     	;# 
   318  0003                     	;# 
   319  0004                     	;# 
   320  0005                     	;# 
   321  0006                     	;# 
   322  0007                     	;# 
   323  0008                     	;# 
   324  0009                     	;# 
   325  000A                     	;# 
   326  000B                     	;# 
   327  000C                     	;# 
   328  000D                     	;# 
   329  000E                     	;# 
   330  000E                     	;# 
   331  000F                     	;# 
   332  0010                     	;# 
   333  0011                     	;# 
   334  0012                     	;# 
   335  0013                     	;# 
   336  0014                     	;# 
   337  0015                     	;# 
   338  0015                     	;# 
   339  0016                     	;# 
   340  0017                     	;# 
   341  0018                     	;# 
   342  0019                     	;# 
   343  001A                     	;# 
   344  001B                     	;# 
   345  001B                     	;# 
   346  001C                     	;# 
   347  001D                     	;# 
   348  001E                     	;# 
   349  001F                     	;# 
   350  0081                     	;# 
   351  0085                     	;# 
   352  0086                     	;# 
   353  0087                     	;# 
   354  0088                     	;# 
   355  0089                     	;# 
   356  008C                     	;# 
   357  008D                     	;# 
   358  008E                     	;# 
   359  008F                     	;# 
   360  0090                     	;# 
   361  0091                     	;# 
   362  0092                     	;# 
   363  0093                     	;# 
   364  0093                     	;# 
   365  0093                     	;# 
   366  0094                     	;# 
   367  0095                     	;# 
   368  0096                     	;# 
   369  0097                     	;# 
   370  0098                     	;# 
   371  0099                     	;# 
   372  009A                     	;# 
   373  009B                     	;# 
   374  009C                     	;# 
   375  009D                     	;# 
   376  009E                     	;# 
   377  009F                     	;# 
   378  0105                     	;# 
   379  0107                     	;# 
   380  0108                     	;# 
   381  0109                     	;# 
   382  010C                     	;# 
   383  010C                     	;# 
   384  010D                     	;# 
   385  010E                     	;# 
   386  010F                     	;# 
   387  0185                     	;# 
   388  0187                     	;# 
   389  0188                     	;# 
   390  0189                     	;# 
   391  018C                     	;# 
   392  018D                     	;# 
   393                           
   394                           	psect	strings
   395  1000                     __pstrings:	
   396  1000                     stringtab:	
   397  1000                     __stringtab:	
   398                           
   399                           ;	String table - string pointers are 1 byte each
   400  1000  1BFF               	btfsc	btemp+1,7
   401  1001  280A               	ljmp	stringcode
   402  1002  1383               	bcf	3,7
   403  1003  187F               	btfsc	btemp+1,0
   404  1004  1783               	bsf	3,7
   405  1005  0800               	movf	0,w
   406  1006  0A84               	incf	4,f
   407  1007  1903               	skipnz
   408  1008  0AFF               	incf	btemp+1,f
   409  1009  0008               	return
   410  100A                     stringcode:	
   411  100A                     stringdir:	
   412  100A  3010               	movlw	high stringdir
   413  100B  008A               	movwf	10
   414  100C  0804               	movf	4,w
   415  100D  0A84               	incf	4,f
   416  100E  0782               	addwf	2,f
   417  100F                     __stringbase:	
   418  100F  3400               	retlw	0
   419  1010                     __end_of__stringtab:	
   420  1010                     __powers_:	
   421  1010  3400               	retlw	0
   422  1011  3400               	retlw	0
   423  1012  3480               	retlw	128
   424  1013  343F               	retlw	63
   425  1014  3400               	retlw	0
   426  1015  3400               	retlw	0
   427  1016  3420               	retlw	32
   428  1017  3441               	retlw	65
   429  1018  3400               	retlw	0
   430  1019  3400               	retlw	0
   431  101A  34C8               	retlw	200
   432  101B  3442               	retlw	66
   433  101C  3400               	retlw	0
   434  101D  3400               	retlw	0
   435  101E  347A               	retlw	122
   436  101F  3444               	retlw	68
   437  1020  3400               	retlw	0
   438  1021  3440               	retlw	64
   439  1022  341C               	retlw	28
   440  1023  3446               	retlw	70
   441  1024  3400               	retlw	0
   442  1025  3450               	retlw	80
   443  1026  34C3               	retlw	195
   444  1027  3447               	retlw	71
   445  1028  3400               	retlw	0
   446  1029  3424               	retlw	36
   447  102A  3474               	retlw	116
   448  102B  3449               	retlw	73
   449  102C  3480               	retlw	128
   450  102D  3496               	retlw	150
   451  102E  3418               	retlw	24
   452  102F  344B               	retlw	75
   453  1030  3420               	retlw	32
   454  1031  34BC               	retlw	188
   455  1032  34BE               	retlw	190
   456  1033  344C               	retlw	76
   457  1034  3428               	retlw	40
   458  1035  346B               	retlw	107
   459  1036  346E               	retlw	110
   460  1037  344E               	retlw	78
   461  1038  34F9               	retlw	249
   462  1039  3402               	retlw	2
   463  103A  3415               	retlw	21
   464  103B  3450               	retlw	80
   465  103C  34EC               	retlw	236
   466  103D  3478               	retlw	120
   467  103E  34AD               	retlw	173
   468  103F  3460               	retlw	96
   469  1040  34CA               	retlw	202
   470  1041  34F2               	retlw	242
   471  1042  3449               	retlw	73
   472  1043  3471               	retlw	113
   473  1044                     __end_of__powers_:	
   474  1044                     __npowers_:	
   475  1044  3400               	retlw	0
   476  1045  3400               	retlw	0
   477  1046  3480               	retlw	128
   478  1047  343F               	retlw	63
   479  1048  34CD               	retlw	205
   480  1049  34CC               	retlw	204
   481  104A  34CC               	retlw	204
   482  104B  343D               	retlw	61
   483  104C  340A               	retlw	10
   484  104D  34D7               	retlw	215
   485  104E  3423               	retlw	35
   486  104F  343C               	retlw	60
   487  1050  346F               	retlw	111
   488  1051  3412               	retlw	18
   489  1052  3483               	retlw	131
   490  1053  343A               	retlw	58
   491  1054  3417               	retlw	23
   492  1055  34B7               	retlw	183
   493  1056  34D1               	retlw	209
   494  1057  3438               	retlw	56
   495  1058  34AC               	retlw	172
   496  1059  34C5               	retlw	197
   497  105A  3427               	retlw	39
   498  105B  3437               	retlw	55
   499  105C  34BD               	retlw	189
   500  105D  3437               	retlw	55
   501  105E  3486               	retlw	134
   502  105F  3435               	retlw	53
   503  1060  3495               	retlw	149
   504  1061  34BF               	retlw	191
   505  1062  34D6               	retlw	214
   506  1063  3433               	retlw	51
   507  1064  3477               	retlw	119
   508  1065  34CC               	retlw	204
   509  1066  342B               	retlw	43
   510  1067  3432               	retlw	50
   511  1068  345F               	retlw	95
   512  1069  3470               	retlw	112
   513  106A  3489               	retlw	137
   514  106B  3430               	retlw	48
   515  106C  34FF               	retlw	255
   516  106D  34E6               	retlw	230
   517  106E  34DB               	retlw	219
   518  106F  342E               	retlw	46
   519  1070  3408               	retlw	8
   520  1071  34E5               	retlw	229
   521  1072  343C               	retlw	60
   522  1073  341E               	retlw	30
   523  1074  3460               	retlw	96
   524  1075  3442               	retlw	66
   525  1076  34A2               	retlw	162
   526  1077  340D               	retlw	13
   527  1078                     __end_of__npowers_:	
   528  1078                     _dpowers:	
   529  1078  3401               	retlw	1
   530  1079  3400               	retlw	0
   531  107A  3400               	retlw	0
   532  107B  3400               	retlw	0
   533  107C  340A               	retlw	10
   534  107D  3400               	retlw	0
   535  107E  3400               	retlw	0
   536  107F  3400               	retlw	0
   537  1080  3464               	retlw	100
   538  1081  3400               	retlw	0
   539  1082  3400               	retlw	0
   540  1083  3400               	retlw	0
   541  1084  34E8               	retlw	232
   542  1085  3403               	retlw	3
   543  1086  3400               	retlw	0
   544  1087  3400               	retlw	0
   545  1088  3410               	retlw	16
   546  1089  3427               	retlw	39
   547  108A  3400               	retlw	0
   548  108B  3400               	retlw	0
   549  108C  34A0               	retlw	160
   550  108D  3486               	retlw	134
   551  108E  3401               	retlw	1
   552  108F  3400               	retlw	0
   553  1090  3440               	retlw	64
   554  1091  3442               	retlw	66
   555  1092  340F               	retlw	15
   556  1093  3400               	retlw	0
   557  1094  3480               	retlw	128
   558  1095  3496               	retlw	150
   559  1096  3498               	retlw	152
   560  1097  3400               	retlw	0
   561  1098  3400               	retlw	0
   562  1099  34E1               	retlw	225
   563  109A  34F5               	retlw	245
   564  109B  3405               	retlw	5
   565  109C  3400               	retlw	0
   566  109D  34CA               	retlw	202
   567  109E  349A               	retlw	154
   568  109F  343B               	retlw	59
   569  10A0                     __end_of_dpowers:	
   570  0006                     _PORTBbits	set	6
   571  001E                     _ADRESH	set	30
   572  0008                     _PORTD	set	8
   573  0007                     _PORTC	set	7
   574  0006                     _PORTB	set	6
   575  0005                     _PORTA	set	5
   576  000C                     _PIR1bits	set	12
   577  001F                     _ADCON0bits	set	31
   578  000B                     _INTCONbits	set	11
   579  009F                     _ADCON1	set	159
   580  008C                     _PIE1bits	set	140
   581  0088                     _TRISD	set	136
   582  0087                     _TRISC	set	135
   583  0086                     _TRISB	set	134
   584  0085                     _TRISA	set	133
   585  0188                     _ANSEL	set	392
   586  10A0                     STR_1:	
   587  10A0  3448               	retlw	72	;'H'
   588  10A1  346F               	retlw	111	;'o'
   589  10A2  346C               	retlw	108	;'l'
   590  10A3  3461               	retlw	97	;'a'
   591  10A4  3420               	retlw	32	;' '
   592  10A5  344D               	retlw	77	;'M'
   593  10A6  3475               	retlw	117	;'u'
   594  10A7  346E               	retlw	110	;'n'
   595  10A8  3464               	retlw	100	;'d'
   596  10A9  346F               	retlw	111	;'o'
   597  10AA  3400               	retlw	0
   598  10AB                     STR_3:	
   599  10AB  3425               	retlw	37	;'%'
   600  10AC  342E               	retlw	46	;'.'
   601  10AD  3432               	retlw	50	;'2'
   602  10AE  3466               	retlw	102	;'f'
   603  10AF  3400               	retlw	0
   604  10B0                     STR_2:	
   605  10B0  3425               	retlw	37	;'%'
   606  10B1  3464               	retlw	100	;'d'
   607  10B2  3400               	retlw	0
   608                           
   609                           ; #config settings
   610  0000                     
   611                           	psect	cinit
   612  000F                     start_initialization:	
   613  000F                     __initialization:	
   614                           
   615                           ; Clear objects allocated to COMMON
   616  000F  01FB               	clrf	__pbssCOMMON& (0+127)
   617                           
   618                           ; Clear objects allocated to BANK1
   619  0010  1683               	bsf	3,5	;RP0=1, select bank1
   620  0011  1303               	bcf	3,6	;RP1=0, select bank1
   621  0012  01D6               	clrf	__pbssBANK1& (0+127)
   622  0013  01D7               	clrf	(__pbssBANK1+1)& (0+127)
   623  0014  01D8               	clrf	(__pbssBANK1+2)& (0+127)
   624  0015  01D9               	clrf	(__pbssBANK1+3)& (0+127)
   625  0016  01DA               	clrf	(__pbssBANK1+4)& (0+127)
   626  0017  01DB               	clrf	(__pbssBANK1+5)& (0+127)
   627  0018  01DC               	clrf	(__pbssBANK1+6)& (0+127)
   628  0019  01DD               	clrf	(__pbssBANK1+7)& (0+127)
   629  001A  01DE               	clrf	(__pbssBANK1+8)& (0+127)
   630  001B  01DF               	clrf	(__pbssBANK1+9)& (0+127)
   631  001C                     end_of_initialization:	
   632                           ;End of C runtime variable initialization code
   633                           
   634  001C                     __end_of__initialization:	
   635  001C  0183               	clrf	3
   636  001D  120A  158A  2871   	ljmp	_main	;jump to C main() function
   637                           
   638                           	psect	bssCOMMON
   639  007B                     __pbssCOMMON:	
   640  007B                     _adc2:	
   641  007B                     	ds	1
   642                           
   643                           	psect	bssBANK1
   644  00D6                     __pbssBANK1:	
   645  00D6                     _voltaje:	
   646  00D6                     	ds	4
   647  00DA                     _decimal:	
   648  00DA                     	ds	4
   649  00DE                     _adc:	
   650  00DE                     	ds	1
   651  00DF                     _ready:	
   652  00DF                     	ds	1
   653                           
   654                           	psect	cstackBANK1
   655  00A0                     __pcstackBANK1:	
   656  00A0                     ?___flsub:	
   657  00A0                     ___flsub@a:	
   658                           ; 4 bytes @ 0x0
   659                           
   660                           
   661                           ; 4 bytes @ 0x0
   662  00A0                     	ds	4
   663  00A4                     ___flsub@b:	
   664                           
   665                           ; 4 bytes @ 0x4
   666  00A4                     	ds	4
   667  00A8                     ??_sprintf:	
   668                           
   669                           ; 1 bytes @ 0x8
   670  00A8                     	ds	5
   671  00AD                     _sprintf$1025:	
   672                           
   673                           ; 4 bytes @ 0xD
   674  00AD                     	ds	4
   675  00B1                     sprintf@ap:	
   676                           
   677                           ; 1 bytes @ 0x11
   678  00B1                     	ds	1
   679  00B2                     sprintf@flag:	
   680                           
   681                           ; 2 bytes @ 0x12
   682  00B2                     	ds	2
   683  00B4                     sprintf@eexp:	
   684                           
   685                           ; 2 bytes @ 0x14
   686  00B4                     	ds	2
   687  00B6                     sprintf@tmpval:	
   688                           
   689                           ; 4 bytes @ 0x16
   690  00B6                     	ds	4
   691  00BA                     sprintf@val:	
   692                           
   693                           ; 4 bytes @ 0x1A
   694  00BA                     	ds	4
   695  00BE                     sprintf@sp:	
   696                           
   697                           ; 1 bytes @ 0x1E
   698  00BE                     	ds	1
   699  00BF                     sprintf@fval:	
   700                           
   701                           ; 4 bytes @ 0x1F
   702  00BF                     	ds	4
   703  00C3                     sprintf@prec:	
   704                           
   705                           ; 2 bytes @ 0x23
   706  00C3                     	ds	2
   707  00C5                     sprintf@c:	
   708                           
   709                           ; 1 bytes @ 0x25
   710  00C5                     	ds	1
   711  00C6                     ??_lcd_write_int:	
   712  00C6                     ?_lcd_write_float:	
   713                           ; 1 bytes @ 0x26
   714                           
   715  00C6                     lcd_write_float@numero:	
   716                           ; 1 bytes @ 0x26
   717                           
   718                           
   719                           ; 4 bytes @ 0x26
   720  00C6                     	ds	3
   721  00C9                     lcd_write_int@numero:	
   722                           
   723                           ; 1 bytes @ 0x29
   724  00C9                     	ds	1
   725  00CA                     lcd_write_int@buffer:	
   726  00CA                     lcd_write_float@buffer:	
   727                           ; 4 bytes @ 0x2A
   728                           
   729                           
   730                           ; 4 bytes @ 0x2A
   731  00CA                     	ds	4
   732  00CE                     ??_main:	
   733                           
   734                           ; 1 bytes @ 0x2E
   735  00CE                     	ds	4
   736  00D2                     _main$1021:	
   737                           
   738                           ; 4 bytes @ 0x32
   739  00D2                     	ds	4
   740                           
   741                           	psect	cstackCOMMON
   742  0070                     __pcstackCOMMON:	
   743  0070                     ?_isdigit:	
   744  0070                     ?_initLCD:	
   745                           ; 1 bit 
   746                           
   747  0070                     ?_initADC:	
   748                           ; 1 bytes @ 0x0
   749                           
   750  0070                     ?_lcd_clr:	
   751                           ; 1 bytes @ 0x0
   752                           
   753  0070                     ?_lcd_write_int:	
   754                           ; 1 bytes @ 0x0
   755                           
   756  0070                     ?_lcd_cmd:	
   757                           ; 1 bytes @ 0x0
   758                           
   759  0070                     ?_ISR:	
   760                           ; 1 bytes @ 0x0
   761                           
   762  0070                     ??_ISR:	
   763                           ; 1 bytes @ 0x0
   764                           
   765  0070                     ?_main:	
   766                           ; 1 bytes @ 0x0
   767                           
   768  0070                     ?_lcd_write_char:	
   769                           ; 1 bytes @ 0x0
   770                           
   771                           
   772                           ; 1 bytes @ 0x0
   773  0070                     	ds	2
   774  0072                     ?___fleq:	
   775  0072                     ?___flge:	
   776                           ; 1 bit 
   777                           
   778  0072                     ??_initADC:	
   779                           ; 1 bit 
   780                           
   781  0072                     ??_lcd_cmd:	
   782                           ; 1 bytes @ 0x2
   783                           
   784  0072                     ??_isdigit:	
   785                           ; 1 bytes @ 0x2
   786                           
   787  0072                     ??_lcd_write_char:	
   788                           ; 1 bytes @ 0x2
   789                           
   790  0072                     ?__Umul8_16:	
   791                           ; 1 bytes @ 0x2
   792                           
   793  0072                     ?___wmul:	
   794                           ; 2 bytes @ 0x2
   795                           
   796  0072                     ?___awmod:	
   797                           ; 2 bytes @ 0x2
   798                           
   799  0072                     ?___lwmod:	
   800                           ; 2 bytes @ 0x2
   801                           
   802  0072                     ?__tdiv_to_l_:	
   803                           ; 2 bytes @ 0x2
   804                           
   805  0072                     ?__div_to_l_:	
   806                           ; 4 bytes @ 0x2
   807                           
   808  0072                     ?___lldiv:	
   809                           ; 4 bytes @ 0x2
   810                           
   811  0072                     ?___flneg:	
   812                           ; 4 bytes @ 0x2
   813                           
   814  0072                     ?___xxtofl:	
   815                           ; 4 bytes @ 0x2
   816                           
   817  0072                     _isdigit$845:	
   818                           ; 4 bytes @ 0x2
   819                           
   820  0072                     __Umul8_16@multiplicand:	
   821                           ; 1 bytes @ 0x2
   822                           
   823  0072                     ___wmul@multiplier:	
   824                           ; 1 bytes @ 0x2
   825                           
   826  0072                     ___awmod@divisor:	
   827                           ; 2 bytes @ 0x2
   828                           
   829  0072                     ___lwmod@divisor:	
   830                           ; 2 bytes @ 0x2
   831                           
   832  0072                     ___lldiv@divisor:	
   833                           ; 2 bytes @ 0x2
   834                           
   835  0072                     __div_to_l_@f1:	
   836                           ; 4 bytes @ 0x2
   837                           
   838  0072                     ___fleq@ff1:	
   839                           ; 4 bytes @ 0x2
   840                           
   841  0072                     ___flge@ff1:	
   842                           ; 4 bytes @ 0x2
   843                           
   844  0072                     ___flneg@f1:	
   845                           ; 4 bytes @ 0x2
   846                           
   847  0072                     __tdiv_to_l_@f1:	
   848                           ; 4 bytes @ 0x2
   849                           
   850  0072                     ___xxtofl@val:	
   851                           ; 4 bytes @ 0x2
   852                           
   853                           
   854                           ; 4 bytes @ 0x2
   855  0072                     	ds	1
   856  0073                     isdigit@c:	
   857                           
   858                           ; 1 bytes @ 0x3
   859  0073                     	ds	1
   860  0074                     ??__Umul8_16:	
   861  0074                     lcd_cmd@command:	
   862                           ; 1 bytes @ 0x4
   863                           
   864  0074                     lcd_write_char@var:	
   865                           ; 1 bytes @ 0x4
   866                           
   867  0074                     initADC@analog:	
   868                           ; 1 bytes @ 0x4
   869                           
   870  0074                     ___wmul@multiplicand:	
   871                           ; 1 bytes @ 0x4
   872                           
   873  0074                     ___awmod@dividend:	
   874                           ; 2 bytes @ 0x4
   875                           
   876  0074                     ___lwmod@dividend:	
   877                           ; 2 bytes @ 0x4
   878                           
   879                           
   880                           ; 2 bytes @ 0x4
   881  0074                     	ds	1
   882  0075                     ??_initLCD:	
   883  0075                     ?_lcd_write_string:	
   884                           ; 1 bytes @ 0x5
   885                           
   886  0075                     ??_lcd_clr:	
   887                           ; 1 bytes @ 0x5
   888                           
   889  0075                     ?_lcd_set_cursor:	
   890                           ; 1 bytes @ 0x5
   891                           
   892  0075                     lcd_set_cursor@posy:	
   893                           ; 1 bytes @ 0x5
   894                           
   895  0075                     lcd_write_string@var:	
   896                           ; 1 bytes @ 0x5
   897                           
   898                           
   899                           ; 2 bytes @ 0x5
   900  0075                     	ds	1
   901  0076                     ??_lcd_set_cursor:	
   902  0076                     ??___wmul:	
   903                           ; 1 bytes @ 0x6
   904                           
   905  0076                     ??___awmod:	
   906                           ; 1 bytes @ 0x6
   907                           
   908  0076                     ??___flneg:	
   909                           ; 1 bytes @ 0x6
   910                           
   911  0076                     ??___lwmod:	
   912                           ; 1 bytes @ 0x6
   913                           
   914  0076                     ??___xxtofl:	
   915                           ; 1 bytes @ 0x6
   916                           
   917  0076                     lcd_set_cursor@posx:	
   918                           ; 1 bytes @ 0x6
   919                           
   920  0076                     ___wmul@product:	
   921                           ; 1 bytes @ 0x6
   922                           
   923  0076                     __Umul8_16@product:	
   924                           ; 2 bytes @ 0x6
   925                           
   926  0076                     ___lldiv@dividend:	
   927                           ; 2 bytes @ 0x6
   928                           
   929  0076                     __div_to_l_@f2:	
   930                           ; 4 bytes @ 0x6
   931                           
   932  0076                     ___fleq@ff2:	
   933                           ; 4 bytes @ 0x6
   934                           
   935  0076                     ___flge@ff2:	
   936                           ; 4 bytes @ 0x6
   937                           
   938  0076                     __tdiv_to_l_@f2:	
   939                           ; 4 bytes @ 0x6
   940                           
   941                           
   942                           ; 4 bytes @ 0x6
   943  0076                     	ds	1
   944  0077                     ??_lcd_write_string:	
   945  0077                     ___awmod@counter:	
   946                           ; 1 bytes @ 0x7
   947                           
   948  0077                     ___lwmod@counter:	
   949                           ; 1 bytes @ 0x7
   950                           
   951                           
   952                           ; 1 bytes @ 0x7
   953  0077                     	ds	1
   954  0078                     ??___lwdiv:	
   955  0078                     ___awmod@sign:	
   956                           ; 1 bytes @ 0x8
   957                           
   958  0078                     __Umul8_16@word_mpld:	
   959                           ; 1 bytes @ 0x8
   960                           
   961                           
   962                           ; 2 bytes @ 0x8
   963  0078                     	ds	1
   964  0079                     ??___awdiv:	
   965                           
   966                           ; 1 bytes @ 0x9
   967  0079                     	ds	1
   968  007A                     ??__div_to_l_:	
   969  007A                     ??___lldiv:	
   970                           ; 1 bytes @ 0xA
   971                           
   972  007A                     __Umul8_16@multiplier:	
   973                           ; 1 bytes @ 0xA
   974                           
   975                           
   976                           ; 1 bytes @ 0xA
   977  007A                     	ds	1
   978  007B                     ??___flsub:	
   979                           
   980                           	psect	cstackBANK0
   981  0020                     __pcstackBANK0:	
   982                           ; 1 bytes @ 0xB
   983                           
   984  0020                     ??__tdiv_to_l_:	
   985  0020                     ??___fleq:	
   986                           ; 1 bytes @ 0x0
   987                           
   988  0020                     ??___flge:	
   989                           ; 1 bytes @ 0x0
   990                           
   991  0020                     ?___awdiv:	
   992                           ; 1 bytes @ 0x0
   993                           
   994  0020                     ?___lwdiv:	
   995                           ; 2 bytes @ 0x0
   996                           
   997  0020                     ___xxtofl@sign:	
   998                           ; 2 bytes @ 0x0
   999                           
  1000  0020                     lcd_write_string@i:	
  1001                           ; 1 bytes @ 0x0
  1002                           
  1003  0020                     ___awdiv@divisor:	
  1004                           ; 2 bytes @ 0x0
  1005                           
  1006  0020                     ___lwdiv@divisor:	
  1007                           ; 2 bytes @ 0x0
  1008                           
  1009  0020                     ___lldiv@quotient:	
  1010                           ; 2 bytes @ 0x0
  1011                           
  1012  0020                     __div_to_l_@quot:	
  1013                           ; 4 bytes @ 0x0
  1014                           
  1015                           
  1016                           ; 4 bytes @ 0x0
  1017  0020                     	ds	1
  1018  0021                     ___xxtofl@exp:	
  1019                           
  1020                           ; 1 bytes @ 0x1
  1021  0021                     	ds	1
  1022  0022                     ___awdiv@dividend:	
  1023  0022                     ___lwdiv@dividend:	
  1024                           ; 2 bytes @ 0x2
  1025                           
  1026  0022                     ___xxtofl@arg:	
  1027                           ; 2 bytes @ 0x2
  1028                           
  1029                           
  1030                           ; 4 bytes @ 0x2
  1031  0022                     	ds	2
  1032  0024                     ___lldiv@counter:	
  1033  0024                     ___awdiv@counter:	
  1034                           ; 1 bytes @ 0x4
  1035                           
  1036  0024                     __div_to_l_@cntr:	
  1037                           ; 1 bytes @ 0x4
  1038                           
  1039  0024                     ___lwdiv@counter:	
  1040                           ; 1 bytes @ 0x4
  1041                           
  1042  0024                     __tdiv_to_l_@quot:	
  1043                           ; 1 bytes @ 0x4
  1044                           
  1045                           
  1046                           ; 4 bytes @ 0x4
  1047  0024                     	ds	1
  1048  0025                     ?___llmod:	
  1049  0025                     ___awdiv@sign:	
  1050                           ; 4 bytes @ 0x5
  1051                           
  1052  0025                     __div_to_l_@exp1:	
  1053                           ; 1 bytes @ 0x5
  1054                           
  1055  0025                     ___lwdiv@quotient:	
  1056                           ; 1 bytes @ 0x5
  1057                           
  1058  0025                     ___llmod@divisor:	
  1059                           ; 2 bytes @ 0x5
  1060                           
  1061                           
  1062                           ; 4 bytes @ 0x5
  1063  0025                     	ds	1
  1064  0026                     ___awdiv@quotient:	
  1065                           
  1066                           ; 2 bytes @ 0x6
  1067  0026                     	ds	2
  1068  0028                     ?___flmul:	
  1069  0028                     __tdiv_to_l_@cntr:	
  1070                           ; 4 bytes @ 0x8
  1071                           
  1072  0028                     ___flmul@b:	
  1073                           ; 1 bytes @ 0x8
  1074                           
  1075                           
  1076                           ; 4 bytes @ 0x8
  1077  0028                     	ds	1
  1078  0029                     __tdiv_to_l_@exp1:	
  1079  0029                     ___llmod@dividend:	
  1080                           ; 1 bytes @ 0x9
  1081                           
  1082                           
  1083                           ; 4 bytes @ 0x9
  1084  0029                     	ds	3
  1085  002C                     ___flmul@a:	
  1086                           
  1087                           ; 4 bytes @ 0xC
  1088  002C                     	ds	1
  1089  002D                     ??___llmod:	
  1090                           
  1091                           ; 1 bytes @ 0xD
  1092  002D                     	ds	1
  1093  002E                     ___llmod@counter:	
  1094                           
  1095                           ; 1 bytes @ 0xE
  1096  002E                     	ds	2
  1097  0030                     ??___flmul:	
  1098                           
  1099                           ; 1 bytes @ 0x10
  1100  0030                     	ds	5
  1101  0035                     ___flmul@sign:	
  1102                           
  1103                           ; 1 bytes @ 0x15
  1104  0035                     	ds	1
  1105  0036                     ___flmul@grs:	
  1106                           
  1107                           ; 4 bytes @ 0x16
  1108  0036                     	ds	4
  1109  003A                     ___flmul@aexp:	
  1110                           
  1111                           ; 1 bytes @ 0x1A
  1112  003A                     	ds	1
  1113  003B                     ___flmul@bexp:	
  1114                           
  1115                           ; 1 bytes @ 0x1B
  1116  003B                     	ds	1
  1117  003C                     ___flmul@prod:	
  1118                           
  1119                           ; 4 bytes @ 0x1C
  1120  003C                     	ds	4
  1121  0040                     ___flmul@temp:	
  1122                           
  1123                           ; 2 bytes @ 0x20
  1124  0040                     	ds	2
  1125  0042                     ?_fround:	
  1126  0042                     ?_scale:	
  1127                           ; 4 bytes @ 0x22
  1128                           
  1129                           
  1130                           ; 4 bytes @ 0x22
  1131  0042                     	ds	4
  1132  0046                     ??_fround:	
  1133  0046                     ??_scale:	
  1134                           ; 1 bytes @ 0x26
  1135                           
  1136                           
  1137                           ; 1 bytes @ 0x26
  1138  0046                     	ds	7
  1139  004D                     _fround$1023:	
  1140                           
  1141                           ; 4 bytes @ 0x2D
  1142  004D                     	ds	3
  1143  0050                     _scale$1024:	
  1144                           
  1145                           ; 4 bytes @ 0x30
  1146  0050                     	ds	1
  1147  0051                     _fround$1022:	
  1148                           
  1149                           ; 4 bytes @ 0x31
  1150  0051                     	ds	3
  1151  0054                     scale@scl:	
  1152                           
  1153                           ; 1 bytes @ 0x34
  1154  0054                     	ds	1
  1155  0055                     ?___fltol:	
  1156  0055                     fround@prec:	
  1157                           ; 4 bytes @ 0x35
  1158                           
  1159  0055                     ___fltol@f1:	
  1160                           ; 1 bytes @ 0x35
  1161                           
  1162                           
  1163                           ; 4 bytes @ 0x35
  1164  0055                     	ds	1
  1165  0056                     ?___fladd:	
  1166  0056                     ___fladd@b:	
  1167                           ; 4 bytes @ 0x36
  1168                           
  1169                           
  1170                           ; 4 bytes @ 0x36
  1171  0056                     	ds	3
  1172  0059                     ??___fltol:	
  1173                           
  1174                           ; 1 bytes @ 0x39
  1175  0059                     	ds	1
  1176  005A                     ___fladd@a:	
  1177                           
  1178                           ; 4 bytes @ 0x3A
  1179  005A                     	ds	4
  1180  005E                     ??___fladd:	
  1181  005E                     ___fltol@sign1:	
  1182                           ; 1 bytes @ 0x3E
  1183                           
  1184                           
  1185                           ; 1 bytes @ 0x3E
  1186  005E                     	ds	1
  1187  005F                     ___fltol@exp1:	
  1188                           
  1189                           ; 1 bytes @ 0x3F
  1190  005F                     	ds	7
  1191  0066                     ___fladd@signs:	
  1192                           
  1193                           ; 1 bytes @ 0x46
  1194  0066                     	ds	1
  1195  0067                     ___fladd@aexp:	
  1196                           
  1197                           ; 1 bytes @ 0x47
  1198  0067                     	ds	1
  1199  0068                     ___fladd@bexp:	
  1200                           
  1201                           ; 1 bytes @ 0x48
  1202  0068                     	ds	1
  1203  0069                     ___fladd@grs:	
  1204                           
  1205                           ; 1 bytes @ 0x49
  1206  0069                     	ds	1
  1207  006A                     ?_sprintf:	
  1208  006A                     sprintf@f:	
  1209                           ; 2 bytes @ 0x4A
  1210                           
  1211                           
  1212                           ; 1 bytes @ 0x4A
  1213  006A                     	ds	5
  1214  006F                     ??_lcd_write_float:	
  1215                           
  1216                           ; 1 bytes @ 0x4F
  1217  006F                     	ds	1
  1218                           
  1219                           	psect	maintext
  1220  0871                     __pmaintext:	
  1221 ;;
  1222 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1223 ;;
  1224 ;; *************** function _main *****************
  1225 ;; Defined at:
  1226 ;;		line 47 in file "LCD.c"
  1227 ;; Parameters:    Size  Location     Type
  1228 ;;		None
  1229 ;; Auto vars:     Size  Location     Type
  1230 ;;		None
  1231 ;; Return value:  Size  Location     Type
  1232 ;;                  1    wreg      void 
  1233 ;; Registers used:
  1234 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1235 ;; Tracked objects:
  1236 ;;		On entry : B00/0
  1237 ;;		On exit  : 0/0
  1238 ;;		Unchanged: 0/0
  1239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1240 ;;      Params:         0       0       0       0       0
  1241 ;;      Locals:         0       0       4       0       0
  1242 ;;      Temps:          0       0       4       0       0
  1243 ;;      Totals:         0       0       8       0       0
  1244 ;;Total ram usage:        8 bytes
  1245 ;; Hardware stack levels required when called:    6
  1246 ;; This function calls:
  1247 ;;		___awdiv
  1248 ;;		___wmul
  1249 ;;		___xxtofl
  1250 ;;		_initADC
  1251 ;;		_initLCD
  1252 ;;		_lcd_clr
  1253 ;;		_lcd_set_cursor
  1254 ;;		_lcd_write_float
  1255 ;;		_lcd_write_int
  1256 ;;		_lcd_write_string
  1257 ;; This function is called by:
  1258 ;;		Startup code after reset
  1259 ;; This function uses a non-reentrant model
  1260 ;;
  1261                           
  1262                           
  1263                           ;psect for function _main
  1264  0871                     _main:	
  1265  0871                     l3716:	
  1266                           ;incstack = 0
  1267                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1268                           
  1269                           
  1270                           ;LCD.c: 48:     TRISA = 0b00000011;
  1271  0871  3003               	movlw	3
  1272  0872  1683               	bsf	3,5	;RP0=1, select bank1
  1273  0873  1303               	bcf	3,6	;RP1=0, select bank1
  1274  0874  0085               	movwf	5	;volatile
  1275  0875                     l3718:	
  1276                           
  1277                           ;LCD.c: 49:     TRISB = 0;
  1278  0875  0186               	clrf	6	;volatile
  1279  0876                     l3720:	
  1280                           
  1281                           ;LCD.c: 50:     TRISC = 0;
  1282  0876  0187               	clrf	7	;volatile
  1283  0877                     l3722:	
  1284                           
  1285                           ;LCD.c: 51:     TRISD = 0;
  1286  0877  0188               	clrf	8	;volatile
  1287  0878                     l3724:	
  1288                           
  1289                           ;LCD.c: 53:     ANSEL = 0b00000011;
  1290  0878  3003               	movlw	3
  1291  0879  1683               	bsf	3,5	;RP0=1, select bank3
  1292  087A  1703               	bsf	3,6	;RP1=1, select bank3
  1293  087B  0088               	movwf	8	;volatile
  1294                           
  1295                           ;LCD.c: 56:     PORTA = 0;
  1296  087C  1283               	bcf	3,5	;RP0=0, select bank0
  1297  087D  1303               	bcf	3,6	;RP1=0, select bank0
  1298  087E  0185               	clrf	5	;volatile
  1299                           
  1300                           ;LCD.c: 57:     PORTB = 0;
  1301  087F  0186               	clrf	6	;volatile
  1302                           
  1303                           ;LCD.c: 58:     PORTC = 0;
  1304  0880  0187               	clrf	7	;volatile
  1305                           
  1306                           ;LCD.c: 59:     PORTD = 0;
  1307  0881  0188               	clrf	8	;volatile
  1308  0882                     l3726:	
  1309                           
  1310                           ;LCD.c: 66:     initLCD();
  1311  0882  160A  158A  24B8  120A  158A  	fcall	_initLCD
  1312  0887                     l3728:	
  1313                           
  1314                           ;LCD.c: 67:     initADC(0);
  1315  0887  3000               	movlw	0
  1316  0888  160A  158A  26BE  120A  158A  	fcall	_initADC
  1317  088D                     l3730:	
  1318                           
  1319                           ;LCD.c: 68:     lcd_write_string("Hola Mundo");
  1320  088D  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1321  088E  00F5               	movwf	lcd_write_string@var
  1322  088F  3080               	movlw	128
  1323  0890  00F6               	movwf	lcd_write_string@var+1
  1324  0891  160A  158A  242C  120A  158A  	fcall	_lcd_write_string
  1325  0896                     l3732:	
  1326                           
  1327                           ;LCD.c: 69:     _delay((unsigned long)((1000)*(4000000/4000.0)));
  1328  0896  3006               	movlw	6
  1329  0897  1683               	bsf	3,5	;RP0=1, select bank1
  1330  0898  1303               	bcf	3,6	;RP1=0, select bank1
  1331  0899  00D0               	movwf	(??_main^(0+128)+2)
  1332  089A  3013               	movlw	19
  1333  089B  00CF               	movwf	(??_main^(0+128)+1)
  1334  089C  30AD               	movlw	173
  1335  089D  00CE               	movwf	??_main^(0+128)
  1336  089E                     u6097:	
  1337  089E  0BCE               	decfsz	??_main^(0+128),f
  1338  089F  289E               	goto	u6097
  1339  08A0  0BCF               	decfsz	(??_main^(0+128)+1),f
  1340  08A1  289E               	goto	u6097
  1341  08A2  0BD0               	decfsz	(??_main^(0+128)+2),f
  1342  08A3  289E               	goto	u6097
  1343  08A4                     l3734:	
  1344                           
  1345                           ;LCD.c: 70:     lcd_clr();
  1346  08A4  120A  118A  27F8  120A  158A  	fcall	_lcd_clr
  1347  08A9                     l3736:	
  1348                           
  1349                           ;LCD.c: 71:     lcd_write_int(255);
  1350  08A9  30FF               	movlw	255
  1351  08AA  160A  158A  23CA  120A  158A  	fcall	_lcd_write_int
  1352  08AF                     l3738:	
  1353                           
  1354                           ;LCD.c: 72:     _delay((unsigned long)((1000)*(4000000/4000.0)));
  1355  08AF  3006               	movlw	6
  1356  08B0  1683               	bsf	3,5	;RP0=1, select bank1
  1357  08B1  1303               	bcf	3,6	;RP1=0, select bank1
  1358  08B2  00D0               	movwf	(??_main^(0+128)+2)
  1359  08B3  3013               	movlw	19
  1360  08B4  00CF               	movwf	(??_main^(0+128)+1)
  1361  08B5  30AD               	movlw	173
  1362  08B6  00CE               	movwf	??_main^(0+128)
  1363  08B7                     u6107:	
  1364  08B7  0BCE               	decfsz	??_main^(0+128),f
  1365  08B8  28B7               	goto	u6107
  1366  08B9  0BCF               	decfsz	(??_main^(0+128)+1),f
  1367  08BA  28B7               	goto	u6107
  1368  08BB  0BD0               	decfsz	(??_main^(0+128)+2),f
  1369  08BC  28B7               	goto	u6107
  1370  08BD                     l3740:	
  1371                           
  1372                           ;LCD.c: 73:     lcd_clr();
  1373  08BD  120A  118A  27F8  120A  158A  	fcall	_lcd_clr
  1374  08C2                     l3742:	
  1375                           
  1376                           ;LCD.c: 76:         initADC(0);
  1377  08C2  3000               	movlw	0
  1378  08C3  160A  158A  26BE  120A  158A  	fcall	_initADC
  1379  08C8                     l3744:	
  1380                           
  1381                           ;LCD.c: 77:         if(ready){
  1382  08C8  1683               	bsf	3,5	;RP0=1, select bank1
  1383  08C9  1303               	bcf	3,6	;RP1=0, select bank1
  1384  08CA  085F               	movf	_ready^(0+128),w
  1385  08CB  1903               	btfsc	3,2
  1386  08CC  28CE               	goto	u6081
  1387  08CD  28CF               	goto	u6080
  1388  08CE                     u6081:	
  1389  08CE  28FE               	goto	l3752
  1390  08CF                     u6080:	
  1391  08CF                     l3746:	
  1392                           
  1393                           ;LCD.c: 78:             adc = ADRESH * 5/255;
  1394  08CF  30FF               	movlw	255
  1395  08D0  1283               	bcf	3,5	;RP0=0, select bank0
  1396  08D1  1303               	bcf	3,6	;RP1=0, select bank0
  1397  08D2  00A0               	movwf	___awdiv@divisor
  1398  08D3  3000               	movlw	0
  1399  08D4  00A1               	movwf	___awdiv@divisor+1
  1400  08D5  081E               	movf	30,w	;volatile
  1401  08D6  1683               	bsf	3,5	;RP0=1, select bank1
  1402  08D7  1303               	bcf	3,6	;RP1=0, select bank1
  1403  08D8  00CE               	movwf	??_main^(0+128)
  1404  08D9  01CF               	clrf	(??_main^(0+128)+1)
  1405  08DA  084E               	movf	??_main^(0+128),w
  1406  08DB  00F2               	movwf	___wmul@multiplier
  1407  08DC  084F               	movf	(??_main+1)^(0+128),w
  1408  08DD  00F3               	movwf	___wmul@multiplier+1
  1409  08DE  3005               	movlw	5
  1410  08DF  00F4               	movwf	___wmul@multiplicand
  1411  08E0  3000               	movlw	0
  1412  08E1  00F5               	movwf	___wmul@multiplicand+1
  1413  08E2  160A  158A  237E  120A  158A  	fcall	___wmul
  1414  08E7  0873               	movf	?___wmul+1,w
  1415  08E8  1283               	bcf	3,5	;RP0=0, select bank0
  1416  08E9  1303               	bcf	3,6	;RP1=0, select bank0
  1417  08EA  00A3               	movwf	___awdiv@dividend+1
  1418  08EB  0872               	movf	?___wmul,w
  1419  08EC  00A2               	movwf	___awdiv@dividend
  1420  08ED  120A  158A  2008  120A  158A  	fcall	___awdiv
  1421  08F2  1283               	bcf	3,5	;RP0=0, select bank0
  1422  08F3  1303               	bcf	3,6	;RP1=0, select bank0
  1423  08F4  0820               	movf	?___awdiv,w
  1424  08F5  1683               	bsf	3,5	;RP0=1, select bank1
  1425  08F6  1303               	bcf	3,6	;RP1=0, select bank1
  1426  08F7  00D0               	movwf	(??_main+2)^(0+128)
  1427  08F8  0850               	movf	(??_main+2)^(0+128),w
  1428  08F9  00DE               	movwf	_adc^(0+128)
  1429  08FA                     l3748:	
  1430                           
  1431                           ;LCD.c: 79:             ready = 0;
  1432  08FA  01DF               	clrf	_ready^(0+128)
  1433  08FB                     l3750:	
  1434                           
  1435                           ;LCD.c: 80:             ADCON0bits.GO_DONE = 1;
  1436  08FB  1283               	bcf	3,5	;RP0=0, select bank0
  1437  08FC  1303               	bcf	3,6	;RP1=0, select bank0
  1438  08FD  149F               	bsf	31,1	;volatile
  1439  08FE                     l3752:	
  1440                           
  1441                           ;LCD.c: 82:         PORTC = adc;
  1442  08FE  1683               	bsf	3,5	;RP0=1, select bank1
  1443  08FF  1303               	bcf	3,6	;RP1=0, select bank1
  1444  0900  085E               	movf	_adc^(0+128),w
  1445  0901  1283               	bcf	3,5	;RP0=0, select bank0
  1446  0902  1303               	bcf	3,6	;RP1=0, select bank0
  1447  0903  0087               	movwf	7	;volatile
  1448  0904                     l3754:	
  1449                           
  1450                           ;LCD.c: 83:         lcd_set_cursor (1,1);
  1451  0904  01F5               	clrf	lcd_set_cursor@posy
  1452  0905  0AF5               	incf	lcd_set_cursor@posy,f
  1453  0906  3001               	movlw	1
  1454  0907  160A  158A  2363  120A  158A  	fcall	_lcd_set_cursor
  1455  090C                     l3756:	
  1456                           
  1457                           ;LCD.c: 84:         lcd_write_float(adc);
  1458  090C  1683               	bsf	3,5	;RP0=1, select bank1
  1459  090D  1303               	bcf	3,6	;RP1=0, select bank1
  1460  090E  085E               	movf	_adc^(0+128),w
  1461  090F  00CE               	movwf	??_main^(0+128)
  1462  0910  01CF               	clrf	(??_main^(0+128)+1)
  1463  0911  01D0               	clrf	(??_main^(0+128)+2)
  1464  0912  01D1               	clrf	(??_main^(0+128)+3)
  1465  0913  0851               	movf	(??_main+3)^(0+128),w
  1466  0914  00F5               	movwf	___xxtofl@val+3
  1467  0915  0850               	movf	(??_main+2)^(0+128),w
  1468  0916  00F4               	movwf	___xxtofl@val+2
  1469  0917  084F               	movf	(??_main+1)^(0+128),w
  1470  0918  00F3               	movwf	___xxtofl@val+1
  1471  0919  084E               	movf	??_main^(0+128),w
  1472  091A  00F2               	movwf	___xxtofl@val
  1473  091B  3000               	movlw	0
  1474  091C  160A  118A  2134  120A  158A  	fcall	___xxtofl
  1475  0921  0875               	movf	?___xxtofl+3,w
  1476  0922  1683               	bsf	3,5	;RP0=1, select bank1
  1477  0923  1303               	bcf	3,6	;RP1=0, select bank1
  1478  0924  00D5               	movwf	(_main$1021+3)^(0+128)
  1479  0925  0874               	movf	?___xxtofl+2,w
  1480  0926  00D4               	movwf	(_main$1021+2)^(0+128)
  1481  0927  0873               	movf	?___xxtofl+1,w
  1482  0928  00D3               	movwf	(_main$1021+1)^(0+128)
  1483  0929  0872               	movf	?___xxtofl,w
  1484  092A  00D2               	movwf	_main$1021^(0+128)
  1485  092B                     l3758:	
  1486                           
  1487                           ;LCD.c: 84:         lcd_write_float(adc);
  1488  092B  0855               	movf	(_main$1021+3)^(0+128),w
  1489  092C  00C9               	movwf	(lcd_write_float@numero+3)^(0+128)
  1490  092D  0854               	movf	(_main$1021+2)^(0+128),w
  1491  092E  00C8               	movwf	(lcd_write_float@numero+2)^(0+128)
  1492  092F  0853               	movf	(_main$1021+1)^(0+128),w
  1493  0930  00C7               	movwf	(lcd_write_float@numero+1)^(0+128)
  1494  0931  0852               	movf	_main$1021^(0+128),w
  1495  0932  00C6               	movwf	lcd_write_float@numero^(0+128)
  1496  0933  120A  118A  27CA  120A  158A  	fcall	_lcd_write_float
  1497  0938  28C2               	goto	l3742
  1498  0939  120A  118A  280C   	ljmp	start
  1499  093C                     __end_of_main:	
  1500                           
  1501                           	psect	text1
  1502  1BCA                     __ptext1:	
  1503 ;; *************** function _lcd_write_int *****************
  1504 ;; Defined at:
  1505 ;;		line 65 in file "LCD_Init.c"
  1506 ;; Parameters:    Size  Location     Type
  1507 ;;  numero          1    wreg     unsigned char 
  1508 ;; Auto vars:     Size  Location     Type
  1509 ;;  numero          1   41[BANK1 ] unsigned char 
  1510 ;;  buffer          4   42[BANK1 ] unsigned char [4]
  1511 ;; Return value:  Size  Location     Type
  1512 ;;                  1    wreg      void 
  1513 ;; Registers used:
  1514 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1515 ;; Tracked objects:
  1516 ;;		On entry : 0/0
  1517 ;;		On exit  : 0/0
  1518 ;;		Unchanged: 0/0
  1519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1520 ;;      Params:         0       0       0       0       0
  1521 ;;      Locals:         0       0       5       0       0
  1522 ;;      Temps:          0       0       3       0       0
  1523 ;;      Totals:         0       0       8       0       0
  1524 ;;Total ram usage:        8 bytes
  1525 ;; Hardware stack levels used:    1
  1526 ;; Hardware stack levels required when called:    5
  1527 ;; This function calls:
  1528 ;;		_lcd_write_string
  1529 ;;		_sprintf
  1530 ;; This function is called by:
  1531 ;;		_main
  1532 ;; This function uses a non-reentrant model
  1533 ;;
  1534                           
  1535                           
  1536                           ;psect for function _lcd_write_int
  1537  1BCA                     _lcd_write_int:	
  1538                           
  1539                           ;incstack = 0
  1540                           ; Regs used in _lcd_write_int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1541                           ;lcd_write_int@numero stored from wreg
  1542  1BCA  1683               	bsf	3,5	;RP0=1, select bank1
  1543  1BCB  1303               	bcf	3,6	;RP1=0, select bank1
  1544  1BCC  00C9               	movwf	lcd_write_int@numero^(0+128)
  1545  1BCD                     l3712:	
  1546                           
  1547                           ;LCD_Init.c: 66:     char buffer [4];;LCD_Init.c: 67:     sprintf (buffer, "%d", numero)
      +                          ;
  1548  1BCD  30A1               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1549  1BCE  00C6               	movwf	??_lcd_write_int^(0+128)
  1550  1BCF  0846               	movf	??_lcd_write_int^(0+128),w
  1551  1BD0  1283               	bcf	3,5	;RP0=0, select bank0
  1552  1BD1  1303               	bcf	3,6	;RP1=0, select bank0
  1553  1BD2  00EA               	movwf	sprintf@f
  1554  1BD3  1683               	bsf	3,5	;RP0=1, select bank1
  1555  1BD4  1303               	bcf	3,6	;RP1=0, select bank1
  1556  1BD5  0849               	movf	lcd_write_int@numero^(0+128),w
  1557  1BD6  00C7               	movwf	(??_lcd_write_int+1)^(0+128)
  1558  1BD7  01C8               	clrf	((??_lcd_write_int+1)^(0+128)+1)
  1559  1BD8  0847               	movf	(??_lcd_write_int+1)^(0+128),w
  1560  1BD9  1283               	bcf	3,5	;RP0=0, select bank0
  1561  1BDA  1303               	bcf	3,6	;RP1=0, select bank0
  1562  1BDB  00EB               	movwf	?_sprintf+1
  1563  1BDC  1683               	bsf	3,5	;RP0=1, select bank1
  1564  1BDD  1303               	bcf	3,6	;RP1=0, select bank1
  1565  1BDE  0848               	movf	(??_lcd_write_int+2)^(0+128),w
  1566  1BDF  1283               	bcf	3,5	;RP0=0, select bank0
  1567  1BE0  1303               	bcf	3,6	;RP1=0, select bank0
  1568  1BE1  00EC               	movwf	?_sprintf+2
  1569  1BE2  30CA               	movlw	(low (lcd_write_int@buffer| 0))& (0+255)
  1570  1BE3  120A  118A  2020  160A  158A  	fcall	_sprintf
  1571                           
  1572                           ;LCD_Init.c: 68:     lcd_write_string(buffer);
  1573  1BE8  30CA               	movlw	(low (lcd_write_int@buffer| 0))& (0+255)
  1574  1BE9  00F5               	movwf	lcd_write_string@var
  1575  1BEA  3000               	movlw	0
  1576  1BEB  00F6               	movwf	lcd_write_string@var+1
  1577  1BEC  160A  158A  242C  160A  158A  	fcall	_lcd_write_string
  1578  1BF1                     l103:	
  1579  1BF1  0008               	return
  1580  1BF2                     __end_of_lcd_write_int:	
  1581                           
  1582                           	psect	text2
  1583  07CA                     __ptext2:	
  1584 ;; *************** function _lcd_write_float *****************
  1585 ;; Defined at:
  1586 ;;		line 71 in file "LCD_Init.c"
  1587 ;; Parameters:    Size  Location     Type
  1588 ;;  numero          4   38[BANK1 ] float 
  1589 ;; Auto vars:     Size  Location     Type
  1590 ;;  buffer          4   42[BANK1 ] unsigned char [4]
  1591 ;; Return value:  Size  Location     Type
  1592 ;;                  1    wreg      void 
  1593 ;; Registers used:
  1594 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1595 ;; Tracked objects:
  1596 ;;		On entry : 0/0
  1597 ;;		On exit  : 0/0
  1598 ;;		Unchanged: 0/0
  1599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1600 ;;      Params:         0       0       4       0       0
  1601 ;;      Locals:         0       0       4       0       0
  1602 ;;      Temps:          0       1       0       0       0
  1603 ;;      Totals:         0       1       8       0       0
  1604 ;;Total ram usage:        9 bytes
  1605 ;; Hardware stack levels used:    1
  1606 ;; Hardware stack levels required when called:    5
  1607 ;; This function calls:
  1608 ;;		_lcd_write_string
  1609 ;;		_sprintf
  1610 ;; This function is called by:
  1611 ;;		_main
  1612 ;; This function uses a non-reentrant model
  1613 ;;
  1614                           
  1615                           
  1616                           ;psect for function _lcd_write_float
  1617  07CA                     _lcd_write_float:	
  1618  07CA                     l3714:	
  1619                           ;incstack = 0
  1620                           ; Regs used in _lcd_write_float: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1621                           
  1622                           
  1623                           ;LCD_Init.c: 72:     char buffer [4];;LCD_Init.c: 73:     sprintf (buffer, "%.2f", numer
      +                          o);
  1624  07CA  309C               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1625  07CB  1283               	bcf	3,5	;RP0=0, select bank0
  1626  07CC  1303               	bcf	3,6	;RP1=0, select bank0
  1627  07CD  00EF               	movwf	??_lcd_write_float
  1628  07CE  086F               	movf	??_lcd_write_float,w
  1629  07CF  00EA               	movwf	sprintf@f
  1630  07D0  1683               	bsf	3,5	;RP0=1, select bank1
  1631  07D1  1303               	bcf	3,6	;RP1=0, select bank1
  1632  07D2  0849               	movf	(lcd_write_float@numero+3)^(0+128),w
  1633  07D3  1283               	bcf	3,5	;RP0=0, select bank0
  1634  07D4  1303               	bcf	3,6	;RP1=0, select bank0
  1635  07D5  00EE               	movwf	?_sprintf+4
  1636  07D6  1683               	bsf	3,5	;RP0=1, select bank1
  1637  07D7  1303               	bcf	3,6	;RP1=0, select bank1
  1638  07D8  0848               	movf	(lcd_write_float@numero+2)^(0+128),w
  1639  07D9  1283               	bcf	3,5	;RP0=0, select bank0
  1640  07DA  1303               	bcf	3,6	;RP1=0, select bank0
  1641  07DB  00ED               	movwf	?_sprintf+3
  1642  07DC  1683               	bsf	3,5	;RP0=1, select bank1
  1643  07DD  1303               	bcf	3,6	;RP1=0, select bank1
  1644  07DE  0847               	movf	(lcd_write_float@numero+1)^(0+128),w
  1645  07DF  1283               	bcf	3,5	;RP0=0, select bank0
  1646  07E0  1303               	bcf	3,6	;RP1=0, select bank0
  1647  07E1  00EC               	movwf	?_sprintf+2
  1648  07E2  1683               	bsf	3,5	;RP0=1, select bank1
  1649  07E3  1303               	bcf	3,6	;RP1=0, select bank1
  1650  07E4  0846               	movf	lcd_write_float@numero^(0+128),w
  1651  07E5  1283               	bcf	3,5	;RP0=0, select bank0
  1652  07E6  1303               	bcf	3,6	;RP1=0, select bank0
  1653  07E7  00EB               	movwf	?_sprintf+1
  1654  07E8  30CA               	movlw	(low (lcd_write_float@buffer| 0))& (0+255)
  1655  07E9  120A  118A  2020  120A  118A  	fcall	_sprintf
  1656                           
  1657                           ;LCD_Init.c: 74:     lcd_write_string(buffer);
  1658  07EE  30CA               	movlw	(low (lcd_write_float@buffer| 0))& (0+255)
  1659  07EF  00F5               	movwf	lcd_write_string@var
  1660  07F0  3000               	movlw	0
  1661  07F1  00F6               	movwf	lcd_write_string@var+1
  1662  07F2  160A  158A  242C  120A  118A  	fcall	_lcd_write_string
  1663  07F7                     l106:	
  1664  07F7  0008               	return
  1665  07F8                     __end_of_lcd_write_float:	
  1666                           
  1667                           	psect	text3
  1668  0020                     __ptext3:	
  1669 ;; *************** function _sprintf *****************
  1670 ;; Defined at:
  1671 ;;		line 505 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  1672 ;; Parameters:    Size  Location     Type
  1673 ;;  sp              1    wreg     PTR unsigned char 
  1674 ;;		 -> lcd_write_float@buffer(4), lcd_write_int@buffer(4), 
  1675 ;;  f               1   74[BANK0 ] PTR const unsigned char 
  1676 ;;		 -> STR_3(5), STR_2(3), 
  1677 ;; Auto vars:     Size  Location     Type
  1678 ;;  sp              1   30[BANK1 ] PTR unsigned char 
  1679 ;;		 -> lcd_write_float@buffer(4), lcd_write_int@buffer(4), 
  1680 ;;  fval            4   31[BANK1 ] PTR unsigned char 
  1681 ;;  val             4   26[BANK1 ] unsigned long 
  1682 ;;  tmpval          4   22[BANK1 ] struct .
  1683 ;;  prec            2   35[BANK1 ] int 
  1684 ;;  eexp            2   20[BANK1 ] int 
  1685 ;;  flag            2   18[BANK1 ] unsigned short 
  1686 ;;  cp              2    0        PTR const unsigned char 
  1687 ;;  len             2    0        unsigned int 
  1688 ;;  width           2    0        int 
  1689 ;;  c               1   37[BANK1 ] unsigned char 
  1690 ;;  ap              1   17[BANK1 ] PTR void [1]
  1691 ;;		 -> ?_sprintf(2), 
  1692 ;;  d               1    0        unsigned char 
  1693 ;; Return value:  Size  Location     Type
  1694 ;;                  2   74[BANK0 ] int 
  1695 ;; Registers used:
  1696 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1697 ;; Tracked objects:
  1698 ;;		On entry : 0/0
  1699 ;;		On exit  : 0/0
  1700 ;;		Unchanged: 0/0
  1701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1702 ;;      Params:         0       5       0       0       0
  1703 ;;      Locals:         0       0      25       0       0
  1704 ;;      Temps:          0       0       5       0       0
  1705 ;;      Totals:         0       5      30       0       0
  1706 ;;Total ram usage:       35 bytes
  1707 ;; Hardware stack levels used:    1
  1708 ;; Hardware stack levels required when called:    4
  1709 ;; This function calls:
  1710 ;;		___awdiv
  1711 ;;		___fladd
  1712 ;;		___fleq
  1713 ;;		___flge
  1714 ;;		___flmul
  1715 ;;		___flneg
  1716 ;;		___flsub
  1717 ;;		___fltol
  1718 ;;		___lldiv
  1719 ;;		___llmod
  1720 ;;		___wmul
  1721 ;;		___xxtofl
  1722 ;;		__div_to_l_
  1723 ;;		__tdiv_to_l_
  1724 ;;		_fround
  1725 ;;		_isdigit
  1726 ;;		_scale
  1727 ;; This function is called by:
  1728 ;;		_lcd_write_int
  1729 ;;		_lcd_write_float
  1730 ;; This function uses a non-reentrant model
  1731 ;;
  1732                           
  1733                           
  1734                           ;psect for function _sprintf
  1735  0020                     _sprintf:	
  1736                           
  1737                           ;incstack = 0
  1738                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1739                           ;sprintf@sp stored from wreg
  1740  0020  1683               	bsf	3,5	;RP0=1, select bank1
  1741  0021  1303               	bcf	3,6	;RP1=0, select bank1
  1742  0022  00BE               	movwf	sprintf@sp^(0+128)
  1743  0023                     l3474:	
  1744                           
  1745                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 505: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources
      +                          \c90\common\doprnt.c: 506: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\
      +                          common\doprnt.c: 507:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\source
      +                          s\c90\common\doprnt.c: 512:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c90\common\doprnt.c: 514:  int width;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c90\common\doprnt.c: 517:  int prec;
  1746  0023  306B               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1747  0024  00A8               	movwf	??_sprintf^(0+128)
  1748  0025  0828               	movf	??_sprintf^(0+128),w
  1749  0026  00B1               	movwf	sprintf@ap^(0+128)
  1750                           
  1751                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  1752  0027  2FAF               	goto	l3700
  1753  0028                     l3476:	
  1754                           
  1755                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 555:   if(c
      +                           != '%')
  1756  0028  3025               	movlw	37
  1757  0029  0645               	xorwf	sprintf@c^(0+128),w
  1758  002A  1903               	btfsc	3,2
  1759  002B  282D               	goto	u5671
  1760  002C  282E               	goto	u5670
  1761  002D                     u5671:	
  1762  002D  283A               	goto	l3482
  1763  002E                     u5670:	
  1764  002E                     l3478:	
  1765                           
  1766                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 557:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 558:    ((*sp+
      +                          + = (c)));
  1767  002E  0845               	movf	sprintf@c^(0+128),w
  1768  002F  00A8               	movwf	??_sprintf^(0+128)
  1769  0030  083E               	movf	sprintf@sp^(0+128),w
  1770  0031  0084               	movwf	4
  1771  0032  0828               	movf	??_sprintf^(0+128),w
  1772  0033  1383               	bcf	3,7	;select IRP bank0
  1773  0034  0080               	movwf	0
  1774  0035                     l3480:	
  1775  0035  3001               	movlw	1
  1776  0036  00A8               	movwf	??_sprintf^(0+128)
  1777  0037  0828               	movf	??_sprintf^(0+128),w
  1778  0038  07BE               	addwf	sprintf@sp^(0+128),f
  1779                           
  1780                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 559:    con
      +                          tinue;
  1781  0039  2FAF               	goto	l3700
  1782  003A                     l3482:	
  1783                           
  1784                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 565:   flag
      +                           = 0;
  1785  003A  01B2               	clrf	sprintf@flag^(0+128)
  1786  003B  01B3               	clrf	(sprintf@flag+1)^(0+128)
  1787  003C                     l3484:	
  1788                           
  1789                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 628:   if(*
      +                          f == '.') {
  1790  003C  1283               	bcf	3,5	;RP0=0, select bank0
  1791  003D  1303               	bcf	3,6	;RP1=0, select bank0
  1792  003E  086A               	movf	sprintf@f,w
  1793  003F  0084               	movwf	4
  1794  0040  160A  118A  200A  120A  118A  	fcall	stringdir
  1795  0045  3A2E               	xorlw	46
  1796  0046  1D03               	skipz
  1797  0047  2849               	goto	u5681
  1798  0048  284A               	goto	u5680
  1799  0049                     u5681:	
  1800  0049  289C               	goto	l3500
  1801  004A                     u5680:	
  1802  004A                     l3486:	
  1803                           
  1804                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 629:    fla
      +                          g |= 0x4000;
  1805  004A  1683               	bsf	3,5	;RP0=1, select bank1
  1806  004B  1303               	bcf	3,6	;RP1=0, select bank1
  1807  004C  1733               	bsf	(sprintf@flag^(0+128)+1),6
  1808  004D                     l3488:	
  1809                           
  1810                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 630:    f++
      +                          ;
  1811  004D  3001               	movlw	1
  1812  004E  00A8               	movwf	??_sprintf^(0+128)
  1813  004F  0828               	movf	??_sprintf^(0+128),w
  1814  0050  1283               	bcf	3,5	;RP0=0, select bank0
  1815  0051  1303               	bcf	3,6	;RP1=0, select bank0
  1816  0052  07EA               	addwf	sprintf@f,f
  1817  0053                     l3490:	
  1818                           
  1819                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 644:    {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 645:     prec
      +                           = 0;
  1820  0053  1683               	bsf	3,5	;RP0=1, select bank1
  1821  0054  1303               	bcf	3,6	;RP1=0, select bank1
  1822  0055  01C3               	clrf	sprintf@prec^(0+128)
  1823  0056  01C4               	clrf	(sprintf@prec+1)^(0+128)
  1824                           
  1825                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 646:     wh
      +                          ile(isdigit((unsigned)*f)) {
  1826  0057  288A               	goto	l3498
  1827  0058                     l3492:	
  1828                           
  1829                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 647:      p
      +                          rec *= 10;
  1830  0058  300A               	movlw	10
  1831  0059  00F2               	movwf	___wmul@multiplier
  1832  005A  3000               	movlw	0
  1833  005B  00F3               	movwf	___wmul@multiplier+1
  1834  005C  1683               	bsf	3,5	;RP0=1, select bank1
  1835  005D  1303               	bcf	3,6	;RP1=0, select bank1
  1836  005E  0844               	movf	(sprintf@prec+1)^(0+128),w
  1837  005F  00F5               	movwf	___wmul@multiplicand+1
  1838  0060  0843               	movf	sprintf@prec^(0+128),w
  1839  0061  00F4               	movwf	___wmul@multiplicand
  1840  0062  160A  158A  237E  120A  118A  	fcall	___wmul
  1841  0067  0873               	movf	?___wmul+1,w
  1842  0068  1683               	bsf	3,5	;RP0=1, select bank1
  1843  0069  1303               	bcf	3,6	;RP1=0, select bank1
  1844  006A  00C4               	movwf	(sprintf@prec+1)^(0+128)
  1845  006B  0872               	movf	?___wmul,w
  1846  006C  00C3               	movwf	sprintf@prec^(0+128)
  1847  006D                     l3494:	
  1848                           
  1849                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 648:       
      +                            prec += *f++ - '0';
  1850  006D  1283               	bcf	3,5	;RP0=0, select bank0
  1851  006E  1303               	bcf	3,6	;RP1=0, select bank0
  1852  006F  086A               	movf	sprintf@f,w
  1853  0070  0084               	movwf	4
  1854  0071  160A  118A  200A  120A  118A  	fcall	stringdir
  1855  0076  3ED0               	addlw	208
  1856  0077  1683               	bsf	3,5	;RP0=1, select bank1
  1857  0078  1303               	bcf	3,6	;RP1=0, select bank1
  1858  0079  00A8               	movwf	??_sprintf^(0+128)
  1859  007A  30FF               	movlw	255
  1860  007B  1803               	skipnc
  1861  007C  3000               	movlw	0
  1862  007D  00A9               	movwf	(??_sprintf^(0+128)+1)
  1863  007E  0828               	movf	??_sprintf^(0+128),w
  1864  007F  07C3               	addwf	sprintf@prec^(0+128),f
  1865  0080  1803               	skipnc
  1866  0081  0AC4               	incf	(sprintf@prec+1)^(0+128),f
  1867  0082  0829               	movf	(??_sprintf+1)^(0+128),w
  1868  0083  07C4               	addwf	(sprintf@prec+1)^(0+128),f
  1869  0084                     l3496:	
  1870  0084  3001               	movlw	1
  1871  0085  00A8               	movwf	??_sprintf^(0+128)
  1872  0086  0828               	movf	??_sprintf^(0+128),w
  1873  0087  1283               	bcf	3,5	;RP0=0, select bank0
  1874  0088  1303               	bcf	3,6	;RP1=0, select bank0
  1875  0089  07EA               	addwf	sprintf@f,f
  1876  008A                     l3498:	
  1877                           
  1878                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 646:     wh
      +                          ile(isdigit((unsigned)*f)) {
  1879  008A  1283               	bcf	3,5	;RP0=0, select bank0
  1880  008B  086A               	movf	sprintf@f,w
  1881  008C  0084               	movwf	4
  1882  008D  160A  118A  200A  120A  118A  	fcall	stringdir
  1883  0092  160A  158A  2311  120A  118A  	fcall	_isdigit
  1884  0097  1803               	btfsc	3,0
  1885  0098  289A               	goto	u5691
  1886  0099  289B               	goto	u5690
  1887  009A                     u5691:	
  1888  009A  2858               	goto	l3492
  1889  009B                     u5690:	
  1890  009B  28A4               	goto	l3506
  1891  009C                     l3500:	
  1892                           
  1893                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 652:    pre
      +                          c = 0;
  1894  009C  1683               	bsf	3,5	;RP0=1, select bank1
  1895  009D  1303               	bcf	3,6	;RP1=0, select bank1
  1896  009E  01C3               	clrf	sprintf@prec^(0+128)
  1897  009F  01C4               	clrf	(sprintf@prec+1)^(0+128)
  1898  00A0                     l3502:	
  1899                           
  1900                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 654:    fla
      +                          g |= 0x1000;
  1901  00A0  1633               	bsf	(sprintf@flag^(0+128)+1),4
  1902  00A1  28A4               	goto	l3506
  1903  00A2                     l265:	
  1904                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 688:   case
      +                           'f':
  1905                           
  1906                           
  1907                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 689:    fla
      +                          g |= 0x400;
  1908  00A2  1533               	bsf	(sprintf@flag^(0+128)+1),2
  1909                           
  1910                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 690:    bre
      +                          ak;
  1911  00A3  28C8               	goto	l3508
  1912  00A4                     l3506:	
  1913  00A4  3001               	movlw	1
  1914  00A5  1283               	bcf	3,5	;RP0=0, select bank0
  1915  00A6  1303               	bcf	3,6	;RP1=0, select bank0
  1916  00A7  07EA               	addwf	sprintf@f,f
  1917  00A8  30FF               	movlw	-1
  1918  00A9  076A               	addwf	sprintf@f,w
  1919  00AA  0084               	movwf	4
  1920  00AB  160A  118A  200A  120A  118A  	fcall	stringdir
  1921  00B0  1683               	bsf	3,5	;RP0=1, select bank1
  1922  00B1  1303               	bcf	3,6	;RP1=0, select bank1
  1923  00B2  00C5               	movwf	sprintf@c^(0+128)
  1924  00B3  00A8               	movwf	??_sprintf^(0+128)
  1925  00B4  01A9               	clrf	(??_sprintf^(0+128)+1)
  1926                           
  1927                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1928                           ; Switch size 1, requested type "simple"
  1929                           ; Number of cases is 1, Range of values is 0 to 0
  1930                           ; switch strategies available:
  1931                           ; Name         Instructions Cycles
  1932                           ; simple_byte            4     3 (average)
  1933                           ; direct_byte           11     8 (fixed)
  1934                           ; jumptable            260     6 (fixed)
  1935                           ;	Chosen strategy is simple_byte
  1936  00B5  0829               	movf	(??_sprintf+1)^(0+128),w
  1937  00B6  3A00               	xorlw	0	; case 0
  1938  00B7  1903               	skipnz
  1939  00B8  28BA               	goto	l3810
  1940  00B9  2FAF               	goto	l3700
  1941  00BA                     l3810:	
  1942                           
  1943                           ; Switch size 1, requested type "simple"
  1944                           ; Number of cases is 4, Range of values is 0 to 105
  1945                           ; switch strategies available:
  1946                           ; Name         Instructions Cycles
  1947                           ; simple_byte           13     7 (average)
  1948                           ; jumptable            260     6 (fixed)
  1949                           ;	Chosen strategy is simple_byte
  1950  00BA  0828               	movf	??_sprintf^(0+128),w
  1951  00BB  3A00               	xorlw	0	; case 0
  1952  00BC  1903               	skipnz
  1953  00BD  2FC5               	goto	l3702
  1954  00BE  3A64               	xorlw	100	; case 100
  1955  00BF  1903               	skipnz
  1956  00C0  28C8               	goto	l3508
  1957  00C1  3A02               	xorlw	2	; case 102
  1958  00C2  1903               	skipnz
  1959  00C3  28A2               	goto	l265
  1960  00C4  3A0F               	xorlw	15	; case 105
  1961  00C5  1903               	skipnz
  1962  00C6  28C8               	goto	l3508
  1963  00C7  2FAF               	goto	l3700
  1964  00C8                     l3508:	
  1965                           
  1966                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 851:   if(f
      +                          lag & (0x700)) {
  1967  00C8  3000               	movlw	0
  1968  00C9  0532               	andwf	sprintf@flag^(0+128),w
  1969  00CA  00A8               	movwf	??_sprintf^(0+128)
  1970  00CB  3007               	movlw	7
  1971  00CC  0533               	andwf	(sprintf@flag+1)^(0+128),w
  1972  00CD  00A9               	movwf	(??_sprintf+1)^(0+128)
  1973  00CE  0828               	movf	??_sprintf^(0+128),w
  1974  00CF  0429               	iorwf	(??_sprintf^(0+128)+1),w
  1975  00D0  1903               	btfsc	3,2
  1976  00D1  28D3               	goto	u5701
  1977  00D2  28D4               	goto	u5700
  1978  00D3                     u5701:	
  1979  00D3  2E87               	goto	l3650
  1980  00D4                     u5700:	
  1981  00D4                     l3510:	
  1982                           
  1983                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 853:    if(
      +                          flag & 0x1000)
  1984  00D4  1E33               	btfss	(sprintf@flag+1)^(0+128),4
  1985  00D5  28D7               	goto	u5711
  1986  00D6  28D8               	goto	u5710
  1987  00D7                     u5711:	
  1988  00D7  28DC               	goto	l3514
  1989  00D8                     u5710:	
  1990  00D8                     l3512:	
  1991                           
  1992                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 855:     pr
      +                          ec = 6;
  1993  00D8  3006               	movlw	6
  1994  00D9  00C3               	movwf	sprintf@prec^(0+128)
  1995  00DA  3000               	movlw	0
  1996  00DB  00C4               	movwf	(sprintf@prec^(0+128)+1)
  1997  00DC                     l3514:	
  1998                           
  1999                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 856:    fva
      +                          l = (*(double *)__va_arg((*(double **)ap), (double)0));
  2000  00DC  0831               	movf	sprintf@ap^(0+128),w
  2001  00DD  0084               	movwf	4
  2002  00DE  1383               	bcf	3,7	;select IRP bank0
  2003  00DF  0800               	movf	0,w
  2004  00E0  00BF               	movwf	sprintf@fval^(0+128)
  2005  00E1  0A84               	incf	4,f
  2006  00E2  0800               	movf	0,w
  2007  00E3  00C0               	movwf	(sprintf@fval+1)^(0+128)
  2008  00E4  0A84               	incf	4,f
  2009  00E5  0800               	movf	0,w
  2010  00E6  00C1               	movwf	(sprintf@fval+2)^(0+128)
  2011  00E7  0A84               	incf	4,f
  2012  00E8  0800               	movf	0,w
  2013  00E9  00C2               	movwf	(sprintf@fval+3)^(0+128)
  2014  00EA                     l3516:	
  2015  00EA  3004               	movlw	4
  2016  00EB  00A8               	movwf	??_sprintf^(0+128)
  2017  00EC  0828               	movf	??_sprintf^(0+128),w
  2018  00ED  07B1               	addwf	sprintf@ap^(0+128),f
  2019  00EE                     l3518:	
  2020                           
  2021                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 857:    if(
      +                          fval < 0.0) {
  2022  00EE  0842               	movf	(sprintf@fval+3)^(0+128),w
  2023  00EF  00F5               	movwf	___flge@ff1+3
  2024  00F0  0841               	movf	(sprintf@fval+2)^(0+128),w
  2025  00F1  00F4               	movwf	___flge@ff1+2
  2026  00F2  0840               	movf	(sprintf@fval+1)^(0+128),w
  2027  00F3  00F3               	movwf	___flge@ff1+1
  2028  00F4  083F               	movf	sprintf@fval^(0+128),w
  2029  00F5  00F2               	movwf	___flge@ff1
  2030  00F6  3000               	movlw	0
  2031  00F7  00F9               	movwf	___flge@ff2+3
  2032  00F8  3000               	movlw	0
  2033  00F9  00F8               	movwf	___flge@ff2+2
  2034  00FA  3000               	movlw	0
  2035  00FB  00F7               	movwf	___flge@ff2+1
  2036  00FC  3000               	movlw	0
  2037  00FD  00F6               	movwf	___flge@ff2
  2038  00FE  160A  158A  275C  120A  118A  	fcall	___flge
  2039  0103  1803               	btfsc	3,0
  2040  0104  2906               	goto	u5721
  2041  0105  2907               	goto	u5720
  2042  0106                     u5721:	
  2043  0106  2924               	goto	l3524
  2044  0107                     u5720:	
  2045  0107                     l3520:	
  2046                           
  2047                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 858:     fv
      +                          al = -fval;
  2048  0107  1683               	bsf	3,5	;RP0=1, select bank1
  2049  0108  1303               	bcf	3,6	;RP1=0, select bank1
  2050  0109  0842               	movf	(sprintf@fval+3)^(0+128),w
  2051  010A  00F5               	movwf	___flneg@f1+3
  2052  010B  0841               	movf	(sprintf@fval+2)^(0+128),w
  2053  010C  00F4               	movwf	___flneg@f1+2
  2054  010D  0840               	movf	(sprintf@fval+1)^(0+128),w
  2055  010E  00F3               	movwf	___flneg@f1+1
  2056  010F  083F               	movf	sprintf@fval^(0+128),w
  2057  0110  00F2               	movwf	___flneg@f1
  2058  0111  160A  158A  2306  120A  118A  	fcall	___flneg
  2059  0116  0875               	movf	?___flneg+3,w
  2060  0117  1683               	bsf	3,5	;RP0=1, select bank1
  2061  0118  1303               	bcf	3,6	;RP1=0, select bank1
  2062  0119  00C2               	movwf	(sprintf@fval+3)^(0+128)
  2063  011A  0874               	movf	?___flneg+2,w
  2064  011B  00C1               	movwf	(sprintf@fval+2)^(0+128)
  2065  011C  0873               	movf	?___flneg+1,w
  2066  011D  00C0               	movwf	(sprintf@fval+1)^(0+128)
  2067  011E  0872               	movf	?___flneg,w
  2068  011F  00BF               	movwf	sprintf@fval^(0+128)
  2069  0120                     l3522:	
  2070                           
  2071                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 859:     fl
      +                          ag |= 0x03;
  2072  0120  3003               	movlw	3
  2073  0121  04B2               	iorwf	sprintf@flag^(0+128),f
  2074  0122  3000               	movlw	0
  2075  0123  04B3               	iorwf	(sprintf@flag+1)^(0+128),f
  2076  0124                     l3524:	
  2077                           
  2078                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 861:    eex
      +                          p = 0;
  2079  0124  1683               	bsf	3,5	;RP0=1, select bank1
  2080  0125  1303               	bcf	3,6	;RP1=0, select bank1
  2081  0126  01B4               	clrf	sprintf@eexp^(0+128)
  2082  0127  01B5               	clrf	(sprintf@eexp+1)^(0+128)
  2083  0128                     l3526:	
  2084                           
  2085                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 862:    if(
      +                           fval!=0) {
  2086  0128  0842               	movf	(sprintf@fval+3)^(0+128),w
  2087  0129  00F5               	movwf	___fleq@ff1+3
  2088  012A  0841               	movf	(sprintf@fval+2)^(0+128),w
  2089  012B  00F4               	movwf	___fleq@ff1+2
  2090  012C  0840               	movf	(sprintf@fval+1)^(0+128),w
  2091  012D  00F3               	movwf	___fleq@ff1+1
  2092  012E  083F               	movf	sprintf@fval^(0+128),w
  2093  012F  00F2               	movwf	___fleq@ff1
  2094  0130  3000               	movlw	0
  2095  0131  00F9               	movwf	___fleq@ff2+3
  2096  0132  3000               	movlw	0
  2097  0133  00F8               	movwf	___fleq@ff2+2
  2098  0134  3000               	movlw	0
  2099  0135  00F7               	movwf	___fleq@ff2+1
  2100  0136  3000               	movlw	0
  2101  0137  00F6               	movwf	___fleq@ff2
  2102  0138  160A  158A  2507  120A  118A  	fcall	___fleq
  2103  013D  1803               	btfsc	3,0
  2104  013E  2940               	goto	u5731
  2105  013F  2941               	goto	u5730
  2106  0140                     u5731:	
  2107  0140  2A41               	goto	l3552
  2108  0141                     u5730:	
  2109  0141                     l3528:	
  2110                           
  2111                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 863:     (v
      +                          oid)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2112  0141  1003               	clrc
  2113  0142  1683               	bsf	3,5	;RP0=1, select bank1
  2114  0143  1303               	bcf	3,6	;RP1=0, select bank1
  2115  0144  0D41               	rlf	(sprintf@fval+2)^(0+128),w
  2116  0145  0D42               	rlf	(sprintf@fval+3)^(0+128),w
  2117  0146  3E82               	addlw	130
  2118  0147  00B4               	movwf	sprintf@eexp^(0+128)
  2119  0148  30FF               	movlw	255
  2120  0149  1803               	skipnc
  2121  014A  3000               	movlw	0
  2122  014B  00B5               	movwf	(sprintf@eexp^(0+128)+1)
  2123  014C                     l3530:	
  2124                           
  2125                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 864:     ee
      +                          xp--;
  2126  014C  30FF               	movlw	255
  2127  014D  07B4               	addwf	sprintf@eexp^(0+128),f
  2128  014E  1803               	skipnc
  2129  014F  0AB5               	incf	(sprintf@eexp+1)^(0+128),f
  2130  0150  30FF               	movlw	255
  2131  0151  07B5               	addwf	(sprintf@eexp+1)^(0+128),f
  2132  0152                     l3532:	
  2133                           
  2134                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 865:     ee
      +                          xp *= 3;
  2135  0152  3003               	movlw	3
  2136  0153  00F2               	movwf	___wmul@multiplier
  2137  0154  3000               	movlw	0
  2138  0155  00F3               	movwf	___wmul@multiplier+1
  2139  0156  0835               	movf	(sprintf@eexp+1)^(0+128),w
  2140  0157  00F5               	movwf	___wmul@multiplicand+1
  2141  0158  0834               	movf	sprintf@eexp^(0+128),w
  2142  0159  00F4               	movwf	___wmul@multiplicand
  2143  015A  160A  158A  237E  120A  118A  	fcall	___wmul
  2144  015F  0873               	movf	?___wmul+1,w
  2145  0160  1683               	bsf	3,5	;RP0=1, select bank1
  2146  0161  1303               	bcf	3,6	;RP1=0, select bank1
  2147  0162  00B5               	movwf	(sprintf@eexp+1)^(0+128)
  2148  0163  0872               	movf	?___wmul,w
  2149  0164  00B4               	movwf	sprintf@eexp^(0+128)
  2150  0165                     l3534:	
  2151                           
  2152                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 866:     ee
      +                          xp /= 10;
  2153  0165  300A               	movlw	10
  2154  0166  1283               	bcf	3,5	;RP0=0, select bank0
  2155  0167  1303               	bcf	3,6	;RP1=0, select bank0
  2156  0168  00A0               	movwf	___awdiv@divisor
  2157  0169  3000               	movlw	0
  2158  016A  00A1               	movwf	___awdiv@divisor+1
  2159  016B  1683               	bsf	3,5	;RP0=1, select bank1
  2160  016C  1303               	bcf	3,6	;RP1=0, select bank1
  2161  016D  0835               	movf	(sprintf@eexp+1)^(0+128),w
  2162  016E  1283               	bcf	3,5	;RP0=0, select bank0
  2163  016F  1303               	bcf	3,6	;RP1=0, select bank0
  2164  0170  00A3               	movwf	___awdiv@dividend+1
  2165  0171  1683               	bsf	3,5	;RP0=1, select bank1
  2166  0172  1303               	bcf	3,6	;RP1=0, select bank1
  2167  0173  0834               	movf	sprintf@eexp^(0+128),w
  2168  0174  1283               	bcf	3,5	;RP0=0, select bank0
  2169  0175  1303               	bcf	3,6	;RP1=0, select bank0
  2170  0176  00A2               	movwf	___awdiv@dividend
  2171  0177  120A  158A  2008  120A  118A  	fcall	___awdiv
  2172  017C  1283               	bcf	3,5	;RP0=0, select bank0
  2173  017D  1303               	bcf	3,6	;RP1=0, select bank0
  2174  017E  0821               	movf	?___awdiv+1,w
  2175  017F  1683               	bsf	3,5	;RP0=1, select bank1
  2176  0180  1303               	bcf	3,6	;RP1=0, select bank1
  2177  0181  00B5               	movwf	(sprintf@eexp+1)^(0+128)
  2178  0182  1283               	bcf	3,5	;RP0=0, select bank0
  2179  0183  1303               	bcf	3,6	;RP1=0, select bank0
  2180  0184  0820               	movf	?___awdiv,w
  2181  0185  1683               	bsf	3,5	;RP0=1, select bank1
  2182  0186  1303               	bcf	3,6	;RP1=0, select bank1
  2183  0187  00B4               	movwf	sprintf@eexp^(0+128)
  2184  0188                     l3536:	
  2185                           
  2186                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 867:     if
      +                          (eexp < 0)
  2187  0188  1FB5               	btfss	(sprintf@eexp+1)^(0+128),7
  2188  0189  298B               	goto	u5741
  2189  018A  298C               	goto	u5740
  2190  018B                     u5741:	
  2191  018B  2992               	goto	l3540
  2192  018C                     u5740:	
  2193  018C                     l3538:	
  2194                           
  2195                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 868:      e
      +                          exp--;
  2196  018C  30FF               	movlw	255
  2197  018D  07B4               	addwf	sprintf@eexp^(0+128),f
  2198  018E  1803               	skipnc
  2199  018F  0AB5               	incf	(sprintf@eexp+1)^(0+128),f
  2200  0190  30FF               	movlw	255
  2201  0191  07B5               	addwf	(sprintf@eexp+1)^(0+128),f
  2202  0192                     l3540:	
  2203                           
  2204                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 872:     tm
      +                          pval.integ = scale(-eexp);
  2205  0192  0334               	decf	sprintf@eexp^(0+128),w
  2206  0193  3AFF               	xorlw	255
  2207  0194  120A  158A  249D  120A  118A  	fcall	_scale
  2208  0199  1283               	bcf	3,5	;RP0=0, select bank0
  2209  019A  1303               	bcf	3,6	;RP1=0, select bank0
  2210  019B  0845               	movf	?_scale+3,w
  2211  019C  1683               	bsf	3,5	;RP0=1, select bank1
  2212  019D  1303               	bcf	3,6	;RP1=0, select bank1
  2213  019E  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
  2214  019F  1283               	bcf	3,5	;RP0=0, select bank0
  2215  01A0  1303               	bcf	3,6	;RP1=0, select bank0
  2216  01A1  0844               	movf	?_scale+2,w
  2217  01A2  1683               	bsf	3,5	;RP0=1, select bank1
  2218  01A3  1303               	bcf	3,6	;RP1=0, select bank1
  2219  01A4  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
  2220  01A5  1283               	bcf	3,5	;RP0=0, select bank0
  2221  01A6  1303               	bcf	3,6	;RP1=0, select bank0
  2222  01A7  0843               	movf	?_scale+1,w
  2223  01A8  1683               	bsf	3,5	;RP0=1, select bank1
  2224  01A9  1303               	bcf	3,6	;RP1=0, select bank1
  2225  01AA  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
  2226  01AB  1283               	bcf	3,5	;RP0=0, select bank0
  2227  01AC  1303               	bcf	3,6	;RP1=0, select bank0
  2228  01AD  0842               	movf	?_scale,w
  2229  01AE  1683               	bsf	3,5	;RP0=1, select bank1
  2230  01AF  1303               	bcf	3,6	;RP1=0, select bank1
  2231  01B0  00B6               	movwf	sprintf@tmpval^(0+128)
  2232  01B1                     l3542:	
  2233                           
  2234                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 873:     tm
      +                          pval.integ *= fval;
  2235  01B1  0842               	movf	(sprintf@fval+3)^(0+128),w
  2236  01B2  1283               	bcf	3,5	;RP0=0, select bank0
  2237  01B3  1303               	bcf	3,6	;RP1=0, select bank0
  2238  01B4  00AB               	movwf	___flmul@b+3
  2239  01B5  1683               	bsf	3,5	;RP0=1, select bank1
  2240  01B6  1303               	bcf	3,6	;RP1=0, select bank1
  2241  01B7  0841               	movf	(sprintf@fval+2)^(0+128),w
  2242  01B8  1283               	bcf	3,5	;RP0=0, select bank0
  2243  01B9  1303               	bcf	3,6	;RP1=0, select bank0
  2244  01BA  00AA               	movwf	___flmul@b+2
  2245  01BB  1683               	bsf	3,5	;RP0=1, select bank1
  2246  01BC  1303               	bcf	3,6	;RP1=0, select bank1
  2247  01BD  0840               	movf	(sprintf@fval+1)^(0+128),w
  2248  01BE  1283               	bcf	3,5	;RP0=0, select bank0
  2249  01BF  1303               	bcf	3,6	;RP1=0, select bank0
  2250  01C0  00A9               	movwf	___flmul@b+1
  2251  01C1  1683               	bsf	3,5	;RP0=1, select bank1
  2252  01C2  1303               	bcf	3,6	;RP1=0, select bank1
  2253  01C3  083F               	movf	sprintf@fval^(0+128),w
  2254  01C4  1283               	bcf	3,5	;RP0=0, select bank0
  2255  01C5  1303               	bcf	3,6	;RP1=0, select bank0
  2256  01C6  00A8               	movwf	___flmul@b
  2257  01C7  1683               	bsf	3,5	;RP0=1, select bank1
  2258  01C8  1303               	bcf	3,6	;RP1=0, select bank1
  2259  01C9  0839               	movf	(sprintf@tmpval+3)^(0+128),w
  2260  01CA  1283               	bcf	3,5	;RP0=0, select bank0
  2261  01CB  1303               	bcf	3,6	;RP1=0, select bank0
  2262  01CC  00AF               	movwf	___flmul@a+3
  2263  01CD  1683               	bsf	3,5	;RP0=1, select bank1
  2264  01CE  1303               	bcf	3,6	;RP1=0, select bank1
  2265  01CF  0838               	movf	(sprintf@tmpval+2)^(0+128),w
  2266  01D0  1283               	bcf	3,5	;RP0=0, select bank0
  2267  01D1  1303               	bcf	3,6	;RP1=0, select bank0
  2268  01D2  00AE               	movwf	___flmul@a+2
  2269  01D3  1683               	bsf	3,5	;RP0=1, select bank1
  2270  01D4  1303               	bcf	3,6	;RP1=0, select bank1
  2271  01D5  0837               	movf	(sprintf@tmpval+1)^(0+128),w
  2272  01D6  1283               	bcf	3,5	;RP0=0, select bank0
  2273  01D7  1303               	bcf	3,6	;RP1=0, select bank0
  2274  01D8  00AD               	movwf	___flmul@a+1
  2275  01D9  1683               	bsf	3,5	;RP0=1, select bank1
  2276  01DA  1303               	bcf	3,6	;RP1=0, select bank1
  2277  01DB  0836               	movf	sprintf@tmpval^(0+128),w
  2278  01DC  1283               	bcf	3,5	;RP0=0, select bank0
  2279  01DD  1303               	bcf	3,6	;RP1=0, select bank0
  2280  01DE  00AC               	movwf	___flmul@a
  2281  01DF  120A  158A  213C  120A  118A  	fcall	___flmul
  2282  01E4  1283               	bcf	3,5	;RP0=0, select bank0
  2283  01E5  1303               	bcf	3,6	;RP1=0, select bank0
  2284  01E6  082B               	movf	?___flmul+3,w
  2285  01E7  1683               	bsf	3,5	;RP0=1, select bank1
  2286  01E8  1303               	bcf	3,6	;RP1=0, select bank1
  2287  01E9  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
  2288  01EA  1283               	bcf	3,5	;RP0=0, select bank0
  2289  01EB  1303               	bcf	3,6	;RP1=0, select bank0
  2290  01EC  082A               	movf	?___flmul+2,w
  2291  01ED  1683               	bsf	3,5	;RP0=1, select bank1
  2292  01EE  1303               	bcf	3,6	;RP1=0, select bank1
  2293  01EF  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
  2294  01F0  1283               	bcf	3,5	;RP0=0, select bank0
  2295  01F1  1303               	bcf	3,6	;RP1=0, select bank0
  2296  01F2  0829               	movf	?___flmul+1,w
  2297  01F3  1683               	bsf	3,5	;RP0=1, select bank1
  2298  01F4  1303               	bcf	3,6	;RP1=0, select bank1
  2299  01F5  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
  2300  01F6  1283               	bcf	3,5	;RP0=0, select bank0
  2301  01F7  1303               	bcf	3,6	;RP1=0, select bank0
  2302  01F8  0828               	movf	?___flmul,w
  2303  01F9  1683               	bsf	3,5	;RP0=1, select bank1
  2304  01FA  1303               	bcf	3,6	;RP1=0, select bank1
  2305  01FB  00B6               	movwf	sprintf@tmpval^(0+128)
  2306  01FC                     l3544:	
  2307                           
  2308                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 874:     if
      +                          (tmpval.integ < 1.0)
  2309  01FC  0839               	movf	(sprintf@tmpval+3)^(0+128),w
  2310  01FD  00F5               	movwf	___flge@ff1+3
  2311  01FE  0838               	movf	(sprintf@tmpval+2)^(0+128),w
  2312  01FF  00F4               	movwf	___flge@ff1+2
  2313  0200  0837               	movf	(sprintf@tmpval+1)^(0+128),w
  2314  0201  00F3               	movwf	___flge@ff1+1
  2315  0202  0836               	movf	sprintf@tmpval^(0+128),w
  2316  0203  00F2               	movwf	___flge@ff1
  2317  0204  303F               	movlw	63
  2318  0205  00F9               	movwf	___flge@ff2+3
  2319  0206  3080               	movlw	128
  2320  0207  00F8               	movwf	___flge@ff2+2
  2321  0208  3000               	movlw	0
  2322  0209  00F7               	movwf	___flge@ff2+1
  2323  020A  3000               	movlw	0
  2324  020B  00F6               	movwf	___flge@ff2
  2325  020C  160A  158A  275C  120A  118A  	fcall	___flge
  2326  0211  1803               	btfsc	3,0
  2327  0212  2A14               	goto	u5751
  2328  0213  2A15               	goto	u5750
  2329  0214                     u5751:	
  2330  0214  2A1E               	goto	l3548
  2331  0215                     u5750:	
  2332  0215                     l3546:	
  2333                           
  2334                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 875:      e
      +                          exp--;
  2335  0215  30FF               	movlw	255
  2336  0216  1683               	bsf	3,5	;RP0=1, select bank1
  2337  0217  1303               	bcf	3,6	;RP1=0, select bank1
  2338  0218  07B4               	addwf	sprintf@eexp^(0+128),f
  2339  0219  1803               	skipnc
  2340  021A  0AB5               	incf	(sprintf@eexp+1)^(0+128),f
  2341  021B  30FF               	movlw	255
  2342  021C  07B5               	addwf	(sprintf@eexp+1)^(0+128),f
  2343  021D  2A41               	goto	l3552
  2344  021E                     l3548:	
  2345  021E  1683               	bsf	3,5	;RP0=1, select bank1
  2346  021F  1303               	bcf	3,6	;RP1=0, select bank1
  2347  0220  0839               	movf	(sprintf@tmpval+3)^(0+128),w
  2348  0221  00F5               	movwf	___flge@ff1+3
  2349  0222  0838               	movf	(sprintf@tmpval+2)^(0+128),w
  2350  0223  00F4               	movwf	___flge@ff1+2
  2351  0224  0837               	movf	(sprintf@tmpval+1)^(0+128),w
  2352  0225  00F3               	movwf	___flge@ff1+1
  2353  0226  0836               	movf	sprintf@tmpval^(0+128),w
  2354  0227  00F2               	movwf	___flge@ff1
  2355  0228  3041               	movlw	65
  2356  0229  00F9               	movwf	___flge@ff2+3
  2357  022A  3020               	movlw	32
  2358  022B  00F8               	movwf	___flge@ff2+2
  2359  022C  3000               	movlw	0
  2360  022D  00F7               	movwf	___flge@ff2+1
  2361  022E  3000               	movlw	0
  2362  022F  00F6               	movwf	___flge@ff2
  2363  0230  160A  158A  275C  120A  118A  	fcall	___flge
  2364  0235  1C03               	btfss	3,0
  2365  0236  2A38               	goto	u5761
  2366  0237  2A39               	goto	u5760
  2367  0238                     u5761:	
  2368  0238  2A41               	goto	l3552
  2369  0239                     u5760:	
  2370  0239                     l3550:	
  2371                           
  2372                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 877:      e
      +                          exp++;
  2373  0239  3001               	movlw	1
  2374  023A  1683               	bsf	3,5	;RP0=1, select bank1
  2375  023B  1303               	bcf	3,6	;RP1=0, select bank1
  2376  023C  07B4               	addwf	sprintf@eexp^(0+128),f
  2377  023D  1803               	skipnc
  2378  023E  0AB5               	incf	(sprintf@eexp+1)^(0+128),f
  2379  023F  3000               	movlw	0
  2380  0240  07B5               	addwf	(sprintf@eexp+1)^(0+128),f
  2381  0241                     l3552:	
  2382                           
  2383                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1138:      
      +                          if(prec <= 12)
  2384  0241  1683               	bsf	3,5	;RP0=1, select bank1
  2385  0242  1303               	bcf	3,6	;RP1=0, select bank1
  2386  0243  0844               	movf	(sprintf@prec+1)^(0+128),w
  2387  0244  3A80               	xorlw	128
  2388  0245  00FF               	movwf	btemp+1
  2389  0246  3080               	movlw	128
  2390  0247  027F               	subwf	btemp+1,w
  2391  0248  1D03               	skipz
  2392  0249  2A4C               	goto	u5775
  2393  024A  300D               	movlw	13
  2394  024B  0243               	subwf	sprintf@prec^(0+128),w
  2395  024C                     u5775:	
  2396  024C  1803               	skipnc
  2397  024D  2A4F               	goto	u5771
  2398  024E  2A50               	goto	u5770
  2399  024F                     u5771:	
  2400  024F  2A97               	goto	l3556
  2401  0250                     u5770:	
  2402  0250                     l3554:	
  2403                           
  2404                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1139:      
      +                           fval += fround((unsigned int)prec);
  2405  0250  1683               	bsf	3,5	;RP0=1, select bank1
  2406  0251  1303               	bcf	3,6	;RP1=0, select bank1
  2407  0252  0843               	movf	sprintf@prec^(0+128),w
  2408  0253  160A  118A  236B  120A  118A  	fcall	_fround
  2409  0258  1283               	bcf	3,5	;RP0=0, select bank0
  2410  0259  1303               	bcf	3,6	;RP1=0, select bank0
  2411  025A  0845               	movf	?_fround+3,w
  2412  025B  00D9               	movwf	___fladd@b+3
  2413  025C  0844               	movf	?_fround+2,w
  2414  025D  00D8               	movwf	___fladd@b+2
  2415  025E  0843               	movf	?_fround+1,w
  2416  025F  00D7               	movwf	___fladd@b+1
  2417  0260  0842               	movf	?_fround,w
  2418  0261  00D6               	movwf	___fladd@b
  2419  0262  1683               	bsf	3,5	;RP0=1, select bank1
  2420  0263  1303               	bcf	3,6	;RP1=0, select bank1
  2421  0264  0842               	movf	(sprintf@fval+3)^(0+128),w
  2422  0265  1283               	bcf	3,5	;RP0=0, select bank0
  2423  0266  1303               	bcf	3,6	;RP1=0, select bank0
  2424  0267  00DD               	movwf	___fladd@a+3
  2425  0268  1683               	bsf	3,5	;RP0=1, select bank1
  2426  0269  1303               	bcf	3,6	;RP1=0, select bank1
  2427  026A  0841               	movf	(sprintf@fval+2)^(0+128),w
  2428  026B  1283               	bcf	3,5	;RP0=0, select bank0
  2429  026C  1303               	bcf	3,6	;RP1=0, select bank0
  2430  026D  00DC               	movwf	___fladd@a+2
  2431  026E  1683               	bsf	3,5	;RP0=1, select bank1
  2432  026F  1303               	bcf	3,6	;RP1=0, select bank1
  2433  0270  0840               	movf	(sprintf@fval+1)^(0+128),w
  2434  0271  1283               	bcf	3,5	;RP0=0, select bank0
  2435  0272  1303               	bcf	3,6	;RP1=0, select bank0
  2436  0273  00DB               	movwf	___fladd@a+1
  2437  0274  1683               	bsf	3,5	;RP0=1, select bank1
  2438  0275  1303               	bcf	3,6	;RP1=0, select bank1
  2439  0276  083F               	movf	sprintf@fval^(0+128),w
  2440  0277  1283               	bcf	3,5	;RP0=0, select bank0
  2441  0278  1303               	bcf	3,6	;RP1=0, select bank0
  2442  0279  00DA               	movwf	___fladd@a
  2443  027A  160A  118A  2578  120A  118A  	fcall	___fladd
  2444  027F  1283               	bcf	3,5	;RP0=0, select bank0
  2445  0280  1303               	bcf	3,6	;RP1=0, select bank0
  2446  0281  0859               	movf	?___fladd+3,w
  2447  0282  1683               	bsf	3,5	;RP0=1, select bank1
  2448  0283  1303               	bcf	3,6	;RP1=0, select bank1
  2449  0284  00C2               	movwf	(sprintf@fval+3)^(0+128)
  2450  0285  1283               	bcf	3,5	;RP0=0, select bank0
  2451  0286  1303               	bcf	3,6	;RP1=0, select bank0
  2452  0287  0858               	movf	?___fladd+2,w
  2453  0288  1683               	bsf	3,5	;RP0=1, select bank1
  2454  0289  1303               	bcf	3,6	;RP1=0, select bank1
  2455  028A  00C1               	movwf	(sprintf@fval+2)^(0+128)
  2456  028B  1283               	bcf	3,5	;RP0=0, select bank0
  2457  028C  1303               	bcf	3,6	;RP1=0, select bank0
  2458  028D  0857               	movf	?___fladd+1,w
  2459  028E  1683               	bsf	3,5	;RP0=1, select bank1
  2460  028F  1303               	bcf	3,6	;RP1=0, select bank1
  2461  0290  00C0               	movwf	(sprintf@fval+1)^(0+128)
  2462  0291  1283               	bcf	3,5	;RP0=0, select bank0
  2463  0292  1303               	bcf	3,6	;RP1=0, select bank0
  2464  0293  0856               	movf	?___fladd,w
  2465  0294  1683               	bsf	3,5	;RP0=1, select bank1
  2466  0295  1303               	bcf	3,6	;RP1=0, select bank1
  2467  0296  00BF               	movwf	sprintf@fval^(0+128)
  2468  0297                     l3556:	
  2469                           
  2470                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1142:     i
      +                          f((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2471  0297  1683               	bsf	3,5	;RP0=1, select bank1
  2472  0298  1303               	bcf	3,6	;RP1=0, select bank1
  2473  0299  0835               	movf	(sprintf@eexp+1)^(0+128),w
  2474  029A  3A80               	xorlw	128
  2475  029B  00FF               	movwf	btemp+1
  2476  029C  3080               	movlw	128
  2477  029D  027F               	subwf	btemp+1,w
  2478  029E  1D03               	skipz
  2479  029F  2AA2               	goto	u5785
  2480  02A0  300A               	movlw	10
  2481  02A1  0234               	subwf	sprintf@eexp^(0+128),w
  2482  02A2                     u5785:	
  2483  02A2  1803               	skipnc
  2484  02A3  2AA5               	goto	u5781
  2485  02A4  2AA6               	goto	u5780
  2486  02A5                     u5781:	
  2487  02A5  2AF7               	goto	l3564
  2488  02A6                     u5780:	
  2489  02A6                     l3558:	
  2490  02A6  1683               	bsf	3,5	;RP0=1, select bank1
  2491  02A7  1303               	bcf	3,6	;RP1=0, select bank1
  2492  02A8  0842               	movf	(sprintf@fval+3)^(0+128),w
  2493  02A9  00F5               	movwf	___fleq@ff1+3
  2494  02AA  0841               	movf	(sprintf@fval+2)^(0+128),w
  2495  02AB  00F4               	movwf	___fleq@ff1+2
  2496  02AC  0840               	movf	(sprintf@fval+1)^(0+128),w
  2497  02AD  00F3               	movwf	___fleq@ff1+1
  2498  02AE  083F               	movf	sprintf@fval^(0+128),w
  2499  02AF  00F2               	movwf	___fleq@ff1
  2500  02B0  3000               	movlw	0
  2501  02B1  00F9               	movwf	___fleq@ff2+3
  2502  02B2  3000               	movlw	0
  2503  02B3  00F8               	movwf	___fleq@ff2+2
  2504  02B4  3000               	movlw	0
  2505  02B5  00F7               	movwf	___fleq@ff2+1
  2506  02B6  3000               	movlw	0
  2507  02B7  00F6               	movwf	___fleq@ff2
  2508  02B8  160A  158A  2507  120A  118A  	fcall	___fleq
  2509  02BD  1803               	btfsc	3,0
  2510  02BE  2AC0               	goto	u5791
  2511  02BF  2AC1               	goto	u5790
  2512  02C0                     u5791:	
  2513  02C0  2B69               	goto	l3578
  2514  02C1                     u5790:	
  2515  02C1                     l3560:	
  2516  02C1  1683               	bsf	3,5	;RP0=1, select bank1
  2517  02C2  1303               	bcf	3,6	;RP1=0, select bank1
  2518  02C3  0842               	movf	(sprintf@fval+3)^(0+128),w
  2519  02C4  1283               	bcf	3,5	;RP0=0, select bank0
  2520  02C5  1303               	bcf	3,6	;RP1=0, select bank0
  2521  02C6  00D8               	movwf	___fltol@f1+3
  2522  02C7  1683               	bsf	3,5	;RP0=1, select bank1
  2523  02C8  1303               	bcf	3,6	;RP1=0, select bank1
  2524  02C9  0841               	movf	(sprintf@fval+2)^(0+128),w
  2525  02CA  1283               	bcf	3,5	;RP0=0, select bank0
  2526  02CB  1303               	bcf	3,6	;RP1=0, select bank0
  2527  02CC  00D7               	movwf	___fltol@f1+2
  2528  02CD  1683               	bsf	3,5	;RP0=1, select bank1
  2529  02CE  1303               	bcf	3,6	;RP1=0, select bank1
  2530  02CF  0840               	movf	(sprintf@fval+1)^(0+128),w
  2531  02D0  1283               	bcf	3,5	;RP0=0, select bank0
  2532  02D1  1303               	bcf	3,6	;RP1=0, select bank0
  2533  02D2  00D6               	movwf	___fltol@f1+1
  2534  02D3  1683               	bsf	3,5	;RP0=1, select bank1
  2535  02D4  1303               	bcf	3,6	;RP1=0, select bank1
  2536  02D5  083F               	movf	sprintf@fval^(0+128),w
  2537  02D6  1283               	bcf	3,5	;RP0=0, select bank0
  2538  02D7  1303               	bcf	3,6	;RP1=0, select bank0
  2539  02D8  00D5               	movwf	___fltol@f1
  2540  02D9  160A  118A  20B8  120A  118A  	fcall	___fltol
  2541  02DE  1283               	bcf	3,5	;RP0=0, select bank0
  2542  02DF  1303               	bcf	3,6	;RP1=0, select bank0
  2543  02E0  0858               	movf	?___fltol+3,w
  2544  02E1  0457               	iorwf	?___fltol+2,w
  2545  02E2  0456               	iorwf	?___fltol+1,w
  2546  02E3  0455               	iorwf	?___fltol,w
  2547  02E4  1D03               	skipz
  2548  02E5  2AE7               	goto	u5801
  2549  02E6  2AE8               	goto	u5800
  2550  02E7                     u5801:	
  2551  02E7  2B69               	goto	l3578
  2552  02E8                     u5800:	
  2553  02E8                     l3562:	
  2554  02E8  1683               	bsf	3,5	;RP0=1, select bank1
  2555  02E9  1303               	bcf	3,6	;RP1=0, select bank1
  2556  02EA  0835               	movf	(sprintf@eexp+1)^(0+128),w
  2557  02EB  3A80               	xorlw	128
  2558  02EC  00FF               	movwf	btemp+1
  2559  02ED  3080               	movlw	128
  2560  02EE  027F               	subwf	btemp+1,w
  2561  02EF  1D03               	skipz
  2562  02F0  2AF3               	goto	u5815
  2563  02F1  3002               	movlw	2
  2564  02F2  0234               	subwf	sprintf@eexp^(0+128),w
  2565  02F3                     u5815:	
  2566  02F3  1C03               	skipc
  2567  02F4  2AF6               	goto	u5811
  2568  02F5  2AF7               	goto	u5810
  2569  02F6                     u5811:	
  2570  02F6  2B69               	goto	l3578
  2571  02F7                     u5810:	
  2572  02F7                     l3564:	
  2573                           
  2574                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1146:      
      +                          if(tmpval.integ < 4.294967296){
  2575  02F7  1683               	bsf	3,5	;RP0=1, select bank1
  2576  02F8  1303               	bcf	3,6	;RP1=0, select bank1
  2577  02F9  0839               	movf	(sprintf@tmpval+3)^(0+128),w
  2578  02FA  00F5               	movwf	___flge@ff1+3
  2579  02FB  0838               	movf	(sprintf@tmpval+2)^(0+128),w
  2580  02FC  00F4               	movwf	___flge@ff1+2
  2581  02FD  0837               	movf	(sprintf@tmpval+1)^(0+128),w
  2582  02FE  00F3               	movwf	___flge@ff1+1
  2583  02FF  0836               	movf	sprintf@tmpval^(0+128),w
  2584  0300  00F2               	movwf	___flge@ff1
  2585  0301  3040               	movlw	64
  2586  0302  00F9               	movwf	___flge@ff2+3
  2587  0303  3089               	movlw	137
  2588  0304  00F8               	movwf	___flge@ff2+2
  2589  0305  3070               	movlw	112
  2590  0306  00F7               	movwf	___flge@ff2+1
  2591  0307  305F               	movlw	95
  2592  0308  00F6               	movwf	___flge@ff2
  2593  0309  160A  158A  275C  120A  118A  	fcall	___flge
  2594  030E  1803               	btfsc	3,0
  2595  030F  2B11               	goto	u5821
  2596  0310  2B12               	goto	u5820
  2597  0311                     u5821:	
  2598  0311  2B1B               	goto	l3568
  2599  0312                     u5820:	
  2600  0312                     l3566:	
  2601                           
  2602                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1147:      
      +                           eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
  2603  0312  30F7               	movlw	247
  2604  0313  1683               	bsf	3,5	;RP0=1, select bank1
  2605  0314  1303               	bcf	3,6	;RP1=0, select bank1
  2606  0315  07B4               	addwf	sprintf@eexp^(0+128),f
  2607  0316  1803               	skipnc
  2608  0317  0AB5               	incf	(sprintf@eexp+1)^(0+128),f
  2609  0318  30FF               	movlw	255
  2610  0319  07B5               	addwf	(sprintf@eexp+1)^(0+128),f
  2611                           
  2612                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1148:      
      +                          }else{
  2613  031A  2B23               	goto	l3570
  2614  031B                     l3568:	
  2615                           
  2616                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1149:      
      +                           eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
  2617  031B  30F8               	movlw	248
  2618  031C  1683               	bsf	3,5	;RP0=1, select bank1
  2619  031D  1303               	bcf	3,6	;RP1=0, select bank1
  2620  031E  07B4               	addwf	sprintf@eexp^(0+128),f
  2621  031F  1803               	skipnc
  2622  0320  0AB5               	incf	(sprintf@eexp+1)^(0+128),f
  2623  0321  30FF               	movlw	255
  2624  0322  07B5               	addwf	(sprintf@eexp+1)^(0+128),f
  2625  0323                     l3570:	
  2626                           
  2627                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1152:      
      +                          val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.in
      +                          teg));
  2628  0323  0834               	movf	sprintf@eexp^(0+128),w
  2629  0324  120A  158A  249D  120A  118A  	fcall	_scale
  2630  0329  1283               	bcf	3,5	;RP0=0, select bank0
  2631  032A  1303               	bcf	3,6	;RP1=0, select bank0
  2632  032B  0845               	movf	?_scale+3,w
  2633  032C  1683               	bsf	3,5	;RP0=1, select bank1
  2634  032D  1303               	bcf	3,6	;RP1=0, select bank1
  2635  032E  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
  2636  032F  1283               	bcf	3,5	;RP0=0, select bank0
  2637  0330  1303               	bcf	3,6	;RP1=0, select bank0
  2638  0331  0844               	movf	?_scale+2,w
  2639  0332  1683               	bsf	3,5	;RP0=1, select bank1
  2640  0333  1303               	bcf	3,6	;RP1=0, select bank1
  2641  0334  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
  2642  0335  1283               	bcf	3,5	;RP0=0, select bank0
  2643  0336  1303               	bcf	3,6	;RP1=0, select bank0
  2644  0337  0843               	movf	?_scale+1,w
  2645  0338  1683               	bsf	3,5	;RP0=1, select bank1
  2646  0339  1303               	bcf	3,6	;RP1=0, select bank1
  2647  033A  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
  2648  033B  1283               	bcf	3,5	;RP0=0, select bank0
  2649  033C  1303               	bcf	3,6	;RP1=0, select bank0
  2650  033D  0842               	movf	?_scale,w
  2651  033E  1683               	bsf	3,5	;RP0=1, select bank1
  2652  033F  1303               	bcf	3,6	;RP1=0, select bank1
  2653  0340  00B6               	movwf	sprintf@tmpval^(0+128)
  2654  0341                     l3572:	
  2655  0341  0842               	movf	(sprintf@fval+3)^(0+128),w
  2656  0342  00F5               	movwf	__div_to_l_@f1+3
  2657  0343  0841               	movf	(sprintf@fval+2)^(0+128),w
  2658  0344  00F4               	movwf	__div_to_l_@f1+2
  2659  0345  0840               	movf	(sprintf@fval+1)^(0+128),w
  2660  0346  00F3               	movwf	__div_to_l_@f1+1
  2661  0347  083F               	movf	sprintf@fval^(0+128),w
  2662  0348  00F2               	movwf	__div_to_l_@f1
  2663  0349  0839               	movf	(sprintf@tmpval+3)^(0+128),w
  2664  034A  00F9               	movwf	__div_to_l_@f2+3
  2665  034B  0838               	movf	(sprintf@tmpval+2)^(0+128),w
  2666  034C  00F8               	movwf	__div_to_l_@f2+2
  2667  034D  0837               	movf	(sprintf@tmpval+1)^(0+128),w
  2668  034E  00F7               	movwf	__div_to_l_@f2+1
  2669  034F  0836               	movf	sprintf@tmpval^(0+128),w
  2670  0350  00F6               	movwf	__div_to_l_@f2
  2671  0351  160A  118A  22AD  120A  118A  	fcall	__div_to_l_
  2672  0356  0875               	movf	?__div_to_l_+3,w
  2673  0357  1683               	bsf	3,5	;RP0=1, select bank1
  2674  0358  1303               	bcf	3,6	;RP1=0, select bank1
  2675  0359  00BD               	movwf	(sprintf@val+3)^(0+128)
  2676  035A  0874               	movf	?__div_to_l_+2,w
  2677  035B  00BC               	movwf	(sprintf@val+2)^(0+128)
  2678  035C  0873               	movf	?__div_to_l_+1,w
  2679  035D  00BB               	movwf	(sprintf@val+1)^(0+128)
  2680  035E  0872               	movf	?__div_to_l_,w
  2681  035F  00BA               	movwf	sprintf@val^(0+128)
  2682  0360                     l3576:	
  2683                           
  2684                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1155:      
      +                          fval = 0.0;
  2685  0360  3000               	movlw	0
  2686  0361  00C2               	movwf	(sprintf@fval+3)^(0+128)
  2687  0362  3000               	movlw	0
  2688  0363  00C1               	movwf	(sprintf@fval+2)^(0+128)
  2689  0364  3000               	movlw	0
  2690  0365  00C0               	movwf	(sprintf@fval+1)^(0+128)
  2691  0366  3000               	movlw	0
  2692  0367  00BF               	movwf	sprintf@fval^(0+128)
  2693                           
  2694                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1156:     }
      +                           else {
  2695  0368  2BCF               	goto	l3584
  2696  0369                     l3578:	
  2697                           
  2698                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1157:      
      +                          val = (unsigned long)fval;
  2699  0369  1683               	bsf	3,5	;RP0=1, select bank1
  2700  036A  1303               	bcf	3,6	;RP1=0, select bank1
  2701  036B  0842               	movf	(sprintf@fval+3)^(0+128),w
  2702  036C  1283               	bcf	3,5	;RP0=0, select bank0
  2703  036D  1303               	bcf	3,6	;RP1=0, select bank0
  2704  036E  00D8               	movwf	___fltol@f1+3
  2705  036F  1683               	bsf	3,5	;RP0=1, select bank1
  2706  0370  1303               	bcf	3,6	;RP1=0, select bank1
  2707  0371  0841               	movf	(sprintf@fval+2)^(0+128),w
  2708  0372  1283               	bcf	3,5	;RP0=0, select bank0
  2709  0373  1303               	bcf	3,6	;RP1=0, select bank0
  2710  0374  00D7               	movwf	___fltol@f1+2
  2711  0375  1683               	bsf	3,5	;RP0=1, select bank1
  2712  0376  1303               	bcf	3,6	;RP1=0, select bank1
  2713  0377  0840               	movf	(sprintf@fval+1)^(0+128),w
  2714  0378  1283               	bcf	3,5	;RP0=0, select bank0
  2715  0379  1303               	bcf	3,6	;RP1=0, select bank0
  2716  037A  00D6               	movwf	___fltol@f1+1
  2717  037B  1683               	bsf	3,5	;RP0=1, select bank1
  2718  037C  1303               	bcf	3,6	;RP1=0, select bank1
  2719  037D  083F               	movf	sprintf@fval^(0+128),w
  2720  037E  1283               	bcf	3,5	;RP0=0, select bank0
  2721  037F  1303               	bcf	3,6	;RP1=0, select bank0
  2722  0380  00D5               	movwf	___fltol@f1
  2723  0381  160A  118A  20B8  120A  118A  	fcall	___fltol
  2724  0386  1283               	bcf	3,5	;RP0=0, select bank0
  2725  0387  1303               	bcf	3,6	;RP1=0, select bank0
  2726  0388  0858               	movf	?___fltol+3,w
  2727  0389  1683               	bsf	3,5	;RP0=1, select bank1
  2728  038A  1303               	bcf	3,6	;RP1=0, select bank1
  2729  038B  00BD               	movwf	(sprintf@val+3)^(0+128)
  2730  038C  1283               	bcf	3,5	;RP0=0, select bank0
  2731  038D  1303               	bcf	3,6	;RP1=0, select bank0
  2732  038E  0857               	movf	?___fltol+2,w
  2733  038F  1683               	bsf	3,5	;RP0=1, select bank1
  2734  0390  1303               	bcf	3,6	;RP1=0, select bank1
  2735  0391  00BC               	movwf	(sprintf@val+2)^(0+128)
  2736  0392  1283               	bcf	3,5	;RP0=0, select bank0
  2737  0393  1303               	bcf	3,6	;RP1=0, select bank0
  2738  0394  0856               	movf	?___fltol+1,w
  2739  0395  1683               	bsf	3,5	;RP0=1, select bank1
  2740  0396  1303               	bcf	3,6	;RP1=0, select bank1
  2741  0397  00BB               	movwf	(sprintf@val+1)^(0+128)
  2742  0398  1283               	bcf	3,5	;RP0=0, select bank0
  2743  0399  1303               	bcf	3,6	;RP1=0, select bank0
  2744  039A  0855               	movf	?___fltol,w
  2745  039B  1683               	bsf	3,5	;RP0=1, select bank1
  2746  039C  1303               	bcf	3,6	;RP1=0, select bank1
  2747  039D  00BA               	movwf	sprintf@val^(0+128)
  2748  039E                     l3580:	
  2749                           
  2750                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1158:      
      +                          fval -= (double)val;
  2751  039E  083D               	movf	(sprintf@val+3)^(0+128),w
  2752  039F  00F5               	movwf	___xxtofl@val+3
  2753  03A0  083C               	movf	(sprintf@val+2)^(0+128),w
  2754  03A1  00F4               	movwf	___xxtofl@val+2
  2755  03A2  083B               	movf	(sprintf@val+1)^(0+128),w
  2756  03A3  00F3               	movwf	___xxtofl@val+1
  2757  03A4  083A               	movf	sprintf@val^(0+128),w
  2758  03A5  00F2               	movwf	___xxtofl@val
  2759  03A6  3000               	movlw	0
  2760  03A7  160A  118A  2134  120A  118A  	fcall	___xxtofl
  2761  03AC  0875               	movf	?___xxtofl+3,w
  2762  03AD  1683               	bsf	3,5	;RP0=1, select bank1
  2763  03AE  1303               	bcf	3,6	;RP1=0, select bank1
  2764  03AF  00A3               	movwf	(___flsub@a+3)^(0+128)
  2765  03B0  0874               	movf	?___xxtofl+2,w
  2766  03B1  00A2               	movwf	(___flsub@a+2)^(0+128)
  2767  03B2  0873               	movf	?___xxtofl+1,w
  2768  03B3  00A1               	movwf	(___flsub@a+1)^(0+128)
  2769  03B4  0872               	movf	?___xxtofl,w
  2770  03B5  00A0               	movwf	___flsub@a^(0+128)
  2771  03B6  0842               	movf	(sprintf@fval+3)^(0+128),w
  2772  03B7  00A7               	movwf	(___flsub@b+3)^(0+128)
  2773  03B8  0841               	movf	(sprintf@fval+2)^(0+128),w
  2774  03B9  00A6               	movwf	(___flsub@b+2)^(0+128)
  2775  03BA  0840               	movf	(sprintf@fval+1)^(0+128),w
  2776  03BB  00A5               	movwf	(___flsub@b+1)^(0+128)
  2777  03BC  083F               	movf	sprintf@fval^(0+128),w
  2778  03BD  00A4               	movwf	___flsub@b^(0+128)
  2779  03BE  160A  158A  2557  120A  118A  	fcall	___flsub
  2780  03C3  1683               	bsf	3,5	;RP0=1, select bank1
  2781  03C4  1303               	bcf	3,6	;RP1=0, select bank1
  2782  03C5  0823               	movf	(?___flsub+3)^(0+128),w
  2783  03C6  00C2               	movwf	(sprintf@fval+3)^(0+128)
  2784  03C7  0822               	movf	(?___flsub+2)^(0+128),w
  2785  03C8  00C1               	movwf	(sprintf@fval+2)^(0+128)
  2786  03C9  0821               	movf	(?___flsub+1)^(0+128),w
  2787  03CA  00C0               	movwf	(sprintf@fval+1)^(0+128)
  2788  03CB  0820               	movf	?___flsub^(0+128),w
  2789  03CC  00BF               	movwf	sprintf@fval^(0+128)
  2790  03CD                     l3582:	
  2791                           
  2792                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1159:      
      +                          eexp = 0;
  2793  03CD  01B4               	clrf	sprintf@eexp^(0+128)
  2794  03CE  01B5               	clrf	(sprintf@eexp+1)^(0+128)
  2795  03CF                     l3584:	
  2796                           
  2797                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1162:     f
      +                          or(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2798  03CF  01C5               	clrf	sprintf@c^(0+128)
  2799  03D0  0AC5               	incf	sprintf@c^(0+128),f
  2800  03D1                     l3590:	
  2801                           
  2802                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1163:      
      +                          if(val < dpowers[c])
  2803  03D1  0845               	movf	sprintf@c^(0+128),w
  2804  03D2  00A8               	movwf	??_sprintf^(0+128)
  2805  03D3  3001               	movlw	1
  2806  03D4                     u5835:	
  2807  03D4  1003               	clrc
  2808  03D5  0DA8               	rlf	??_sprintf^(0+128),f
  2809  03D6  3EFF               	addlw	-1
  2810  03D7  1D03               	skipz
  2811  03D8  2BD4               	goto	u5835
  2812  03D9  1003               	clrc
  2813  03DA  0D28               	rlf	??_sprintf^(0+128),w
  2814  03DB  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2815  03DC  0084               	movwf	4
  2816  03DD  160A  118A  200A  120A  118A  	fcall	stringdir
  2817  03E2  00A9               	movwf	(??_sprintf+1)^(0+128)
  2818  03E3  160A  118A  200A  120A  118A  	fcall	stringdir
  2819  03E8  00AA               	movwf	((??_sprintf+1)^(0+128)+1)
  2820  03E9  160A  118A  200A  120A  118A  	fcall	stringdir
  2821  03EE  00AB               	movwf	((??_sprintf+1)^(0+128)+2)
  2822  03EF  160A  118A  200A  120A  118A  	fcall	stringdir
  2823  03F4  00AC               	movwf	((??_sprintf+1)^(0+128)+3)
  2824  03F5  082C               	movf	(??_sprintf+4)^(0+128),w
  2825  03F6  023D               	subwf	(sprintf@val+3)^(0+128),w
  2826  03F7  1D03               	skipz
  2827  03F8  2C03               	goto	u5845
  2828  03F9  082B               	movf	(??_sprintf+3)^(0+128),w
  2829  03FA  023C               	subwf	(sprintf@val+2)^(0+128),w
  2830  03FB  1D03               	skipz
  2831  03FC  2C03               	goto	u5845
  2832  03FD  082A               	movf	(??_sprintf+2)^(0+128),w
  2833  03FE  023B               	subwf	(sprintf@val+1)^(0+128),w
  2834  03FF  1D03               	skipz
  2835  0400  2C03               	goto	u5845
  2836  0401  0829               	movf	(??_sprintf+1)^(0+128),w
  2837  0402  023A               	subwf	sprintf@val^(0+128),w
  2838  0403                     u5845:	
  2839  0403  1803               	skipnc
  2840  0404  2C06               	goto	u5841
  2841  0405  2C07               	goto	u5840
  2842  0406                     u5841:	
  2843  0406  2C08               	goto	l3594
  2844  0407                     u5840:	
  2845  0407  2C12               	goto	l3596
  2846  0408                     l3594:	
  2847  0408  3001               	movlw	1
  2848  0409  00A8               	movwf	??_sprintf^(0+128)
  2849  040A  0828               	movf	??_sprintf^(0+128),w
  2850  040B  07C5               	addwf	sprintf@c^(0+128),f
  2851  040C  300A               	movlw	10
  2852  040D  0645               	xorwf	sprintf@c^(0+128),w
  2853  040E  1D03               	btfss	3,2
  2854  040F  2C11               	goto	u5851
  2855  0410  2C12               	goto	u5850
  2856  0411                     u5851:	
  2857  0411  2BD1               	goto	l3590
  2858  0412                     u5850:	
  2859  0412                     l3596:	
  2860                           
  2861                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1201:     {
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1214:     i
      +                          f(flag & 0x03)
  2862  0412  3003               	movlw	3
  2863  0413  0532               	andwf	sprintf@flag^(0+128),w
  2864  0414  00A8               	movwf	??_sprintf^(0+128)
  2865  0415  3000               	movlw	0
  2866  0416  0533               	andwf	(sprintf@flag+1)^(0+128),w
  2867  0417  00A9               	movwf	(??_sprintf+1)^(0+128)
  2868  0418  0828               	movf	??_sprintf^(0+128),w
  2869  0419  0429               	iorwf	(??_sprintf^(0+128)+1),w
  2870  041A  1903               	btfsc	3,2
  2871  041B  2C1D               	goto	u5861
  2872  041C  2C1E               	goto	u5860
  2873  041D                     u5861:	
  2874  041D  2CB0               	goto	l293
  2875  041E                     u5860:	
  2876  041E                     l3598:	
  2877                           
  2878                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1216:      
      +                          ((*sp++ = ('-')));
  2879  041E  302D               	movlw	45
  2880  041F  00A8               	movwf	??_sprintf^(0+128)
  2881  0420  083E               	movf	sprintf@sp^(0+128),w
  2882  0421  0084               	movwf	4
  2883  0422  0828               	movf	??_sprintf^(0+128),w
  2884  0423  1383               	bcf	3,7	;select IRP bank0
  2885  0424  0080               	movwf	0
  2886  0425                     l3600:	
  2887  0425  3001               	movlw	1
  2888  0426  00A8               	movwf	??_sprintf^(0+128)
  2889  0427  0828               	movf	??_sprintf^(0+128),w
  2890  0428  07BE               	addwf	sprintf@sp^(0+128),f
  2891  0429  2CB0               	goto	l293
  2892  042A                     l3602:	
  2893                           
  2894                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1226:     {
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1227:      
      +                          tmpval.vd = val/dpowers[c];
  2895  042A  0845               	movf	sprintf@c^(0+128),w
  2896  042B  00A8               	movwf	??_sprintf^(0+128)
  2897  042C  3001               	movlw	1
  2898  042D                     u5875:	
  2899  042D  1003               	clrc
  2900  042E  0DA8               	rlf	??_sprintf^(0+128),f
  2901  042F  3EFF               	addlw	-1
  2902  0430  1D03               	skipz
  2903  0431  2C2D               	goto	u5875
  2904  0432  1003               	clrc
  2905  0433  0D28               	rlf	??_sprintf^(0+128),w
  2906  0434  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2907  0435  0084               	movwf	4
  2908  0436  160A  118A  200A  120A  118A  	fcall	stringdir
  2909  043B  00F2               	movwf	___lldiv@divisor
  2910  043C  160A  118A  200A  120A  118A  	fcall	stringdir
  2911  0441  00F3               	movwf	___lldiv@divisor+1
  2912  0442  160A  118A  200A  120A  118A  	fcall	stringdir
  2913  0447  00F4               	movwf	___lldiv@divisor+2
  2914  0448  160A  118A  200A  120A  118A  	fcall	stringdir
  2915  044D  00F5               	movwf	___lldiv@divisor+3
  2916  044E  083D               	movf	(sprintf@val+3)^(0+128),w
  2917  044F  00F9               	movwf	___lldiv@dividend+3
  2918  0450  083C               	movf	(sprintf@val+2)^(0+128),w
  2919  0451  00F8               	movwf	___lldiv@dividend+2
  2920  0452  083B               	movf	(sprintf@val+1)^(0+128),w
  2921  0453  00F7               	movwf	___lldiv@dividend+1
  2922  0454  083A               	movf	sprintf@val^(0+128),w
  2923  0455  00F6               	movwf	___lldiv@dividend
  2924  0456  160A  158A  2656  120A  118A  	fcall	___lldiv
  2925  045B  0875               	movf	?___lldiv+3,w
  2926  045C  1683               	bsf	3,5	;RP0=1, select bank1
  2927  045D  1303               	bcf	3,6	;RP1=0, select bank1
  2928  045E  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
  2929  045F  0874               	movf	?___lldiv+2,w
  2930  0460  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
  2931  0461  0873               	movf	?___lldiv+1,w
  2932  0462  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
  2933  0463  0872               	movf	?___lldiv,w
  2934  0464  00B6               	movwf	sprintf@tmpval^(0+128)
  2935  0465                     l3604:	
  2936                           
  2937                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1228:      
      +                          tmpval.vd %= 10;
  2938  0465  3000               	movlw	0
  2939  0466  1283               	bcf	3,5	;RP0=0, select bank0
  2940  0467  1303               	bcf	3,6	;RP1=0, select bank0
  2941  0468  00A8               	movwf	___llmod@divisor+3
  2942  0469  3000               	movlw	0
  2943  046A  00A7               	movwf	___llmod@divisor+2
  2944  046B  3000               	movlw	0
  2945  046C  00A6               	movwf	___llmod@divisor+1
  2946  046D  300A               	movlw	10
  2947  046E  00A5               	movwf	___llmod@divisor
  2948  046F  1683               	bsf	3,5	;RP0=1, select bank1
  2949  0470  1303               	bcf	3,6	;RP1=0, select bank1
  2950  0471  0839               	movf	(sprintf@tmpval+3)^(0+128),w
  2951  0472  1283               	bcf	3,5	;RP0=0, select bank0
  2952  0473  1303               	bcf	3,6	;RP1=0, select bank0
  2953  0474  00AC               	movwf	___llmod@dividend+3
  2954  0475  1683               	bsf	3,5	;RP0=1, select bank1
  2955  0476  1303               	bcf	3,6	;RP1=0, select bank1
  2956  0477  0838               	movf	(sprintf@tmpval+2)^(0+128),w
  2957  0478  1283               	bcf	3,5	;RP0=0, select bank0
  2958  0479  1303               	bcf	3,6	;RP1=0, select bank0
  2959  047A  00AB               	movwf	___llmod@dividend+2
  2960  047B  1683               	bsf	3,5	;RP0=1, select bank1
  2961  047C  1303               	bcf	3,6	;RP1=0, select bank1
  2962  047D  0837               	movf	(sprintf@tmpval+1)^(0+128),w
  2963  047E  1283               	bcf	3,5	;RP0=0, select bank0
  2964  047F  1303               	bcf	3,6	;RP1=0, select bank0
  2965  0480  00AA               	movwf	___llmod@dividend+1
  2966  0481  1683               	bsf	3,5	;RP0=1, select bank1
  2967  0482  1303               	bcf	3,6	;RP1=0, select bank1
  2968  0483  0836               	movf	sprintf@tmpval^(0+128),w
  2969  0484  1283               	bcf	3,5	;RP0=0, select bank0
  2970  0485  1303               	bcf	3,6	;RP1=0, select bank0
  2971  0486  00A9               	movwf	___llmod@dividend
  2972  0487  160A  158A  25A7  120A  118A  	fcall	___llmod
  2973  048C  1283               	bcf	3,5	;RP0=0, select bank0
  2974  048D  1303               	bcf	3,6	;RP1=0, select bank0
  2975  048E  0828               	movf	?___llmod+3,w
  2976  048F  1683               	bsf	3,5	;RP0=1, select bank1
  2977  0490  1303               	bcf	3,6	;RP1=0, select bank1
  2978  0491  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
  2979  0492  1283               	bcf	3,5	;RP0=0, select bank0
  2980  0493  1303               	bcf	3,6	;RP1=0, select bank0
  2981  0494  0827               	movf	?___llmod+2,w
  2982  0495  1683               	bsf	3,5	;RP0=1, select bank1
  2983  0496  1303               	bcf	3,6	;RP1=0, select bank1
  2984  0497  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
  2985  0498  1283               	bcf	3,5	;RP0=0, select bank0
  2986  0499  1303               	bcf	3,6	;RP1=0, select bank0
  2987  049A  0826               	movf	?___llmod+1,w
  2988  049B  1683               	bsf	3,5	;RP0=1, select bank1
  2989  049C  1303               	bcf	3,6	;RP1=0, select bank1
  2990  049D  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
  2991  049E  1283               	bcf	3,5	;RP0=0, select bank0
  2992  049F  1303               	bcf	3,6	;RP1=0, select bank0
  2993  04A0  0825               	movf	?___llmod,w
  2994  04A1  1683               	bsf	3,5	;RP0=1, select bank1
  2995  04A2  1303               	bcf	3,6	;RP1=0, select bank1
  2996  04A3  00B6               	movwf	sprintf@tmpval^(0+128)
  2997  04A4                     l3606:	
  2998                           
  2999                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1229:      
      +                          ((*sp++ = ('0' + tmpval.vd)));
  3000  04A4  0836               	movf	sprintf@tmpval^(0+128),w
  3001  04A5  3E30               	addlw	48
  3002  04A6  00A8               	movwf	??_sprintf^(0+128)
  3003  04A7  083E               	movf	sprintf@sp^(0+128),w
  3004  04A8  0084               	movwf	4
  3005  04A9  0828               	movf	??_sprintf^(0+128),w
  3006  04AA  1383               	bcf	3,7	;select IRP bank0
  3007  04AB  0080               	movwf	0
  3008  04AC  3001               	movlw	1
  3009  04AD  00A8               	movwf	??_sprintf^(0+128)
  3010  04AE  0828               	movf	??_sprintf^(0+128),w
  3011  04AF  07BE               	addwf	sprintf@sp^(0+128),f
  3012  04B0                     l293:	
  3013                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1230:     }
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1232:    }
  3014                           
  3015                           
  3016                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1222:    wh
      +                          ile(c--) {
  3017  04B0  3001               	movlw	1
  3018  04B1  02C5               	subwf	sprintf@c^(0+128),f
  3019  04B2  0A45               	incf	sprintf@c^(0+128),w
  3020  04B3  1D03               	btfss	3,2
  3021  04B4  2CB6               	goto	u5881
  3022  04B5  2CB7               	goto	u5880
  3023  04B6                     u5881:	
  3024  04B6  2C2A               	goto	l3602
  3025  04B7                     u5880:	
  3026  04B7  2CCB               	goto	l3614
  3027  04B8                     l3608:	
  3028                           
  3029                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1234:     (
      +                          (*sp++ = ('0')));
  3030  04B8  3030               	movlw	48
  3031  04B9  1683               	bsf	3,5	;RP0=1, select bank1
  3032  04BA  1303               	bcf	3,6	;RP1=0, select bank1
  3033  04BB  00A8               	movwf	??_sprintf^(0+128)
  3034  04BC  083E               	movf	sprintf@sp^(0+128),w
  3035  04BD  0084               	movwf	4
  3036  04BE  0828               	movf	??_sprintf^(0+128),w
  3037  04BF  1383               	bcf	3,7	;select IRP bank0
  3038  04C0  0080               	movwf	0
  3039  04C1                     l3610:	
  3040  04C1  3001               	movlw	1
  3041  04C2  00A8               	movwf	??_sprintf^(0+128)
  3042  04C3  0828               	movf	??_sprintf^(0+128),w
  3043  04C4  07BE               	addwf	sprintf@sp^(0+128),f
  3044  04C5                     l3612:	
  3045                           
  3046                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1235:     e
      +                          exp--;
  3047  04C5  30FF               	movlw	255
  3048  04C6  07B4               	addwf	sprintf@eexp^(0+128),f
  3049  04C7  1803               	skipnc
  3050  04C8  0AB5               	incf	(sprintf@eexp+1)^(0+128),f
  3051  04C9  30FF               	movlw	255
  3052  04CA  07B5               	addwf	(sprintf@eexp+1)^(0+128),f
  3053  04CB                     l3614:	
  3054                           
  3055                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1233:    wh
      +                          ile(eexp > 0) {
  3056  04CB  0835               	movf	(sprintf@eexp+1)^(0+128),w
  3057  04CC  3A80               	xorlw	128
  3058  04CD  00FF               	movwf	btemp+1
  3059  04CE  3080               	movlw	128
  3060  04CF  027F               	subwf	btemp+1,w
  3061  04D0  1D03               	skipz
  3062  04D1  2CD4               	goto	u5895
  3063  04D2  3001               	movlw	1
  3064  04D3  0234               	subwf	sprintf@eexp^(0+128),w
  3065  04D4                     u5895:	
  3066  04D4  1803               	skipnc
  3067  04D5  2CD7               	goto	u5891
  3068  04D6  2CD8               	goto	u5890
  3069  04D7                     u5891:	
  3070  04D7  2CB8               	goto	l3608
  3071  04D8                     u5890:	
  3072  04D8                     l3616:	
  3073                           
  3074                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1237:    if
      +                          (prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3075  04D8  1683               	bsf	3,5	;RP0=1, select bank1
  3076  04D9  1303               	bcf	3,6	;RP1=0, select bank1
  3077  04DA  0844               	movf	(sprintf@prec+1)^(0+128),w
  3078  04DB  3A80               	xorlw	128
  3079  04DC  00FF               	movwf	btemp+1
  3080  04DD  3080               	movlw	128
  3081  04DE  027F               	subwf	btemp+1,w
  3082  04DF  1D03               	skipz
  3083  04E0  2CE3               	goto	u5905
  3084  04E1  3009               	movlw	9
  3085  04E2  0243               	subwf	sprintf@prec^(0+128),w
  3086  04E3                     u5905:	
  3087  04E3  1C03               	skipc
  3088  04E4  2CE6               	goto	u5901
  3089  04E5  2CE7               	goto	u5900
  3090  04E6                     u5901:	
  3091  04E6  2CEE               	goto	l3620
  3092  04E7                     u5900:	
  3093  04E7                     l3618:	
  3094                           
  3095                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1238:     c
      +                           = (sizeof dpowers/sizeof dpowers[0])-2;
  3096  04E7  3008               	movlw	8
  3097  04E8  1683               	bsf	3,5	;RP0=1, select bank1
  3098  04E9  1303               	bcf	3,6	;RP1=0, select bank1
  3099  04EA  00A8               	movwf	??_sprintf^(0+128)
  3100  04EB  0828               	movf	??_sprintf^(0+128),w
  3101  04EC  00C5               	movwf	sprintf@c^(0+128)
  3102  04ED  2CF4               	goto	l300
  3103  04EE                     l3620:	
  3104                           
  3105                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1240:     c
      +                           = (char)prec;
  3106  04EE  1683               	bsf	3,5	;RP0=1, select bank1
  3107  04EF  1303               	bcf	3,6	;RP1=0, select bank1
  3108  04F0  0843               	movf	sprintf@prec^(0+128),w
  3109  04F1  00A8               	movwf	??_sprintf^(0+128)
  3110  04F2  0828               	movf	??_sprintf^(0+128),w
  3111  04F3  00C5               	movwf	sprintf@c^(0+128)
  3112  04F4                     l300:	
  3113                           
  3114                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1241:    pr
      +                          ec -= (int)c;
  3115  04F4  0845               	movf	sprintf@c^(0+128),w
  3116  04F5  00A8               	movwf	??_sprintf^(0+128)
  3117  04F6  01A9               	clrf	(??_sprintf^(0+128)+1)
  3118  04F7  0828               	movf	??_sprintf^(0+128),w
  3119  04F8  02C3               	subwf	sprintf@prec^(0+128),f
  3120  04F9  0829               	movf	(??_sprintf+1)^(0+128),w
  3121  04FA  1C03               	skipc
  3122  04FB  03C4               	decf	(sprintf@prec+1)^(0+128),f
  3123  04FC  02C4               	subwf	(sprintf@prec+1)^(0+128),f
  3124  04FD                     l3622:	
  3125                           
  3126                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1245:    if
      +                          (c)
  3127  04FD  0845               	movf	sprintf@c^(0+128),w
  3128  04FE  1903               	btfsc	3,2
  3129  04FF  2D01               	goto	u5911
  3130  0500  2D02               	goto	u5910
  3131  0501                     u5911:	
  3132  0501  2D0D               	goto	l3628
  3133  0502                     u5910:	
  3134  0502                     l3624:	
  3135                           
  3136                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1247:     (
      +                          (*sp++ = ('.')));
  3137  0502  302E               	movlw	46
  3138  0503  00A8               	movwf	??_sprintf^(0+128)
  3139  0504  083E               	movf	sprintf@sp^(0+128),w
  3140  0505  0084               	movwf	4
  3141  0506  0828               	movf	??_sprintf^(0+128),w
  3142  0507  1383               	bcf	3,7	;select IRP bank0
  3143  0508  0080               	movwf	0
  3144  0509                     l3626:	
  3145  0509  3001               	movlw	1
  3146  050A  00A8               	movwf	??_sprintf^(0+128)
  3147  050B  0828               	movf	??_sprintf^(0+128),w
  3148  050C  07BE               	addwf	sprintf@sp^(0+128),f
  3149  050D                     l3628:	
  3150                           
  3151                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1253:    va
      +                          l = (unsigned long)(fval * scale((signed char)c));
  3152  050D  0845               	movf	sprintf@c^(0+128),w
  3153  050E  120A  158A  249D  120A  118A  	fcall	_scale
  3154  0513  1283               	bcf	3,5	;RP0=0, select bank0
  3155  0514  1303               	bcf	3,6	;RP1=0, select bank0
  3156  0515  0845               	movf	?_scale+3,w
  3157  0516  1683               	bsf	3,5	;RP0=1, select bank1
  3158  0517  1303               	bcf	3,6	;RP1=0, select bank1
  3159  0518  00B0               	movwf	(_sprintf$1025+3)^(0+128)
  3160  0519  1283               	bcf	3,5	;RP0=0, select bank0
  3161  051A  1303               	bcf	3,6	;RP1=0, select bank0
  3162  051B  0844               	movf	?_scale+2,w
  3163  051C  1683               	bsf	3,5	;RP0=1, select bank1
  3164  051D  1303               	bcf	3,6	;RP1=0, select bank1
  3165  051E  00AF               	movwf	(_sprintf$1025+2)^(0+128)
  3166  051F  1283               	bcf	3,5	;RP0=0, select bank0
  3167  0520  1303               	bcf	3,6	;RP1=0, select bank0
  3168  0521  0843               	movf	?_scale+1,w
  3169  0522  1683               	bsf	3,5	;RP0=1, select bank1
  3170  0523  1303               	bcf	3,6	;RP1=0, select bank1
  3171  0524  00AE               	movwf	(_sprintf$1025+1)^(0+128)
  3172  0525  1283               	bcf	3,5	;RP0=0, select bank0
  3173  0526  1303               	bcf	3,6	;RP1=0, select bank0
  3174  0527  0842               	movf	?_scale,w
  3175  0528  1683               	bsf	3,5	;RP0=1, select bank1
  3176  0529  1303               	bcf	3,6	;RP1=0, select bank1
  3177  052A  00AD               	movwf	_sprintf$1025^(0+128)
  3178  052B                     l3630:	
  3179                           
  3180                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1253:    va
      +                          l = (unsigned long)(fval * scale((signed char)c));
  3181  052B  0830               	movf	(_sprintf$1025+3)^(0+128),w
  3182  052C  1283               	bcf	3,5	;RP0=0, select bank0
  3183  052D  1303               	bcf	3,6	;RP1=0, select bank0
  3184  052E  00AF               	movwf	___flmul@a+3
  3185  052F  1683               	bsf	3,5	;RP0=1, select bank1
  3186  0530  1303               	bcf	3,6	;RP1=0, select bank1
  3187  0531  082F               	movf	(_sprintf$1025+2)^(0+128),w
  3188  0532  1283               	bcf	3,5	;RP0=0, select bank0
  3189  0533  1303               	bcf	3,6	;RP1=0, select bank0
  3190  0534  00AE               	movwf	___flmul@a+2
  3191  0535  1683               	bsf	3,5	;RP0=1, select bank1
  3192  0536  1303               	bcf	3,6	;RP1=0, select bank1
  3193  0537  082E               	movf	(_sprintf$1025+1)^(0+128),w
  3194  0538  1283               	bcf	3,5	;RP0=0, select bank0
  3195  0539  1303               	bcf	3,6	;RP1=0, select bank0
  3196  053A  00AD               	movwf	___flmul@a+1
  3197  053B  1683               	bsf	3,5	;RP0=1, select bank1
  3198  053C  1303               	bcf	3,6	;RP1=0, select bank1
  3199  053D  082D               	movf	_sprintf$1025^(0+128),w
  3200  053E  1283               	bcf	3,5	;RP0=0, select bank0
  3201  053F  1303               	bcf	3,6	;RP1=0, select bank0
  3202  0540  00AC               	movwf	___flmul@a
  3203  0541  1683               	bsf	3,5	;RP0=1, select bank1
  3204  0542  1303               	bcf	3,6	;RP1=0, select bank1
  3205  0543  0842               	movf	(sprintf@fval+3)^(0+128),w
  3206  0544  1283               	bcf	3,5	;RP0=0, select bank0
  3207  0545  1303               	bcf	3,6	;RP1=0, select bank0
  3208  0546  00AB               	movwf	___flmul@b+3
  3209  0547  1683               	bsf	3,5	;RP0=1, select bank1
  3210  0548  1303               	bcf	3,6	;RP1=0, select bank1
  3211  0549  0841               	movf	(sprintf@fval+2)^(0+128),w
  3212  054A  1283               	bcf	3,5	;RP0=0, select bank0
  3213  054B  1303               	bcf	3,6	;RP1=0, select bank0
  3214  054C  00AA               	movwf	___flmul@b+2
  3215  054D  1683               	bsf	3,5	;RP0=1, select bank1
  3216  054E  1303               	bcf	3,6	;RP1=0, select bank1
  3217  054F  0840               	movf	(sprintf@fval+1)^(0+128),w
  3218  0550  1283               	bcf	3,5	;RP0=0, select bank0
  3219  0551  1303               	bcf	3,6	;RP1=0, select bank0
  3220  0552  00A9               	movwf	___flmul@b+1
  3221  0553  1683               	bsf	3,5	;RP0=1, select bank1
  3222  0554  1303               	bcf	3,6	;RP1=0, select bank1
  3223  0555  083F               	movf	sprintf@fval^(0+128),w
  3224  0556  1283               	bcf	3,5	;RP0=0, select bank0
  3225  0557  1303               	bcf	3,6	;RP1=0, select bank0
  3226  0558  00A8               	movwf	___flmul@b
  3227  0559  120A  158A  213C  120A  118A  	fcall	___flmul
  3228  055E  1283               	bcf	3,5	;RP0=0, select bank0
  3229  055F  1303               	bcf	3,6	;RP1=0, select bank0
  3230  0560  082B               	movf	?___flmul+3,w
  3231  0561  00D8               	movwf	___fltol@f1+3
  3232  0562  082A               	movf	?___flmul+2,w
  3233  0563  00D7               	movwf	___fltol@f1+2
  3234  0564  0829               	movf	?___flmul+1,w
  3235  0565  00D6               	movwf	___fltol@f1+1
  3236  0566  0828               	movf	?___flmul,w
  3237  0567  00D5               	movwf	___fltol@f1
  3238  0568  160A  118A  20B8  120A  118A  	fcall	___fltol
  3239  056D  1283               	bcf	3,5	;RP0=0, select bank0
  3240  056E  1303               	bcf	3,6	;RP1=0, select bank0
  3241  056F  0858               	movf	?___fltol+3,w
  3242  0570  1683               	bsf	3,5	;RP0=1, select bank1
  3243  0571  1303               	bcf	3,6	;RP1=0, select bank1
  3244  0572  00BD               	movwf	(sprintf@val+3)^(0+128)
  3245  0573  1283               	bcf	3,5	;RP0=0, select bank0
  3246  0574  1303               	bcf	3,6	;RP1=0, select bank0
  3247  0575  0857               	movf	?___fltol+2,w
  3248  0576  1683               	bsf	3,5	;RP0=1, select bank1
  3249  0577  1303               	bcf	3,6	;RP1=0, select bank1
  3250  0578  00BC               	movwf	(sprintf@val+2)^(0+128)
  3251  0579  1283               	bcf	3,5	;RP0=0, select bank0
  3252  057A  1303               	bcf	3,6	;RP1=0, select bank0
  3253  057B  0856               	movf	?___fltol+1,w
  3254  057C  1683               	bsf	3,5	;RP0=1, select bank1
  3255  057D  1303               	bcf	3,6	;RP1=0, select bank1
  3256  057E  00BB               	movwf	(sprintf@val+1)^(0+128)
  3257  057F  1283               	bcf	3,5	;RP0=0, select bank0
  3258  0580  1303               	bcf	3,6	;RP1=0, select bank0
  3259  0581  0855               	movf	?___fltol,w
  3260  0582  1683               	bsf	3,5	;RP0=1, select bank1
  3261  0583  1303               	bcf	3,6	;RP1=0, select bank1
  3262  0584  00BA               	movwf	sprintf@val^(0+128)
  3263                           
  3264                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1254:    wh
      +                          ile(c--) {
  3265  0585  2E67               	goto	l3640
  3266  0586                     l3632:	
  3267                           
  3268                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1255:     t
      +                          mpval.vd = val/dpowers[c];
  3269  0586  0845               	movf	sprintf@c^(0+128),w
  3270  0587  00A8               	movwf	??_sprintf^(0+128)
  3271  0588  3001               	movlw	1
  3272  0589                     u5925:	
  3273  0589  1003               	clrc
  3274  058A  0DA8               	rlf	??_sprintf^(0+128),f
  3275  058B  3EFF               	addlw	-1
  3276  058C  1D03               	skipz
  3277  058D  2D89               	goto	u5925
  3278  058E  1003               	clrc
  3279  058F  0D28               	rlf	??_sprintf^(0+128),w
  3280  0590  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3281  0591  0084               	movwf	4
  3282  0592  160A  118A  200A  120A  118A  	fcall	stringdir
  3283  0597  00F2               	movwf	___lldiv@divisor
  3284  0598  160A  118A  200A  120A  118A  	fcall	stringdir
  3285  059D  00F3               	movwf	___lldiv@divisor+1
  3286  059E  160A  118A  200A  120A  118A  	fcall	stringdir
  3287  05A3  00F4               	movwf	___lldiv@divisor+2
  3288  05A4  160A  118A  200A  120A  118A  	fcall	stringdir
  3289  05A9  00F5               	movwf	___lldiv@divisor+3
  3290  05AA  083D               	movf	(sprintf@val+3)^(0+128),w
  3291  05AB  00F9               	movwf	___lldiv@dividend+3
  3292  05AC  083C               	movf	(sprintf@val+2)^(0+128),w
  3293  05AD  00F8               	movwf	___lldiv@dividend+2
  3294  05AE  083B               	movf	(sprintf@val+1)^(0+128),w
  3295  05AF  00F7               	movwf	___lldiv@dividend+1
  3296  05B0  083A               	movf	sprintf@val^(0+128),w
  3297  05B1  00F6               	movwf	___lldiv@dividend
  3298  05B2  160A  158A  2656  120A  118A  	fcall	___lldiv
  3299  05B7  0875               	movf	?___lldiv+3,w
  3300  05B8  1683               	bsf	3,5	;RP0=1, select bank1
  3301  05B9  1303               	bcf	3,6	;RP1=0, select bank1
  3302  05BA  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
  3303  05BB  0874               	movf	?___lldiv+2,w
  3304  05BC  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
  3305  05BD  0873               	movf	?___lldiv+1,w
  3306  05BE  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
  3307  05BF  0872               	movf	?___lldiv,w
  3308  05C0  00B6               	movwf	sprintf@tmpval^(0+128)
  3309  05C1                     l3634:	
  3310                           
  3311                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1256:     t
      +                          mpval.vd %= 10;
  3312  05C1  3000               	movlw	0
  3313  05C2  1283               	bcf	3,5	;RP0=0, select bank0
  3314  05C3  1303               	bcf	3,6	;RP1=0, select bank0
  3315  05C4  00A8               	movwf	___llmod@divisor+3
  3316  05C5  3000               	movlw	0
  3317  05C6  00A7               	movwf	___llmod@divisor+2
  3318  05C7  3000               	movlw	0
  3319  05C8  00A6               	movwf	___llmod@divisor+1
  3320  05C9  300A               	movlw	10
  3321  05CA  00A5               	movwf	___llmod@divisor
  3322  05CB  1683               	bsf	3,5	;RP0=1, select bank1
  3323  05CC  1303               	bcf	3,6	;RP1=0, select bank1
  3324  05CD  0839               	movf	(sprintf@tmpval+3)^(0+128),w
  3325  05CE  1283               	bcf	3,5	;RP0=0, select bank0
  3326  05CF  1303               	bcf	3,6	;RP1=0, select bank0
  3327  05D0  00AC               	movwf	___llmod@dividend+3
  3328  05D1  1683               	bsf	3,5	;RP0=1, select bank1
  3329  05D2  1303               	bcf	3,6	;RP1=0, select bank1
  3330  05D3  0838               	movf	(sprintf@tmpval+2)^(0+128),w
  3331  05D4  1283               	bcf	3,5	;RP0=0, select bank0
  3332  05D5  1303               	bcf	3,6	;RP1=0, select bank0
  3333  05D6  00AB               	movwf	___llmod@dividend+2
  3334  05D7  1683               	bsf	3,5	;RP0=1, select bank1
  3335  05D8  1303               	bcf	3,6	;RP1=0, select bank1
  3336  05D9  0837               	movf	(sprintf@tmpval+1)^(0+128),w
  3337  05DA  1283               	bcf	3,5	;RP0=0, select bank0
  3338  05DB  1303               	bcf	3,6	;RP1=0, select bank0
  3339  05DC  00AA               	movwf	___llmod@dividend+1
  3340  05DD  1683               	bsf	3,5	;RP0=1, select bank1
  3341  05DE  1303               	bcf	3,6	;RP1=0, select bank1
  3342  05DF  0836               	movf	sprintf@tmpval^(0+128),w
  3343  05E0  1283               	bcf	3,5	;RP0=0, select bank0
  3344  05E1  1303               	bcf	3,6	;RP1=0, select bank0
  3345  05E2  00A9               	movwf	___llmod@dividend
  3346  05E3  160A  158A  25A7  120A  118A  	fcall	___llmod
  3347  05E8  1283               	bcf	3,5	;RP0=0, select bank0
  3348  05E9  1303               	bcf	3,6	;RP1=0, select bank0
  3349  05EA  0828               	movf	?___llmod+3,w
  3350  05EB  1683               	bsf	3,5	;RP0=1, select bank1
  3351  05EC  1303               	bcf	3,6	;RP1=0, select bank1
  3352  05ED  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
  3353  05EE  1283               	bcf	3,5	;RP0=0, select bank0
  3354  05EF  1303               	bcf	3,6	;RP1=0, select bank0
  3355  05F0  0827               	movf	?___llmod+2,w
  3356  05F1  1683               	bsf	3,5	;RP0=1, select bank1
  3357  05F2  1303               	bcf	3,6	;RP1=0, select bank1
  3358  05F3  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
  3359  05F4  1283               	bcf	3,5	;RP0=0, select bank0
  3360  05F5  1303               	bcf	3,6	;RP1=0, select bank0
  3361  05F6  0826               	movf	?___llmod+1,w
  3362  05F7  1683               	bsf	3,5	;RP0=1, select bank1
  3363  05F8  1303               	bcf	3,6	;RP1=0, select bank1
  3364  05F9  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
  3365  05FA  1283               	bcf	3,5	;RP0=0, select bank0
  3366  05FB  1303               	bcf	3,6	;RP1=0, select bank0
  3367  05FC  0825               	movf	?___llmod,w
  3368  05FD  1683               	bsf	3,5	;RP0=1, select bank1
  3369  05FE  1303               	bcf	3,6	;RP1=0, select bank1
  3370  05FF  00B6               	movwf	sprintf@tmpval^(0+128)
  3371  0600                     l3636:	
  3372                           
  3373                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1257:     (
      +                          (*sp++ = ('0' + tmpval.vd)));
  3374  0600  0836               	movf	sprintf@tmpval^(0+128),w
  3375  0601  3E30               	addlw	48
  3376  0602  00A8               	movwf	??_sprintf^(0+128)
  3377  0603  083E               	movf	sprintf@sp^(0+128),w
  3378  0604  0084               	movwf	4
  3379  0605  0828               	movf	??_sprintf^(0+128),w
  3380  0606  1383               	bcf	3,7	;select IRP bank0
  3381  0607  0080               	movwf	0
  3382  0608  3001               	movlw	1
  3383  0609  00A8               	movwf	??_sprintf^(0+128)
  3384  060A  0828               	movf	??_sprintf^(0+128),w
  3385  060B  07BE               	addwf	sprintf@sp^(0+128),f
  3386  060C                     l3638:	
  3387                           
  3388                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1258:     v
      +                          al %= dpowers[c];
  3389  060C  0845               	movf	sprintf@c^(0+128),w
  3390  060D  00A8               	movwf	??_sprintf^(0+128)
  3391  060E  3001               	movlw	1
  3392  060F                     u5935:	
  3393  060F  1003               	clrc
  3394  0610  0DA8               	rlf	??_sprintf^(0+128),f
  3395  0611  3EFF               	addlw	-1
  3396  0612  1D03               	skipz
  3397  0613  2E0F               	goto	u5935
  3398  0614  1003               	clrc
  3399  0615  0D28               	rlf	??_sprintf^(0+128),w
  3400  0616  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3401  0617  0084               	movwf	4
  3402  0618  160A  118A  200A  120A  118A  	fcall	stringdir
  3403  061D  1283               	bcf	3,5	;RP0=0, select bank0
  3404  061E  1303               	bcf	3,6	;RP1=0, select bank0
  3405  061F  00A5               	movwf	___llmod@divisor
  3406  0620  160A  118A  200A  120A  118A  	fcall	stringdir
  3407  0625  00A6               	movwf	___llmod@divisor+1
  3408  0626  160A  118A  200A  120A  118A  	fcall	stringdir
  3409  062B  00A7               	movwf	___llmod@divisor+2
  3410  062C  160A  118A  200A  120A  118A  	fcall	stringdir
  3411  0631  00A8               	movwf	___llmod@divisor+3
  3412  0632  1683               	bsf	3,5	;RP0=1, select bank1
  3413  0633  1303               	bcf	3,6	;RP1=0, select bank1
  3414  0634  083D               	movf	(sprintf@val+3)^(0+128),w
  3415  0635  1283               	bcf	3,5	;RP0=0, select bank0
  3416  0636  1303               	bcf	3,6	;RP1=0, select bank0
  3417  0637  00AC               	movwf	___llmod@dividend+3
  3418  0638  1683               	bsf	3,5	;RP0=1, select bank1
  3419  0639  1303               	bcf	3,6	;RP1=0, select bank1
  3420  063A  083C               	movf	(sprintf@val+2)^(0+128),w
  3421  063B  1283               	bcf	3,5	;RP0=0, select bank0
  3422  063C  1303               	bcf	3,6	;RP1=0, select bank0
  3423  063D  00AB               	movwf	___llmod@dividend+2
  3424  063E  1683               	bsf	3,5	;RP0=1, select bank1
  3425  063F  1303               	bcf	3,6	;RP1=0, select bank1
  3426  0640  083B               	movf	(sprintf@val+1)^(0+128),w
  3427  0641  1283               	bcf	3,5	;RP0=0, select bank0
  3428  0642  1303               	bcf	3,6	;RP1=0, select bank0
  3429  0643  00AA               	movwf	___llmod@dividend+1
  3430  0644  1683               	bsf	3,5	;RP0=1, select bank1
  3431  0645  1303               	bcf	3,6	;RP1=0, select bank1
  3432  0646  083A               	movf	sprintf@val^(0+128),w
  3433  0647  1283               	bcf	3,5	;RP0=0, select bank0
  3434  0648  1303               	bcf	3,6	;RP1=0, select bank0
  3435  0649  00A9               	movwf	___llmod@dividend
  3436  064A  160A  158A  25A7  120A  118A  	fcall	___llmod
  3437  064F  1283               	bcf	3,5	;RP0=0, select bank0
  3438  0650  1303               	bcf	3,6	;RP1=0, select bank0
  3439  0651  0828               	movf	?___llmod+3,w
  3440  0652  1683               	bsf	3,5	;RP0=1, select bank1
  3441  0653  1303               	bcf	3,6	;RP1=0, select bank1
  3442  0654  00BD               	movwf	(sprintf@val+3)^(0+128)
  3443  0655  1283               	bcf	3,5	;RP0=0, select bank0
  3444  0656  1303               	bcf	3,6	;RP1=0, select bank0
  3445  0657  0827               	movf	?___llmod+2,w
  3446  0658  1683               	bsf	3,5	;RP0=1, select bank1
  3447  0659  1303               	bcf	3,6	;RP1=0, select bank1
  3448  065A  00BC               	movwf	(sprintf@val+2)^(0+128)
  3449  065B  1283               	bcf	3,5	;RP0=0, select bank0
  3450  065C  1303               	bcf	3,6	;RP1=0, select bank0
  3451  065D  0826               	movf	?___llmod+1,w
  3452  065E  1683               	bsf	3,5	;RP0=1, select bank1
  3453  065F  1303               	bcf	3,6	;RP1=0, select bank1
  3454  0660  00BB               	movwf	(sprintf@val+1)^(0+128)
  3455  0661  1283               	bcf	3,5	;RP0=0, select bank0
  3456  0662  1303               	bcf	3,6	;RP1=0, select bank0
  3457  0663  0825               	movf	?___llmod,w
  3458  0664  1683               	bsf	3,5	;RP0=1, select bank1
  3459  0665  1303               	bcf	3,6	;RP1=0, select bank1
  3460  0666  00BA               	movwf	sprintf@val^(0+128)
  3461  0667                     l3640:	
  3462                           
  3463                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1254:    wh
      +                          ile(c--) {
  3464  0667  3001               	movlw	1
  3465  0668  02C5               	subwf	sprintf@c^(0+128),f
  3466  0669  0A45               	incf	sprintf@c^(0+128),w
  3467  066A  1D03               	btfss	3,2
  3468  066B  2E6D               	goto	u5941
  3469  066C  2E6E               	goto	u5940
  3470  066D                     u5941:	
  3471  066D  2D86               	goto	l3632
  3472  066E                     u5940:	
  3473  066E  2E80               	goto	l3648
  3474  066F                     l3642:	
  3475                           
  3476                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1262:     (
      +                          (*sp++ = ('0')));
  3477  066F  3030               	movlw	48
  3478  0670  00A8               	movwf	??_sprintf^(0+128)
  3479  0671  083E               	movf	sprintf@sp^(0+128),w
  3480  0672  0084               	movwf	4
  3481  0673  0828               	movf	??_sprintf^(0+128),w
  3482  0674  1383               	bcf	3,7	;select IRP bank0
  3483  0675  0080               	movwf	0
  3484  0676                     l3644:	
  3485  0676  3001               	movlw	1
  3486  0677  00A8               	movwf	??_sprintf^(0+128)
  3487  0678  0828               	movf	??_sprintf^(0+128),w
  3488  0679  07BE               	addwf	sprintf@sp^(0+128),f
  3489  067A                     l3646:	
  3490                           
  3491                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1263:     p
      +                          rec--;
  3492  067A  30FF               	movlw	255
  3493  067B  07C3               	addwf	sprintf@prec^(0+128),f
  3494  067C  1803               	skipnc
  3495  067D  0AC4               	incf	(sprintf@prec+1)^(0+128),f
  3496  067E  30FF               	movlw	255
  3497  067F  07C4               	addwf	(sprintf@prec+1)^(0+128),f
  3498  0680                     l3648:	
  3499                           
  3500                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1261:    wh
      +                          ile(prec) {
  3501  0680  0843               	movf	sprintf@prec^(0+128),w
  3502  0681  0444               	iorwf	(sprintf@prec+1)^(0+128),w
  3503  0682  1D03               	btfss	3,2
  3504  0683  2E85               	goto	u5951
  3505  0684  2E86               	goto	u5950
  3506  0685                     u5951:	
  3507  0685  2E6F               	goto	l3642
  3508  0686                     u5950:	
  3509  0686  2FAF               	goto	l3700
  3510  0687                     l3650:	
  3511                           
  3512                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1279:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1285:     val
      +                           = (unsigned long)(*(int *)__va_arg((*(int **)ap), (int)0));
  3513  0687  0831               	movf	sprintf@ap^(0+128),w
  3514  0688  0084               	movwf	4
  3515  0689  1383               	bcf	3,7	;select IRP bank0
  3516  068A  0800               	movf	0,w
  3517  068B  00A8               	movwf	??_sprintf^(0+128)
  3518  068C  0A84               	incf	4,f
  3519  068D  0800               	movf	0,w
  3520  068E  00A9               	movwf	(??_sprintf^(0+128)+1)
  3521  068F  0828               	movf	??_sprintf^(0+128),w
  3522  0690  00BA               	movwf	sprintf@val^(0+128)
  3523  0691  0829               	movf	(??_sprintf+1)^(0+128),w
  3524  0692  00BB               	movwf	(sprintf@val+1)^(0+128)
  3525  0693  3000               	movlw	0
  3526  0694  1BBB               	btfsc	(sprintf@val+1)^(0+128),7
  3527  0695  30FF               	movlw	255
  3528  0696  00BC               	movwf	(sprintf@val+2)^(0+128)
  3529  0697  00BD               	movwf	(sprintf@val+3)^(0+128)
  3530  0698                     l3652:	
  3531  0698  3002               	movlw	2
  3532  0699  00A8               	movwf	??_sprintf^(0+128)
  3533  069A  0828               	movf	??_sprintf^(0+128),w
  3534  069B  07B1               	addwf	sprintf@ap^(0+128),f
  3535  069C                     l3654:	
  3536                           
  3537                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1287:    if
      +                          ((long)val < 0) {
  3538  069C  1FBD               	btfss	(sprintf@val+3)^(0+128),7
  3539  069D  2E9F               	goto	u5961
  3540  069E  2EA0               	goto	u5960
  3541  069F                     u5961:	
  3542  069F  2EAF               	goto	l3660
  3543  06A0                     u5960:	
  3544  06A0                     l3656:	
  3545                           
  3546                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1288:     f
      +                          lag |= 0x03;
  3547  06A0  3003               	movlw	3
  3548  06A1  04B2               	iorwf	sprintf@flag^(0+128),f
  3549  06A2  3000               	movlw	0
  3550  06A3  04B3               	iorwf	(sprintf@flag+1)^(0+128),f
  3551  06A4                     l3658:	
  3552                           
  3553                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1289:     v
      +                          al = -val;
  3554  06A4  09BA               	comf	sprintf@val^(0+128),f
  3555  06A5  09BB               	comf	(sprintf@val+1)^(0+128),f
  3556  06A6  09BC               	comf	(sprintf@val+2)^(0+128),f
  3557  06A7  09BD               	comf	(sprintf@val+3)^(0+128),f
  3558  06A8  0ABA               	incf	sprintf@val^(0+128),f
  3559  06A9  1903               	skipnz
  3560  06AA  0ABB               	incf	(sprintf@val+1)^(0+128),f
  3561  06AB  1903               	skipnz
  3562  06AC  0ABC               	incf	(sprintf@val+2)^(0+128),f
  3563  06AD  1903               	skipnz
  3564  06AE  0ABD               	incf	(sprintf@val+3)^(0+128),f
  3565  06AF                     l3660:	
  3566                           
  3567                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1292:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1316:   if(pr
      +                          ec == 0 && val == 0)
  3568  06AF  0843               	movf	sprintf@prec^(0+128),w
  3569  06B0  0444               	iorwf	(sprintf@prec+1)^(0+128),w
  3570  06B1  1D03               	btfss	3,2
  3571  06B2  2EB4               	goto	u5971
  3572  06B3  2EB5               	goto	u5970
  3573  06B4                     u5971:	
  3574  06B4  2EC3               	goto	l3666
  3575  06B5                     u5970:	
  3576  06B5                     l3662:	
  3577  06B5  083D               	movf	(sprintf@val+3)^(0+128),w
  3578  06B6  043C               	iorwf	(sprintf@val+2)^(0+128),w
  3579  06B7  043B               	iorwf	(sprintf@val+1)^(0+128),w
  3580  06B8  043A               	iorwf	sprintf@val^(0+128),w
  3581  06B9  1D03               	skipz
  3582  06BA  2EBC               	goto	u5981
  3583  06BB  2EBD               	goto	u5980
  3584  06BC                     u5981:	
  3585  06BC  2EC3               	goto	l3666
  3586  06BD                     u5980:	
  3587  06BD                     l3664:	
  3588                           
  3589                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1317:    pr
      +                          ec++;
  3590  06BD  3001               	movlw	1
  3591  06BE  07C3               	addwf	sprintf@prec^(0+128),f
  3592  06BF  1803               	skipnc
  3593  06C0  0AC4               	incf	(sprintf@prec+1)^(0+128),f
  3594  06C1  3000               	movlw	0
  3595  06C2  07C4               	addwf	(sprintf@prec+1)^(0+128),f
  3596  06C3                     l3666:	
  3597                           
  3598                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1331:    fo
      +                          r(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3599  06C3  01C5               	clrf	sprintf@c^(0+128)
  3600  06C4  0AC5               	incf	sprintf@c^(0+128),f
  3601  06C5                     l3672:	
  3602                           
  3603                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1332:     i
      +                          f(val < dpowers[c])
  3604  06C5  0845               	movf	sprintf@c^(0+128),w
  3605  06C6  00A8               	movwf	??_sprintf^(0+128)
  3606  06C7  3001               	movlw	1
  3607  06C8                     u5995:	
  3608  06C8  1003               	clrc
  3609  06C9  0DA8               	rlf	??_sprintf^(0+128),f
  3610  06CA  3EFF               	addlw	-1
  3611  06CB  1D03               	skipz
  3612  06CC  2EC8               	goto	u5995
  3613  06CD  1003               	clrc
  3614  06CE  0D28               	rlf	??_sprintf^(0+128),w
  3615  06CF  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3616  06D0  0084               	movwf	4
  3617  06D1  160A  118A  200A  120A  118A  	fcall	stringdir
  3618  06D6  00A9               	movwf	(??_sprintf+1)^(0+128)
  3619  06D7  160A  118A  200A  120A  118A  	fcall	stringdir
  3620  06DC  00AA               	movwf	((??_sprintf+1)^(0+128)+1)
  3621  06DD  160A  118A  200A  120A  118A  	fcall	stringdir
  3622  06E2  00AB               	movwf	((??_sprintf+1)^(0+128)+2)
  3623  06E3  160A  118A  200A  120A  118A  	fcall	stringdir
  3624  06E8  00AC               	movwf	((??_sprintf+1)^(0+128)+3)
  3625  06E9  082C               	movf	(??_sprintf+4)^(0+128),w
  3626  06EA  023D               	subwf	(sprintf@val+3)^(0+128),w
  3627  06EB  1D03               	skipz
  3628  06EC  2EF7               	goto	u6005
  3629  06ED  082B               	movf	(??_sprintf+3)^(0+128),w
  3630  06EE  023C               	subwf	(sprintf@val+2)^(0+128),w
  3631  06EF  1D03               	skipz
  3632  06F0  2EF7               	goto	u6005
  3633  06F1  082A               	movf	(??_sprintf+2)^(0+128),w
  3634  06F2  023B               	subwf	(sprintf@val+1)^(0+128),w
  3635  06F3  1D03               	skipz
  3636  06F4  2EF7               	goto	u6005
  3637  06F5  0829               	movf	(??_sprintf+1)^(0+128),w
  3638  06F6  023A               	subwf	sprintf@val^(0+128),w
  3639  06F7                     u6005:	
  3640  06F7  1803               	skipnc
  3641  06F8  2EFA               	goto	u6001
  3642  06F9  2EFB               	goto	u6000
  3643  06FA                     u6001:	
  3644  06FA  2EFC               	goto	l3676
  3645  06FB                     u6000:	
  3646  06FB  2F06               	goto	l3678
  3647  06FC                     l3676:	
  3648  06FC  3001               	movlw	1
  3649  06FD  00A8               	movwf	??_sprintf^(0+128)
  3650  06FE  0828               	movf	??_sprintf^(0+128),w
  3651  06FF  07C5               	addwf	sprintf@c^(0+128),f
  3652  0700  300A               	movlw	10
  3653  0701  0645               	xorwf	sprintf@c^(0+128),w
  3654  0702  1D03               	btfss	3,2
  3655  0703  2F05               	goto	u6011
  3656  0704  2F06               	goto	u6010
  3657  0705                     u6011:	
  3658  0705  2EC5               	goto	l3672
  3659  0706                     u6010:	
  3660  0706                     l3678:	
  3661                           
  3662                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1365:   if(
      +                          c < prec)
  3663  0706  0844               	movf	(sprintf@prec+1)^(0+128),w
  3664  0707  3A80               	xorlw	128
  3665  0708  3C80               	sublw	128
  3666  0709  1D03               	skipz
  3667  070A  2F0D               	goto	u6025
  3668  070B  0843               	movf	sprintf@prec^(0+128),w
  3669  070C  0245               	subwf	sprintf@c^(0+128),w
  3670  070D                     u6025:	
  3671  070D  1803               	skipnc
  3672  070E  2F10               	goto	u6021
  3673  070F  2F11               	goto	u6020
  3674  0710                     u6021:	
  3675  0710  2F12               	goto	l3682
  3676  0711                     u6020:	
  3677  0711                     l3680:	
  3678  0711  2F2A               	goto	l3686
  3679  0712                     l3682:	
  3680  0712  1683               	bsf	3,5	;RP0=1, select bank1
  3681  0713  1303               	bcf	3,6	;RP1=0, select bank1
  3682  0714  0844               	movf	(sprintf@prec+1)^(0+128),w
  3683  0715  3A80               	xorlw	128
  3684  0716  00A8               	movwf	??_sprintf^(0+128)
  3685  0717  3080               	movlw	128
  3686  0718  0228               	subwf	??_sprintf^(0+128),w
  3687  0719  1D03               	skipz
  3688  071A  2F1D               	goto	u6035
  3689  071B  0845               	movf	sprintf@c^(0+128),w
  3690  071C  0243               	subwf	sprintf@prec^(0+128),w
  3691  071D                     u6035:	
  3692  071D  1803               	skipnc
  3693  071E  2F20               	goto	u6031
  3694  071F  2F21               	goto	u6030
  3695  0720                     u6031:	
  3696  0720  2F2A               	goto	l3686
  3697  0721                     u6030:	
  3698  0721                     l3684:	
  3699                           
  3700                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1368:    pr
      +                          ec = c;
  3701  0721  1683               	bsf	3,5	;RP0=1, select bank1
  3702  0722  1303               	bcf	3,6	;RP1=0, select bank1
  3703  0723  0845               	movf	sprintf@c^(0+128),w
  3704  0724  00A8               	movwf	??_sprintf^(0+128)
  3705  0725  01A9               	clrf	(??_sprintf^(0+128)+1)
  3706  0726  0828               	movf	??_sprintf^(0+128),w
  3707  0727  00C3               	movwf	sprintf@prec^(0+128)
  3708  0728  0829               	movf	(??_sprintf+1)^(0+128),w
  3709  0729  00C4               	movwf	(sprintf@prec+1)^(0+128)
  3710  072A                     l3686:	
  3711                           
  3712                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1448:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1464:    if(f
      +                          lag & 0x03)
  3713  072A  3003               	movlw	3
  3714  072B  1683               	bsf	3,5	;RP0=1, select bank1
  3715  072C  1303               	bcf	3,6	;RP1=0, select bank1
  3716  072D  0532               	andwf	sprintf@flag^(0+128),w
  3717  072E  00A8               	movwf	??_sprintf^(0+128)
  3718  072F  3000               	movlw	0
  3719  0730  0533               	andwf	(sprintf@flag+1)^(0+128),w
  3720  0731  00A9               	movwf	(??_sprintf+1)^(0+128)
  3721  0732  0828               	movf	??_sprintf^(0+128),w
  3722  0733  0429               	iorwf	(??_sprintf^(0+128)+1),w
  3723  0734  1903               	btfsc	3,2
  3724  0735  2F37               	goto	u6041
  3725  0736  2F38               	goto	u6040
  3726  0737                     u6041:	
  3727  0737  2FA1               	goto	l3698
  3728  0738                     u6040:	
  3729  0738                     l3688:	
  3730                           
  3731                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1465:     (
      +                          (*sp++ = ('-')));
  3732  0738  302D               	movlw	45
  3733  0739  00A8               	movwf	??_sprintf^(0+128)
  3734  073A  083E               	movf	sprintf@sp^(0+128),w
  3735  073B  0084               	movwf	4
  3736  073C  0828               	movf	??_sprintf^(0+128),w
  3737  073D  1383               	bcf	3,7	;select IRP bank0
  3738  073E  0080               	movwf	0
  3739  073F                     l3690:	
  3740  073F  3001               	movlw	1
  3741  0740  00A8               	movwf	??_sprintf^(0+128)
  3742  0741  0828               	movf	??_sprintf^(0+128),w
  3743  0742  07BE               	addwf	sprintf@sp^(0+128),f
  3744  0743  2FA1               	goto	l3698
  3745  0744                     l3692:	
  3746                           
  3747                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1504:    {;
      +                          C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1515:     c 
      +                          = (val / dpowers[(unsigned int)prec]) % 10 + '0';
  3748  0744  3000               	movlw	0
  3749  0745  1283               	bcf	3,5	;RP0=0, select bank0
  3750  0746  1303               	bcf	3,6	;RP1=0, select bank0
  3751  0747  00A8               	movwf	___llmod@divisor+3
  3752  0748  3000               	movlw	0
  3753  0749  00A7               	movwf	___llmod@divisor+2
  3754  074A  3000               	movlw	0
  3755  074B  00A6               	movwf	___llmod@divisor+1
  3756  074C  300A               	movlw	10
  3757  074D  00A5               	movwf	___llmod@divisor
  3758  074E  1683               	bsf	3,5	;RP0=1, select bank1
  3759  074F  1303               	bcf	3,6	;RP1=0, select bank1
  3760  0750  0843               	movf	sprintf@prec^(0+128),w
  3761  0751  00A8               	movwf	??_sprintf^(0+128)
  3762  0752  3001               	movlw	1
  3763  0753                     u6055:	
  3764  0753  1003               	clrc
  3765  0754  0DA8               	rlf	??_sprintf^(0+128),f
  3766  0755  3EFF               	addlw	-1
  3767  0756  1D03               	skipz
  3768  0757  2F53               	goto	u6055
  3769  0758  1003               	clrc
  3770  0759  0D28               	rlf	??_sprintf^(0+128),w
  3771  075A  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3772  075B  0084               	movwf	4
  3773  075C  160A  118A  200A  120A  118A  	fcall	stringdir
  3774  0761  00F2               	movwf	___lldiv@divisor
  3775  0762  160A  118A  200A  120A  118A  	fcall	stringdir
  3776  0767  00F3               	movwf	___lldiv@divisor+1
  3777  0768  160A  118A  200A  120A  118A  	fcall	stringdir
  3778  076D  00F4               	movwf	___lldiv@divisor+2
  3779  076E  160A  118A  200A  120A  118A  	fcall	stringdir
  3780  0773  00F5               	movwf	___lldiv@divisor+3
  3781  0774  083D               	movf	(sprintf@val+3)^(0+128),w
  3782  0775  00F9               	movwf	___lldiv@dividend+3
  3783  0776  083C               	movf	(sprintf@val+2)^(0+128),w
  3784  0777  00F8               	movwf	___lldiv@dividend+2
  3785  0778  083B               	movf	(sprintf@val+1)^(0+128),w
  3786  0779  00F7               	movwf	___lldiv@dividend+1
  3787  077A  083A               	movf	sprintf@val^(0+128),w
  3788  077B  00F6               	movwf	___lldiv@dividend
  3789  077C  160A  158A  2656  120A  118A  	fcall	___lldiv
  3790  0781  0875               	movf	?___lldiv+3,w
  3791  0782  1283               	bcf	3,5	;RP0=0, select bank0
  3792  0783  1303               	bcf	3,6	;RP1=0, select bank0
  3793  0784  00AC               	movwf	___llmod@dividend+3
  3794  0785  0874               	movf	?___lldiv+2,w
  3795  0786  00AB               	movwf	___llmod@dividend+2
  3796  0787  0873               	movf	?___lldiv+1,w
  3797  0788  00AA               	movwf	___llmod@dividend+1
  3798  0789  0872               	movf	?___lldiv,w
  3799  078A  00A9               	movwf	___llmod@dividend
  3800  078B  160A  158A  25A7  120A  118A  	fcall	___llmod
  3801  0790  1283               	bcf	3,5	;RP0=0, select bank0
  3802  0791  1303               	bcf	3,6	;RP1=0, select bank0
  3803  0792  0825               	movf	?___llmod,w
  3804  0793  3E30               	addlw	48
  3805  0794  1683               	bsf	3,5	;RP0=1, select bank1
  3806  0795  1303               	bcf	3,6	;RP1=0, select bank1
  3807  0796  00A9               	movwf	(??_sprintf+1)^(0+128)
  3808  0797  0829               	movf	(??_sprintf+1)^(0+128),w
  3809  0798  00C5               	movwf	sprintf@c^(0+128)
  3810  0799                     l3694:	
  3811                           
  3812                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1549:    };
      +                          C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1550:    ((*
      +                          sp++ = (c)));
  3813  0799  0845               	movf	sprintf@c^(0+128),w
  3814  079A  00A8               	movwf	??_sprintf^(0+128)
  3815  079B  083E               	movf	sprintf@sp^(0+128),w
  3816  079C  0084               	movwf	4
  3817  079D  0828               	movf	??_sprintf^(0+128),w
  3818  079E  1383               	bcf	3,7	;select IRP bank0
  3819  079F  0080               	movwf	0
  3820  07A0  2F3F               	goto	l3690
  3821  07A1                     l3698:	
  3822                           
  3823                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1500:   whi
      +                          le(prec--) {
  3824  07A1  30FF               	movlw	255
  3825  07A2  07C3               	addwf	sprintf@prec^(0+128),f
  3826  07A3  1803               	skipnc
  3827  07A4  0AC4               	incf	(sprintf@prec+1)^(0+128),f
  3828  07A5  30FF               	movlw	255
  3829  07A6  07C4               	addwf	(sprintf@prec+1)^(0+128),f
  3830  07A7  0A43               	incf	sprintf@prec^(0+128),w
  3831  07A8  1D03               	skipz
  3832  07A9  2FAE               	goto	u6061
  3833  07AA  0A44               	incf	(sprintf@prec+1)^(0+128),w
  3834  07AB  1D03               	btfss	3,2
  3835  07AC  2FAE               	goto	u6061
  3836  07AD  2FAF               	goto	u6060
  3837  07AE                     u6061:	
  3838  07AE  2F44               	goto	l3692
  3839  07AF                     u6060:	
  3840  07AF                     l3700:	
  3841                           
  3842                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  3843  07AF  3001               	movlw	1
  3844  07B0  1283               	bcf	3,5	;RP0=0, select bank0
  3845  07B1  1303               	bcf	3,6	;RP1=0, select bank0
  3846  07B2  07EA               	addwf	sprintf@f,f
  3847  07B3  30FF               	movlw	-1
  3848  07B4  076A               	addwf	sprintf@f,w
  3849  07B5  0084               	movwf	4
  3850  07B6  160A  118A  200A  120A  118A  	fcall	stringdir
  3851  07BB  1683               	bsf	3,5	;RP0=1, select bank1
  3852  07BC  1303               	bcf	3,6	;RP1=0, select bank1
  3853  07BD  00A8               	movwf	??_sprintf^(0+128)
  3854  07BE  0828               	movf	??_sprintf^(0+128),w
  3855  07BF  00C5               	movwf	sprintf@c^(0+128)
  3856  07C0  0845               	movf	sprintf@c^(0+128),w
  3857  07C1  1D03               	btfss	3,2
  3858  07C2  2FC4               	goto	u6071
  3859  07C3  2FC5               	goto	u6070
  3860  07C4                     u6071:	
  3861  07C4  2828               	goto	l3476
  3862  07C5                     u6070:	
  3863  07C5                     l3702:	
  3864                           
  3865                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1564:  *sp 
      +                          = 0;
  3866  07C5  083E               	movf	sprintf@sp^(0+128),w
  3867  07C6  0084               	movwf	4
  3868  07C7  1383               	bcf	3,7	;select IRP bank0
  3869  07C8  0180               	clrf	0
  3870  07C9                     l321:	
  3871  07C9  0008               	return
  3872  07CA                     __end_of_sprintf:	
  3873                           
  3874                           	psect	text4
  3875  0C9D                     __ptext4:	
  3876 ;; *************** function _scale *****************
  3877 ;; Defined at:
  3878 ;;		line 433 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  3879 ;; Parameters:    Size  Location     Type
  3880 ;;  scl             1    wreg     char 
  3881 ;; Auto vars:     Size  Location     Type
  3882 ;;  scl             1   52[BANK0 ] char 
  3883 ;; Return value:  Size  Location     Type
  3884 ;;                  4   34[BANK0 ] char 
  3885 ;; Registers used:
  3886 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3887 ;; Tracked objects:
  3888 ;;		On entry : 0/0
  3889 ;;		On exit  : 0/0
  3890 ;;		Unchanged: 0/0
  3891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3892 ;;      Params:         0       4       0       0       0
  3893 ;;      Locals:         0       5       0       0       0
  3894 ;;      Temps:          0      10       0       0       0
  3895 ;;      Totals:         0      19       0       0       0
  3896 ;;Total ram usage:       19 bytes
  3897 ;; Hardware stack levels used:    1
  3898 ;; Hardware stack levels required when called:    3
  3899 ;; This function calls:
  3900 ;;		___awdiv
  3901 ;;		___awmod
  3902 ;;		___flmul
  3903 ;; This function is called by:
  3904 ;;		_sprintf
  3905 ;; This function uses a non-reentrant model
  3906 ;;
  3907                           
  3908                           
  3909                           ;psect for function _scale
  3910  0C9D                     _scale:	
  3911                           
  3912                           ;incstack = 0
  3913                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3914                           ;scale@scl stored from wreg
  3915  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  3916  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  3917  0C9F  00D4               	movwf	scale@scl
  3918  0CA0                     l2654:	
  3919                           
  3920                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 433: scale(
      +                          signed char scl);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprn
      +                          t.c: 434: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 
      +                          436:  if(scl < 0) {
  3921  0CA0  1FD4               	btfss	scale@scl,7
  3922  0CA1  2CA3               	goto	u3981
  3923  0CA2  2CA4               	goto	u3980
  3924  0CA3                     u3981:	
  3925  0CA3  2E53               	goto	l2676
  3926  0CA4                     u3980:	
  3927  0CA4                     l2656:	
  3928                           
  3929                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 437:   scl 
      +                          = -scl;
  3930  0CA4  09D4               	comf	scale@scl,f
  3931  0CA5  0AD4               	incf	scale@scl,f
  3932  0CA6                     l2658:	
  3933                           
  3934                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 438:   if(s
      +                          cl>=110)
  3935  0CA6  0854               	movf	scale@scl,w
  3936  0CA7  3A80               	xorlw	128
  3937  0CA8  3E12               	addlw	-238
  3938  0CA9  1C03               	skipc
  3939  0CAA  2CAC               	goto	u3991
  3940  0CAB  2CAD               	goto	u3990
  3941  0CAC                     u3991:	
  3942  0CAC  2D97               	goto	l2666
  3943  0CAD                     u3990:	
  3944  0CAD                     l2660:	
  3945                           
  3946                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 439:    ret
      +                          urn _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] 
      +                          * _npowers_[(unsigned char)(scl%10)];
  3947  0CAD  300A               	movlw	10
  3948  0CAE  00A0               	movwf	___awdiv@divisor
  3949  0CAF  3000               	movlw	0
  3950  0CB0  00A1               	movwf	___awdiv@divisor+1
  3951  0CB1  0854               	movf	scale@scl,w
  3952  0CB2  00F4               	movwf	___awmod@dividend
  3953  0CB3  01F5               	clrf	___awmod@dividend+1
  3954  0CB4  1BF4               	btfsc	___awmod@dividend,7
  3955  0CB5  03F5               	decf	___awmod@dividend+1,f
  3956  0CB6  3064               	movlw	100
  3957  0CB7  00F2               	movwf	___awmod@divisor
  3958  0CB8  3000               	movlw	0
  3959  0CB9  00F3               	movwf	___awmod@divisor+1
  3960  0CBA  160A  158A  25FD  120A  158A  	fcall	___awmod
  3961  0CBF  0873               	movf	?___awmod+1,w
  3962  0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  3963  0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  3964  0CC2  00A3               	movwf	___awdiv@dividend+1
  3965  0CC3  0872               	movf	?___awmod,w
  3966  0CC4  00A2               	movwf	___awdiv@dividend
  3967  0CC5  120A  158A  2008  120A  158A  	fcall	___awdiv
  3968  0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  3969  0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  3970  0CCC  0820               	movf	?___awdiv,w
  3971  0CCD  00C6               	movwf	??_scale
  3972  0CCE  3001               	movlw	1
  3973  0CCF                     u4005:	
  3974  0CCF  1003               	clrc
  3975  0CD0  0DC6               	rlf	??_scale,f
  3976  0CD1  3EFF               	addlw	-1
  3977  0CD2  1D03               	skipz
  3978  0CD3  2CCF               	goto	u4005
  3979  0CD4  1003               	clrc
  3980  0CD5  0D46               	rlf	??_scale,w
  3981  0CD6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3982  0CD7  0084               	movwf	4
  3983  0CD8  160A  118A  200A  120A  158A  	fcall	stringdir
  3984  0CDD  00C7               	movwf	??_scale+1
  3985  0CDE  160A  118A  200A  120A  158A  	fcall	stringdir
  3986  0CE3  00C8               	movwf	??_scale+2
  3987  0CE4  160A  118A  200A  120A  158A  	fcall	stringdir
  3988  0CE9  00C9               	movwf	??_scale+3
  3989  0CEA  160A  118A  200A  120A  158A  	fcall	stringdir
  3990  0CEF  00CA               	movwf	??_scale+4
  3991  0CF0  084A               	movf	??_scale+4,w
  3992  0CF1  00AB               	movwf	___flmul@b+3
  3993  0CF2  0849               	movf	??_scale+3,w
  3994  0CF3  00AA               	movwf	___flmul@b+2
  3995  0CF4  0848               	movf	??_scale+2,w
  3996  0CF5  00A9               	movwf	___flmul@b+1
  3997  0CF6  0847               	movf	??_scale+1,w
  3998  0CF7  00A8               	movwf	___flmul@b
  3999  0CF8  3064               	movlw	100
  4000  0CF9  00A0               	movwf	___awdiv@divisor
  4001  0CFA  3000               	movlw	0
  4002  0CFB  00A1               	movwf	___awdiv@divisor+1
  4003  0CFC  0854               	movf	scale@scl,w
  4004  0CFD  00A2               	movwf	___awdiv@dividend
  4005  0CFE  01A3               	clrf	___awdiv@dividend+1
  4006  0CFF  1BA2               	btfsc	___awdiv@dividend,7
  4007  0D00  03A3               	decf	___awdiv@dividend+1,f
  4008  0D01  120A  158A  2008  120A  158A  	fcall	___awdiv
  4009  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  4010  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  4011  0D08  0820               	movf	?___awdiv,w
  4012  0D09  00CB               	movwf	??_scale+5
  4013  0D0A  3001               	movlw	1
  4014  0D0B                     u4015:	
  4015  0D0B  1003               	clrc
  4016  0D0C  0DCB               	rlf	??_scale+5,f
  4017  0D0D  3EFF               	addlw	-1
  4018  0D0E  1D03               	skipz
  4019  0D0F  2D0B               	goto	u4015
  4020  0D10  1003               	clrc
  4021  0D11  0D4B               	rlf	??_scale+5,w
  4022  0D12  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4023  0D13  0084               	movwf	4
  4024  0D14  160A  118A  200A  120A  158A  	fcall	stringdir
  4025  0D19  00CC               	movwf	??_scale+6
  4026  0D1A  160A  118A  200A  120A  158A  	fcall	stringdir
  4027  0D1F  00CD               	movwf	??_scale+7
  4028  0D20  160A  118A  200A  120A  158A  	fcall	stringdir
  4029  0D25  00CE               	movwf	??_scale+8
  4030  0D26  160A  118A  200A  120A  158A  	fcall	stringdir
  4031  0D2B  00CF               	movwf	??_scale+9
  4032  0D2C  084F               	movf	??_scale+9,w
  4033  0D2D  00AF               	movwf	___flmul@a+3
  4034  0D2E  084E               	movf	??_scale+8,w
  4035  0D2F  00AE               	movwf	___flmul@a+2
  4036  0D30  084D               	movf	??_scale+7,w
  4037  0D31  00AD               	movwf	___flmul@a+1
  4038  0D32  084C               	movf	??_scale+6,w
  4039  0D33  00AC               	movwf	___flmul@a
  4040  0D34  120A  158A  213C  120A  158A  	fcall	___flmul
  4041  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  4042  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  4043  0D3B  082B               	movf	?___flmul+3,w
  4044  0D3C  00D3               	movwf	_scale$1024+3
  4045  0D3D  082A               	movf	?___flmul+2,w
  4046  0D3E  00D2               	movwf	_scale$1024+2
  4047  0D3F  0829               	movf	?___flmul+1,w
  4048  0D40  00D1               	movwf	_scale$1024+1
  4049  0D41  0828               	movf	?___flmul,w
  4050  0D42  00D0               	movwf	_scale$1024
  4051                           
  4052                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 439:    ret
      +                          urn _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] 
      +                          * _npowers_[(unsigned char)(scl%10)];
  4053  0D43  300A               	movlw	10
  4054  0D44  00F2               	movwf	___awmod@divisor
  4055  0D45  3000               	movlw	0
  4056  0D46  00F3               	movwf	___awmod@divisor+1
  4057  0D47  0854               	movf	scale@scl,w
  4058  0D48  00F4               	movwf	___awmod@dividend
  4059  0D49  01F5               	clrf	___awmod@dividend+1
  4060  0D4A  1BF4               	btfsc	___awmod@dividend,7
  4061  0D4B  03F5               	decf	___awmod@dividend+1,f
  4062  0D4C  160A  158A  25FD  120A  158A  	fcall	___awmod
  4063  0D51  0872               	movf	?___awmod,w
  4064  0D52  1283               	bcf	3,5	;RP0=0, select bank0
  4065  0D53  1303               	bcf	3,6	;RP1=0, select bank0
  4066  0D54  00C6               	movwf	??_scale
  4067  0D55  3001               	movlw	1
  4068  0D56                     u4025:	
  4069  0D56  1003               	clrc
  4070  0D57  0DC6               	rlf	??_scale,f
  4071  0D58  3EFF               	addlw	-1
  4072  0D59  1D03               	skipz
  4073  0D5A  2D56               	goto	u4025
  4074  0D5B  1003               	clrc
  4075  0D5C  0D46               	rlf	??_scale,w
  4076  0D5D  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4077  0D5E  0084               	movwf	4
  4078  0D5F  160A  118A  200A  120A  158A  	fcall	stringdir
  4079  0D64  00C7               	movwf	??_scale+1
  4080  0D65  160A  118A  200A  120A  158A  	fcall	stringdir
  4081  0D6A  00C8               	movwf	??_scale+2
  4082  0D6B  160A  118A  200A  120A  158A  	fcall	stringdir
  4083  0D70  00C9               	movwf	??_scale+3
  4084  0D71  160A  118A  200A  120A  158A  	fcall	stringdir
  4085  0D76  00CA               	movwf	??_scale+4
  4086  0D77  084A               	movf	??_scale+4,w
  4087  0D78  00AB               	movwf	___flmul@b+3
  4088  0D79  0849               	movf	??_scale+3,w
  4089  0D7A  00AA               	movwf	___flmul@b+2
  4090  0D7B  0848               	movf	??_scale+2,w
  4091  0D7C  00A9               	movwf	___flmul@b+1
  4092  0D7D  0847               	movf	??_scale+1,w
  4093  0D7E  00A8               	movwf	___flmul@b
  4094  0D7F  0853               	movf	_scale$1024+3,w
  4095  0D80  00AF               	movwf	___flmul@a+3
  4096  0D81  0852               	movf	_scale$1024+2,w
  4097  0D82  00AE               	movwf	___flmul@a+2
  4098  0D83  0851               	movf	_scale$1024+1,w
  4099  0D84  00AD               	movwf	___flmul@a+1
  4100  0D85  0850               	movf	_scale$1024,w
  4101  0D86  00AC               	movwf	___flmul@a
  4102  0D87  120A  158A  213C  120A  158A  	fcall	___flmul
  4103  0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  4104  0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  4105  0D8E  082B               	movf	?___flmul+3,w
  4106  0D8F  00C5               	movwf	?_scale+3
  4107  0D90  082A               	movf	?___flmul+2,w
  4108  0D91  00C4               	movwf	?_scale+2
  4109  0D92  0829               	movf	?___flmul+1,w
  4110  0D93  00C3               	movwf	?_scale+1
  4111  0D94  0828               	movf	?___flmul,w
  4112  0D95  00C2               	movwf	?_scale
  4113  0D96  2FFF               	goto	l246
  4114  0D97                     l2666:	
  4115  0D97  0854               	movf	scale@scl,w
  4116  0D98  3A80               	xorlw	128
  4117  0D99  3E75               	addlw	-139
  4118  0D9A  1C03               	skipc
  4119  0D9B  2D9D               	goto	u4031
  4120  0D9C  2D9E               	goto	u4030
  4121  0D9D                     u4031:	
  4122  0D9D  2E26               	goto	l2672
  4123  0D9E                     u4030:	
  4124  0D9E                     l2668:	
  4125                           
  4126                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 441:    ret
      +                          urn _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  4127  0D9E  300A               	movlw	10
  4128  0D9F  00F2               	movwf	___awmod@divisor
  4129  0DA0  3000               	movlw	0
  4130  0DA1  00F3               	movwf	___awmod@divisor+1
  4131  0DA2  0854               	movf	scale@scl,w
  4132  0DA3  00F4               	movwf	___awmod@dividend
  4133  0DA4  01F5               	clrf	___awmod@dividend+1
  4134  0DA5  1BF4               	btfsc	___awmod@dividend,7
  4135  0DA6  03F5               	decf	___awmod@dividend+1,f
  4136  0DA7  160A  158A  25FD  120A  158A  	fcall	___awmod
  4137  0DAC  0872               	movf	?___awmod,w
  4138  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  4139  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  4140  0DAF  00C6               	movwf	??_scale
  4141  0DB0  3001               	movlw	1
  4142  0DB1                     u4045:	
  4143  0DB1  1003               	clrc
  4144  0DB2  0DC6               	rlf	??_scale,f
  4145  0DB3  3EFF               	addlw	-1
  4146  0DB4  1D03               	skipz
  4147  0DB5  2DB1               	goto	u4045
  4148  0DB6  1003               	clrc
  4149  0DB7  0D46               	rlf	??_scale,w
  4150  0DB8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4151  0DB9  0084               	movwf	4
  4152  0DBA  160A  118A  200A  120A  158A  	fcall	stringdir
  4153  0DBF  00C7               	movwf	??_scale+1
  4154  0DC0  160A  118A  200A  120A  158A  	fcall	stringdir
  4155  0DC5  00C8               	movwf	??_scale+2
  4156  0DC6  160A  118A  200A  120A  158A  	fcall	stringdir
  4157  0DCB  00C9               	movwf	??_scale+3
  4158  0DCC  160A  118A  200A  120A  158A  	fcall	stringdir
  4159  0DD1  00CA               	movwf	??_scale+4
  4160  0DD2  084A               	movf	??_scale+4,w
  4161  0DD3  00AB               	movwf	___flmul@b+3
  4162  0DD4  0849               	movf	??_scale+3,w
  4163  0DD5  00AA               	movwf	___flmul@b+2
  4164  0DD6  0848               	movf	??_scale+2,w
  4165  0DD7  00A9               	movwf	___flmul@b+1
  4166  0DD8  0847               	movf	??_scale+1,w
  4167  0DD9  00A8               	movwf	___flmul@b
  4168  0DDA  300A               	movlw	10
  4169  0DDB  00A0               	movwf	___awdiv@divisor
  4170  0DDC  3000               	movlw	0
  4171  0DDD  00A1               	movwf	___awdiv@divisor+1
  4172  0DDE  0854               	movf	scale@scl,w
  4173  0DDF  00A2               	movwf	___awdiv@dividend
  4174  0DE0  01A3               	clrf	___awdiv@dividend+1
  4175  0DE1  1BA2               	btfsc	___awdiv@dividend,7
  4176  0DE2  03A3               	decf	___awdiv@dividend+1,f
  4177  0DE3  120A  158A  2008  120A  158A  	fcall	___awdiv
  4178  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  4179  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  4180  0DEA  0820               	movf	?___awdiv,w
  4181  0DEB  00CB               	movwf	??_scale+5
  4182  0DEC  3001               	movlw	1
  4183  0DED                     u4055:	
  4184  0DED  1003               	clrc
  4185  0DEE  0DCB               	rlf	??_scale+5,f
  4186  0DEF  3EFF               	addlw	-1
  4187  0DF0  1D03               	skipz
  4188  0DF1  2DED               	goto	u4055
  4189  0DF2  1003               	clrc
  4190  0DF3  0D4B               	rlf	??_scale+5,w
  4191  0DF4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4192  0DF5  0084               	movwf	4
  4193  0DF6  160A  118A  200A  120A  158A  	fcall	stringdir
  4194  0DFB  00CC               	movwf	??_scale+6
  4195  0DFC  160A  118A  200A  120A  158A  	fcall	stringdir
  4196  0E01  00CD               	movwf	??_scale+7
  4197  0E02  160A  118A  200A  120A  158A  	fcall	stringdir
  4198  0E07  00CE               	movwf	??_scale+8
  4199  0E08  160A  118A  200A  120A  158A  	fcall	stringdir
  4200  0E0D  00CF               	movwf	??_scale+9
  4201  0E0E  084F               	movf	??_scale+9,w
  4202  0E0F  00AF               	movwf	___flmul@a+3
  4203  0E10  084E               	movf	??_scale+8,w
  4204  0E11  00AE               	movwf	___flmul@a+2
  4205  0E12  084D               	movf	??_scale+7,w
  4206  0E13  00AD               	movwf	___flmul@a+1
  4207  0E14  084C               	movf	??_scale+6,w
  4208  0E15  00AC               	movwf	___flmul@a
  4209  0E16  120A  158A  213C  120A  158A  	fcall	___flmul
  4210  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  4211  0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  4212  0E1D  082B               	movf	?___flmul+3,w
  4213  0E1E  00C5               	movwf	?_scale+3
  4214  0E1F  082A               	movf	?___flmul+2,w
  4215  0E20  00C4               	movwf	?_scale+2
  4216  0E21  0829               	movf	?___flmul+1,w
  4217  0E22  00C3               	movwf	?_scale+1
  4218  0E23  0828               	movf	?___flmul,w
  4219  0E24  00C2               	movwf	?_scale
  4220  0E25  2FFF               	goto	l246
  4221  0E26                     l2672:	
  4222                           
  4223                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 442:   retu
      +                          rn _npowers_[(unsigned char)scl];
  4224  0E26  0854               	movf	scale@scl,w
  4225  0E27  00C6               	movwf	??_scale
  4226  0E28  3001               	movlw	1
  4227  0E29                     u4065:	
  4228  0E29  1003               	clrc
  4229  0E2A  0DC6               	rlf	??_scale,f
  4230  0E2B  3EFF               	addlw	-1
  4231  0E2C  1D03               	skipz
  4232  0E2D  2E29               	goto	u4065
  4233  0E2E  1003               	clrc
  4234  0E2F  0D46               	rlf	??_scale,w
  4235  0E30  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4236  0E31  0084               	movwf	4
  4237  0E32  160A  118A  200A  120A  158A  	fcall	stringdir
  4238  0E37  00C7               	movwf	??_scale+1
  4239  0E38  160A  118A  200A  120A  158A  	fcall	stringdir
  4240  0E3D  00C8               	movwf	??_scale+2
  4241  0E3E  160A  118A  200A  120A  158A  	fcall	stringdir
  4242  0E43  00C9               	movwf	??_scale+3
  4243  0E44  160A  118A  200A  120A  158A  	fcall	stringdir
  4244  0E49  00CA               	movwf	??_scale+4
  4245  0E4A  084A               	movf	??_scale+4,w
  4246  0E4B  00C5               	movwf	?_scale+3
  4247  0E4C  0849               	movf	??_scale+3,w
  4248  0E4D  00C4               	movwf	?_scale+2
  4249  0E4E  0848               	movf	??_scale+2,w
  4250  0E4F  00C3               	movwf	?_scale+1
  4251  0E50  0847               	movf	??_scale+1,w
  4252  0E51  00C2               	movwf	?_scale
  4253  0E52  2FFF               	goto	l246
  4254  0E53                     l2676:	
  4255                           
  4256                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 444:  if(sc
      +                          l>=110)
  4257  0E53  0854               	movf	scale@scl,w
  4258  0E54  3A80               	xorlw	128
  4259  0E55  3E12               	addlw	-238
  4260  0E56  1C03               	skipc
  4261  0E57  2E59               	goto	u4071
  4262  0E58  2E5A               	goto	u4070
  4263  0E59                     u4071:	
  4264  0E59  2F44               	goto	l2684
  4265  0E5A                     u4070:	
  4266  0E5A                     l2678:	
  4267                           
  4268                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 445:   retu
      +                          rn _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _
      +                          powers_[(unsigned char)(scl%10)];
  4269  0E5A  300A               	movlw	10
  4270  0E5B  00A0               	movwf	___awdiv@divisor
  4271  0E5C  3000               	movlw	0
  4272  0E5D  00A1               	movwf	___awdiv@divisor+1
  4273  0E5E  0854               	movf	scale@scl,w
  4274  0E5F  00F4               	movwf	___awmod@dividend
  4275  0E60  01F5               	clrf	___awmod@dividend+1
  4276  0E61  1BF4               	btfsc	___awmod@dividend,7
  4277  0E62  03F5               	decf	___awmod@dividend+1,f
  4278  0E63  3064               	movlw	100
  4279  0E64  00F2               	movwf	___awmod@divisor
  4280  0E65  3000               	movlw	0
  4281  0E66  00F3               	movwf	___awmod@divisor+1
  4282  0E67  160A  158A  25FD  120A  158A  	fcall	___awmod
  4283  0E6C  0873               	movf	?___awmod+1,w
  4284  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  4285  0E6E  1303               	bcf	3,6	;RP1=0, select bank0
  4286  0E6F  00A3               	movwf	___awdiv@dividend+1
  4287  0E70  0872               	movf	?___awmod,w
  4288  0E71  00A2               	movwf	___awdiv@dividend
  4289  0E72  120A  158A  2008  120A  158A  	fcall	___awdiv
  4290  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  4291  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  4292  0E79  0820               	movf	?___awdiv,w
  4293  0E7A  00C6               	movwf	??_scale
  4294  0E7B  3001               	movlw	1
  4295  0E7C                     u4085:	
  4296  0E7C  1003               	clrc
  4297  0E7D  0DC6               	rlf	??_scale,f
  4298  0E7E  3EFF               	addlw	-1
  4299  0E7F  1D03               	skipz
  4300  0E80  2E7C               	goto	u4085
  4301  0E81  1003               	clrc
  4302  0E82  0D46               	rlf	??_scale,w
  4303  0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4304  0E84  0084               	movwf	4
  4305  0E85  160A  118A  200A  120A  158A  	fcall	stringdir
  4306  0E8A  00C7               	movwf	??_scale+1
  4307  0E8B  160A  118A  200A  120A  158A  	fcall	stringdir
  4308  0E90  00C8               	movwf	??_scale+2
  4309  0E91  160A  118A  200A  120A  158A  	fcall	stringdir
  4310  0E96  00C9               	movwf	??_scale+3
  4311  0E97  160A  118A  200A  120A  158A  	fcall	stringdir
  4312  0E9C  00CA               	movwf	??_scale+4
  4313  0E9D  084A               	movf	??_scale+4,w
  4314  0E9E  00AB               	movwf	___flmul@b+3
  4315  0E9F  0849               	movf	??_scale+3,w
  4316  0EA0  00AA               	movwf	___flmul@b+2
  4317  0EA1  0848               	movf	??_scale+2,w
  4318  0EA2  00A9               	movwf	___flmul@b+1
  4319  0EA3  0847               	movf	??_scale+1,w
  4320  0EA4  00A8               	movwf	___flmul@b
  4321  0EA5  3064               	movlw	100
  4322  0EA6  00A0               	movwf	___awdiv@divisor
  4323  0EA7  3000               	movlw	0
  4324  0EA8  00A1               	movwf	___awdiv@divisor+1
  4325  0EA9  0854               	movf	scale@scl,w
  4326  0EAA  00A2               	movwf	___awdiv@dividend
  4327  0EAB  01A3               	clrf	___awdiv@dividend+1
  4328  0EAC  1BA2               	btfsc	___awdiv@dividend,7
  4329  0EAD  03A3               	decf	___awdiv@dividend+1,f
  4330  0EAE  120A  158A  2008  120A  158A  	fcall	___awdiv
  4331  0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  4332  0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  4333  0EB5  0820               	movf	?___awdiv,w
  4334  0EB6  00CB               	movwf	??_scale+5
  4335  0EB7  3001               	movlw	1
  4336  0EB8                     u4095:	
  4337  0EB8  1003               	clrc
  4338  0EB9  0DCB               	rlf	??_scale+5,f
  4339  0EBA  3EFF               	addlw	-1
  4340  0EBB  1D03               	skipz
  4341  0EBC  2EB8               	goto	u4095
  4342  0EBD  1003               	clrc
  4343  0EBE  0D4B               	rlf	??_scale+5,w
  4344  0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  4345  0EC0  0084               	movwf	4
  4346  0EC1  160A  118A  200A  120A  158A  	fcall	stringdir
  4347  0EC6  00CC               	movwf	??_scale+6
  4348  0EC7  160A  118A  200A  120A  158A  	fcall	stringdir
  4349  0ECC  00CD               	movwf	??_scale+7
  4350  0ECD  160A  118A  200A  120A  158A  	fcall	stringdir
  4351  0ED2  00CE               	movwf	??_scale+8
  4352  0ED3  160A  118A  200A  120A  158A  	fcall	stringdir
  4353  0ED8  00CF               	movwf	??_scale+9
  4354  0ED9  084F               	movf	??_scale+9,w
  4355  0EDA  00AF               	movwf	___flmul@a+3
  4356  0EDB  084E               	movf	??_scale+8,w
  4357  0EDC  00AE               	movwf	___flmul@a+2
  4358  0EDD  084D               	movf	??_scale+7,w
  4359  0EDE  00AD               	movwf	___flmul@a+1
  4360  0EDF  084C               	movf	??_scale+6,w
  4361  0EE0  00AC               	movwf	___flmul@a
  4362  0EE1  120A  158A  213C  120A  158A  	fcall	___flmul
  4363  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  4364  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  4365  0EE8  082B               	movf	?___flmul+3,w
  4366  0EE9  00D3               	movwf	_scale$1024+3
  4367  0EEA  082A               	movf	?___flmul+2,w
  4368  0EEB  00D2               	movwf	_scale$1024+2
  4369  0EEC  0829               	movf	?___flmul+1,w
  4370  0EED  00D1               	movwf	_scale$1024+1
  4371  0EEE  0828               	movf	?___flmul,w
  4372  0EEF  00D0               	movwf	_scale$1024
  4373                           
  4374                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 445:   retu
      +                          rn _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _
      +                          powers_[(unsigned char)(scl%10)];
  4375  0EF0  300A               	movlw	10
  4376  0EF1  00F2               	movwf	___awmod@divisor
  4377  0EF2  3000               	movlw	0
  4378  0EF3  00F3               	movwf	___awmod@divisor+1
  4379  0EF4  0854               	movf	scale@scl,w
  4380  0EF5  00F4               	movwf	___awmod@dividend
  4381  0EF6  01F5               	clrf	___awmod@dividend+1
  4382  0EF7  1BF4               	btfsc	___awmod@dividend,7
  4383  0EF8  03F5               	decf	___awmod@dividend+1,f
  4384  0EF9  160A  158A  25FD  120A  158A  	fcall	___awmod
  4385  0EFE  0872               	movf	?___awmod,w
  4386  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  4387  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  4388  0F01  00C6               	movwf	??_scale
  4389  0F02  3001               	movlw	1
  4390  0F03                     u4105:	
  4391  0F03  1003               	clrc
  4392  0F04  0DC6               	rlf	??_scale,f
  4393  0F05  3EFF               	addlw	-1
  4394  0F06  1D03               	skipz
  4395  0F07  2F03               	goto	u4105
  4396  0F08  1003               	clrc
  4397  0F09  0D46               	rlf	??_scale,w
  4398  0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4399  0F0B  0084               	movwf	4
  4400  0F0C  160A  118A  200A  120A  158A  	fcall	stringdir
  4401  0F11  00C7               	movwf	??_scale+1
  4402  0F12  160A  118A  200A  120A  158A  	fcall	stringdir
  4403  0F17  00C8               	movwf	??_scale+2
  4404  0F18  160A  118A  200A  120A  158A  	fcall	stringdir
  4405  0F1D  00C9               	movwf	??_scale+3
  4406  0F1E  160A  118A  200A  120A  158A  	fcall	stringdir
  4407  0F23  00CA               	movwf	??_scale+4
  4408  0F24  084A               	movf	??_scale+4,w
  4409  0F25  00AB               	movwf	___flmul@b+3
  4410  0F26  0849               	movf	??_scale+3,w
  4411  0F27  00AA               	movwf	___flmul@b+2
  4412  0F28  0848               	movf	??_scale+2,w
  4413  0F29  00A9               	movwf	___flmul@b+1
  4414  0F2A  0847               	movf	??_scale+1,w
  4415  0F2B  00A8               	movwf	___flmul@b
  4416  0F2C  0853               	movf	_scale$1024+3,w
  4417  0F2D  00AF               	movwf	___flmul@a+3
  4418  0F2E  0852               	movf	_scale$1024+2,w
  4419  0F2F  00AE               	movwf	___flmul@a+2
  4420  0F30  0851               	movf	_scale$1024+1,w
  4421  0F31  00AD               	movwf	___flmul@a+1
  4422  0F32  0850               	movf	_scale$1024,w
  4423  0F33  00AC               	movwf	___flmul@a
  4424  0F34  120A  158A  213C  120A  158A  	fcall	___flmul
  4425  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  4426  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  4427  0F3B  082B               	movf	?___flmul+3,w
  4428  0F3C  00C5               	movwf	?_scale+3
  4429  0F3D  082A               	movf	?___flmul+2,w
  4430  0F3E  00C4               	movwf	?_scale+2
  4431  0F3F  0829               	movf	?___flmul+1,w
  4432  0F40  00C3               	movwf	?_scale+1
  4433  0F41  0828               	movf	?___flmul,w
  4434  0F42  00C2               	movwf	?_scale
  4435  0F43  2FFF               	goto	l246
  4436  0F44                     l2684:	
  4437  0F44  0854               	movf	scale@scl,w
  4438  0F45  3A80               	xorlw	128
  4439  0F46  3E75               	addlw	-139
  4440  0F47  1C03               	skipc
  4441  0F48  2F4A               	goto	u4111
  4442  0F49  2F4B               	goto	u4110
  4443  0F4A                     u4111:	
  4444  0F4A  2FD3               	goto	l2690
  4445  0F4B                     u4110:	
  4446  0F4B                     l2686:	
  4447                           
  4448                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 447:   retu
      +                          rn _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  4449  0F4B  300A               	movlw	10
  4450  0F4C  00F2               	movwf	___awmod@divisor
  4451  0F4D  3000               	movlw	0
  4452  0F4E  00F3               	movwf	___awmod@divisor+1
  4453  0F4F  0854               	movf	scale@scl,w
  4454  0F50  00F4               	movwf	___awmod@dividend
  4455  0F51  01F5               	clrf	___awmod@dividend+1
  4456  0F52  1BF4               	btfsc	___awmod@dividend,7
  4457  0F53  03F5               	decf	___awmod@dividend+1,f
  4458  0F54  160A  158A  25FD  120A  158A  	fcall	___awmod
  4459  0F59  0872               	movf	?___awmod,w
  4460  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  4461  0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  4462  0F5C  00C6               	movwf	??_scale
  4463  0F5D  3001               	movlw	1
  4464  0F5E                     u4125:	
  4465  0F5E  1003               	clrc
  4466  0F5F  0DC6               	rlf	??_scale,f
  4467  0F60  3EFF               	addlw	-1
  4468  0F61  1D03               	skipz
  4469  0F62  2F5E               	goto	u4125
  4470  0F63  1003               	clrc
  4471  0F64  0D46               	rlf	??_scale,w
  4472  0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4473  0F66  0084               	movwf	4
  4474  0F67  160A  118A  200A  120A  158A  	fcall	stringdir
  4475  0F6C  00C7               	movwf	??_scale+1
  4476  0F6D  160A  118A  200A  120A  158A  	fcall	stringdir
  4477  0F72  00C8               	movwf	??_scale+2
  4478  0F73  160A  118A  200A  120A  158A  	fcall	stringdir
  4479  0F78  00C9               	movwf	??_scale+3
  4480  0F79  160A  118A  200A  120A  158A  	fcall	stringdir
  4481  0F7E  00CA               	movwf	??_scale+4
  4482  0F7F  084A               	movf	??_scale+4,w
  4483  0F80  00AB               	movwf	___flmul@b+3
  4484  0F81  0849               	movf	??_scale+3,w
  4485  0F82  00AA               	movwf	___flmul@b+2
  4486  0F83  0848               	movf	??_scale+2,w
  4487  0F84  00A9               	movwf	___flmul@b+1
  4488  0F85  0847               	movf	??_scale+1,w
  4489  0F86  00A8               	movwf	___flmul@b
  4490  0F87  300A               	movlw	10
  4491  0F88  00A0               	movwf	___awdiv@divisor
  4492  0F89  3000               	movlw	0
  4493  0F8A  00A1               	movwf	___awdiv@divisor+1
  4494  0F8B  0854               	movf	scale@scl,w
  4495  0F8C  00A2               	movwf	___awdiv@dividend
  4496  0F8D  01A3               	clrf	___awdiv@dividend+1
  4497  0F8E  1BA2               	btfsc	___awdiv@dividend,7
  4498  0F8F  03A3               	decf	___awdiv@dividend+1,f
  4499  0F90  120A  158A  2008  120A  158A  	fcall	___awdiv
  4500  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  4501  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  4502  0F97  0820               	movf	?___awdiv,w
  4503  0F98  00CB               	movwf	??_scale+5
  4504  0F99  3001               	movlw	1
  4505  0F9A                     u4135:	
  4506  0F9A  1003               	clrc
  4507  0F9B  0DCB               	rlf	??_scale+5,f
  4508  0F9C  3EFF               	addlw	-1
  4509  0F9D  1D03               	skipz
  4510  0F9E  2F9A               	goto	u4135
  4511  0F9F  1003               	clrc
  4512  0FA0  0D4B               	rlf	??_scale+5,w
  4513  0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4514  0FA2  0084               	movwf	4
  4515  0FA3  160A  118A  200A  120A  158A  	fcall	stringdir
  4516  0FA8  00CC               	movwf	??_scale+6
  4517  0FA9  160A  118A  200A  120A  158A  	fcall	stringdir
  4518  0FAE  00CD               	movwf	??_scale+7
  4519  0FAF  160A  118A  200A  120A  158A  	fcall	stringdir
  4520  0FB4  00CE               	movwf	??_scale+8
  4521  0FB5  160A  118A  200A  120A  158A  	fcall	stringdir
  4522  0FBA  00CF               	movwf	??_scale+9
  4523  0FBB  084F               	movf	??_scale+9,w
  4524  0FBC  00AF               	movwf	___flmul@a+3
  4525  0FBD  084E               	movf	??_scale+8,w
  4526  0FBE  00AE               	movwf	___flmul@a+2
  4527  0FBF  084D               	movf	??_scale+7,w
  4528  0FC0  00AD               	movwf	___flmul@a+1
  4529  0FC1  084C               	movf	??_scale+6,w
  4530  0FC2  00AC               	movwf	___flmul@a
  4531  0FC3  120A  158A  213C  120A  158A  	fcall	___flmul
  4532  0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  4533  0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  4534  0FCA  082B               	movf	?___flmul+3,w
  4535  0FCB  00C5               	movwf	?_scale+3
  4536  0FCC  082A               	movf	?___flmul+2,w
  4537  0FCD  00C4               	movwf	?_scale+2
  4538  0FCE  0829               	movf	?___flmul+1,w
  4539  0FCF  00C3               	movwf	?_scale+1
  4540  0FD0  0828               	movf	?___flmul,w
  4541  0FD1  00C2               	movwf	?_scale
  4542  0FD2  2FFF               	goto	l246
  4543  0FD3                     l2690:	
  4544                           
  4545                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 448:  retur
      +                          n _powers_[(unsigned char)scl];
  4546  0FD3  0854               	movf	scale@scl,w
  4547  0FD4  00C6               	movwf	??_scale
  4548  0FD5  3001               	movlw	1
  4549  0FD6                     u4145:	
  4550  0FD6  1003               	clrc
  4551  0FD7  0DC6               	rlf	??_scale,f
  4552  0FD8  3EFF               	addlw	-1
  4553  0FD9  1D03               	skipz
  4554  0FDA  2FD6               	goto	u4145
  4555  0FDB  1003               	clrc
  4556  0FDC  0D46               	rlf	??_scale,w
  4557  0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4558  0FDE  0084               	movwf	4
  4559  0FDF  160A  118A  200A  120A  158A  	fcall	stringdir
  4560  0FE4  00C7               	movwf	??_scale+1
  4561  0FE5  160A  118A  200A  120A  158A  	fcall	stringdir
  4562  0FEA  00C8               	movwf	??_scale+2
  4563  0FEB  160A  118A  200A  120A  158A  	fcall	stringdir
  4564  0FF0  00C9               	movwf	??_scale+3
  4565  0FF1  160A  118A  200A  120A  158A  	fcall	stringdir
  4566  0FF6  00CA               	movwf	??_scale+4
  4567  0FF7  084A               	movf	??_scale+4,w
  4568  0FF8  00C5               	movwf	?_scale+3
  4569  0FF9  0849               	movf	??_scale+3,w
  4570  0FFA  00C4               	movwf	?_scale+2
  4571  0FFB  0848               	movf	??_scale+2,w
  4572  0FFC  00C3               	movwf	?_scale+1
  4573  0FFD  0847               	movf	??_scale+1,w
  4574  0FFE  00C2               	movwf	?_scale
  4575  0FFF                     l246:	
  4576  0FFF  0008               	return
  4577  1000                     __end_of_scale:	
  4578                           
  4579                           	psect	text5
  4580  1DFD                     __ptext5:	
  4581 ;; *************** function ___awmod *****************
  4582 ;; Defined at:
  4583 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  4584 ;; Parameters:    Size  Location     Type
  4585 ;;  divisor         2    2[COMMON] int 
  4586 ;;  dividend        2    4[COMMON] int 
  4587 ;; Auto vars:     Size  Location     Type
  4588 ;;  sign            1    8[COMMON] unsigned char 
  4589 ;;  counter         1    7[COMMON] unsigned char 
  4590 ;; Return value:  Size  Location     Type
  4591 ;;                  2    2[COMMON] int 
  4592 ;; Registers used:
  4593 ;;		wreg, status,2, status,0
  4594 ;; Tracked objects:
  4595 ;;		On entry : 0/0
  4596 ;;		On exit  : 0/0
  4597 ;;		Unchanged: 0/0
  4598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4599 ;;      Params:         4       0       0       0       0
  4600 ;;      Locals:         2       0       0       0       0
  4601 ;;      Temps:          1       0       0       0       0
  4602 ;;      Totals:         7       0       0       0       0
  4603 ;;Total ram usage:        7 bytes
  4604 ;; Hardware stack levels used:    1
  4605 ;; Hardware stack levels required when called:    1
  4606 ;; This function calls:
  4607 ;;		Nothing
  4608 ;; This function is called by:
  4609 ;;		_scale
  4610 ;; This function uses a non-reentrant model
  4611 ;;
  4612                           
  4613                           
  4614                           ;psect for function ___awmod
  4615  1DFD                     ___awmod:	
  4616  1DFD                     l2208:	
  4617                           ;incstack = 0
  4618                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4619                           
  4620  1DFD  01F8               	clrf	___awmod@sign
  4621  1DFE                     l2210:	
  4622  1DFE  1FF5               	btfss	___awmod@dividend+1,7
  4623  1DFF  2E01               	goto	u2851
  4624  1E00  2E02               	goto	u2850
  4625  1E01                     u2851:	
  4626  1E01  2E09               	goto	l2216
  4627  1E02                     u2850:	
  4628  1E02                     l2212:	
  4629  1E02  09F4               	comf	___awmod@dividend,f
  4630  1E03  09F5               	comf	___awmod@dividend+1,f
  4631  1E04  0AF4               	incf	___awmod@dividend,f
  4632  1E05  1903               	skipnz
  4633  1E06  0AF5               	incf	___awmod@dividend+1,f
  4634  1E07                     l2214:	
  4635  1E07  01F8               	clrf	___awmod@sign
  4636  1E08  0AF8               	incf	___awmod@sign,f
  4637  1E09                     l2216:	
  4638  1E09  1FF3               	btfss	___awmod@divisor+1,7
  4639  1E0A  2E0C               	goto	u2861
  4640  1E0B  2E0D               	goto	u2860
  4641  1E0C                     u2861:	
  4642  1E0C  2E12               	goto	l2220
  4643  1E0D                     u2860:	
  4644  1E0D                     l2218:	
  4645  1E0D  09F2               	comf	___awmod@divisor,f
  4646  1E0E  09F3               	comf	___awmod@divisor+1,f
  4647  1E0F  0AF2               	incf	___awmod@divisor,f
  4648  1E10  1903               	skipnz
  4649  1E11  0AF3               	incf	___awmod@divisor+1,f
  4650  1E12                     l2220:	
  4651  1E12  0872               	movf	___awmod@divisor,w
  4652  1E13  0473               	iorwf	___awmod@divisor+1,w
  4653  1E14  1903               	btfsc	3,2
  4654  1E15  2E17               	goto	u2871
  4655  1E16  2E18               	goto	u2870
  4656  1E17                     u2871:	
  4657  1E17  2E47               	goto	l2238
  4658  1E18                     u2870:	
  4659  1E18                     l2222:	
  4660  1E18  01F7               	clrf	___awmod@counter
  4661  1E19  0AF7               	incf	___awmod@counter,f
  4662  1E1A  2E26               	goto	l2228
  4663  1E1B                     l2224:	
  4664  1E1B  3001               	movlw	1
  4665  1E1C                     u2885:	
  4666  1E1C  1003               	clrc
  4667  1E1D  0DF2               	rlf	___awmod@divisor,f
  4668  1E1E  0DF3               	rlf	___awmod@divisor+1,f
  4669  1E1F  3EFF               	addlw	-1
  4670  1E20  1D03               	skipz
  4671  1E21  2E1C               	goto	u2885
  4672  1E22                     l2226:	
  4673  1E22  3001               	movlw	1
  4674  1E23  00F6               	movwf	??___awmod
  4675  1E24  0876               	movf	??___awmod,w
  4676  1E25  07F7               	addwf	___awmod@counter,f
  4677  1E26                     l2228:	
  4678  1E26  1FF3               	btfss	___awmod@divisor+1,7
  4679  1E27  2E29               	goto	u2891
  4680  1E28  2E2A               	goto	u2890
  4681  1E29                     u2891:	
  4682  1E29  2E1B               	goto	l2224
  4683  1E2A                     u2890:	
  4684  1E2A                     l2230:	
  4685  1E2A  0873               	movf	___awmod@divisor+1,w
  4686  1E2B  0275               	subwf	___awmod@dividend+1,w
  4687  1E2C  1D03               	skipz
  4688  1E2D  2E30               	goto	u2905
  4689  1E2E  0872               	movf	___awmod@divisor,w
  4690  1E2F  0274               	subwf	___awmod@dividend,w
  4691  1E30                     u2905:	
  4692  1E30  1C03               	skipc
  4693  1E31  2E33               	goto	u2901
  4694  1E32  2E34               	goto	u2900
  4695  1E33                     u2901:	
  4696  1E33  2E3A               	goto	l2234
  4697  1E34                     u2900:	
  4698  1E34                     l2232:	
  4699  1E34  0872               	movf	___awmod@divisor,w
  4700  1E35  02F4               	subwf	___awmod@dividend,f
  4701  1E36  0873               	movf	___awmod@divisor+1,w
  4702  1E37  1C03               	skipc
  4703  1E38  03F5               	decf	___awmod@dividend+1,f
  4704  1E39  02F5               	subwf	___awmod@dividend+1,f
  4705  1E3A                     l2234:	
  4706  1E3A  3001               	movlw	1
  4707  1E3B                     u2915:	
  4708  1E3B  1003               	clrc
  4709  1E3C  0CF3               	rrf	___awmod@divisor+1,f
  4710  1E3D  0CF2               	rrf	___awmod@divisor,f
  4711  1E3E  3EFF               	addlw	-1
  4712  1E3F  1D03               	skipz
  4713  1E40  2E3B               	goto	u2915
  4714  1E41                     l2236:	
  4715  1E41  3001               	movlw	1
  4716  1E42  02F7               	subwf	___awmod@counter,f
  4717  1E43  1D03               	btfss	3,2
  4718  1E44  2E46               	goto	u2921
  4719  1E45  2E47               	goto	u2920
  4720  1E46                     u2921:	
  4721  1E46  2E2A               	goto	l2230
  4722  1E47                     u2920:	
  4723  1E47                     l2238:	
  4724  1E47  0878               	movf	___awmod@sign,w
  4725  1E48  1903               	btfsc	3,2
  4726  1E49  2E4B               	goto	u2931
  4727  1E4A  2E4C               	goto	u2930
  4728  1E4B                     u2931:	
  4729  1E4B  2E51               	goto	l2242
  4730  1E4C                     u2930:	
  4731  1E4C                     l2240:	
  4732  1E4C  09F4               	comf	___awmod@dividend,f
  4733  1E4D  09F5               	comf	___awmod@dividend+1,f
  4734  1E4E  0AF4               	incf	___awmod@dividend,f
  4735  1E4F  1903               	skipnz
  4736  1E50  0AF5               	incf	___awmod@dividend+1,f
  4737  1E51                     l2242:	
  4738  1E51  0875               	movf	___awmod@dividend+1,w
  4739  1E52  00F3               	movwf	?___awmod+1
  4740  1E53  0874               	movf	___awmod@dividend,w
  4741  1E54  00F2               	movwf	?___awmod
  4742  1E55                     l491:	
  4743  1E55  0008               	return
  4744  1E56                     __end_of___awmod:	
  4745                           
  4746                           	psect	text6
  4747  0808                     __ptext6:	
  4748 ;; *************** function ___awdiv *****************
  4749 ;; Defined at:
  4750 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  4751 ;; Parameters:    Size  Location     Type
  4752 ;;  divisor         2    0[BANK0 ] int 
  4753 ;;  dividend        2    2[BANK0 ] int 
  4754 ;; Auto vars:     Size  Location     Type
  4755 ;;  quotient        2    6[BANK0 ] int 
  4756 ;;  sign            1    5[BANK0 ] unsigned char 
  4757 ;;  counter         1    4[BANK0 ] unsigned char 
  4758 ;; Return value:  Size  Location     Type
  4759 ;;                  2    0[BANK0 ] int 
  4760 ;; Registers used:
  4761 ;;		wreg, status,2, status,0
  4762 ;; Tracked objects:
  4763 ;;		On entry : 0/0
  4764 ;;		On exit  : 0/0
  4765 ;;		Unchanged: 0/0
  4766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4767 ;;      Params:         0       4       0       0       0
  4768 ;;      Locals:         0       4       0       0       0
  4769 ;;      Temps:          1       0       0       0       0
  4770 ;;      Totals:         1       8       0       0       0
  4771 ;;Total ram usage:        9 bytes
  4772 ;; Hardware stack levels used:    1
  4773 ;; Hardware stack levels required when called:    1
  4774 ;; This function calls:
  4775 ;;		Nothing
  4776 ;; This function is called by:
  4777 ;;		_main
  4778 ;;		_scale
  4779 ;;		_sprintf
  4780 ;; This function uses a non-reentrant model
  4781 ;;
  4782                           
  4783                           
  4784                           ;psect for function ___awdiv
  4785  0808                     ___awdiv:	
  4786  0808                     l2164:	
  4787                           ;incstack = 0
  4788                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4789                           
  4790  0808  1283               	bcf	3,5	;RP0=0, select bank0
  4791  0809  1303               	bcf	3,6	;RP1=0, select bank0
  4792  080A  01A5               	clrf	___awdiv@sign
  4793  080B                     l2166:	
  4794  080B  1FA1               	btfss	___awdiv@divisor+1,7
  4795  080C  280E               	goto	u2751
  4796  080D  280F               	goto	u2750
  4797  080E                     u2751:	
  4798  080E  2816               	goto	l2172
  4799  080F                     u2750:	
  4800  080F                     l2168:	
  4801  080F  09A0               	comf	___awdiv@divisor,f
  4802  0810  09A1               	comf	___awdiv@divisor+1,f
  4803  0811  0AA0               	incf	___awdiv@divisor,f
  4804  0812  1903               	skipnz
  4805  0813  0AA1               	incf	___awdiv@divisor+1,f
  4806  0814                     l2170:	
  4807  0814  01A5               	clrf	___awdiv@sign
  4808  0815  0AA5               	incf	___awdiv@sign,f
  4809  0816                     l2172:	
  4810  0816  1FA3               	btfss	___awdiv@dividend+1,7
  4811  0817  2819               	goto	u2761
  4812  0818  281A               	goto	u2760
  4813  0819                     u2761:	
  4814  0819  2823               	goto	l2178
  4815  081A                     u2760:	
  4816  081A                     l2174:	
  4817  081A  09A2               	comf	___awdiv@dividend,f
  4818  081B  09A3               	comf	___awdiv@dividend+1,f
  4819  081C  0AA2               	incf	___awdiv@dividend,f
  4820  081D  1903               	skipnz
  4821  081E  0AA3               	incf	___awdiv@dividend+1,f
  4822  081F                     l2176:	
  4823  081F  3001               	movlw	1
  4824  0820  00F9               	movwf	??___awdiv
  4825  0821  0879               	movf	??___awdiv,w
  4826  0822  06A5               	xorwf	___awdiv@sign,f
  4827  0823                     l2178:	
  4828  0823  01A6               	clrf	___awdiv@quotient
  4829  0824  01A7               	clrf	___awdiv@quotient+1
  4830  0825                     l2180:	
  4831  0825  0820               	movf	___awdiv@divisor,w
  4832  0826  0421               	iorwf	___awdiv@divisor+1,w
  4833  0827  1903               	btfsc	3,2
  4834  0828  282A               	goto	u2771
  4835  0829  282B               	goto	u2770
  4836  082A                     u2771:	
  4837  082A  2862               	goto	l2200
  4838  082B                     u2770:	
  4839  082B                     l2182:	
  4840  082B  01A4               	clrf	___awdiv@counter
  4841  082C  0AA4               	incf	___awdiv@counter,f
  4842  082D  2839               	goto	l2188
  4843  082E                     l2184:	
  4844  082E  3001               	movlw	1
  4845  082F                     u2785:	
  4846  082F  1003               	clrc
  4847  0830  0DA0               	rlf	___awdiv@divisor,f
  4848  0831  0DA1               	rlf	___awdiv@divisor+1,f
  4849  0832  3EFF               	addlw	-1
  4850  0833  1D03               	skipz
  4851  0834  282F               	goto	u2785
  4852  0835                     l2186:	
  4853  0835  3001               	movlw	1
  4854  0836  00F9               	movwf	??___awdiv
  4855  0837  0879               	movf	??___awdiv,w
  4856  0838  07A4               	addwf	___awdiv@counter,f
  4857  0839                     l2188:	
  4858  0839  1FA1               	btfss	___awdiv@divisor+1,7
  4859  083A  283C               	goto	u2791
  4860  083B  283D               	goto	u2790
  4861  083C                     u2791:	
  4862  083C  282E               	goto	l2184
  4863  083D                     u2790:	
  4864  083D                     l2190:	
  4865  083D  3001               	movlw	1
  4866  083E                     u2805:	
  4867  083E  1003               	clrc
  4868  083F  0DA6               	rlf	___awdiv@quotient,f
  4869  0840  0DA7               	rlf	___awdiv@quotient+1,f
  4870  0841  3EFF               	addlw	-1
  4871  0842  1D03               	skipz
  4872  0843  283E               	goto	u2805
  4873  0844  0821               	movf	___awdiv@divisor+1,w
  4874  0845  0223               	subwf	___awdiv@dividend+1,w
  4875  0846  1D03               	skipz
  4876  0847  284A               	goto	u2815
  4877  0848  0820               	movf	___awdiv@divisor,w
  4878  0849  0222               	subwf	___awdiv@dividend,w
  4879  084A                     u2815:	
  4880  084A  1C03               	skipc
  4881  084B  284D               	goto	u2811
  4882  084C  284E               	goto	u2810
  4883  084D                     u2811:	
  4884  084D  2855               	goto	l2196
  4885  084E                     u2810:	
  4886  084E                     l2192:	
  4887  084E  0820               	movf	___awdiv@divisor,w
  4888  084F  02A2               	subwf	___awdiv@dividend,f
  4889  0850  0821               	movf	___awdiv@divisor+1,w
  4890  0851  1C03               	skipc
  4891  0852  03A3               	decf	___awdiv@dividend+1,f
  4892  0853  02A3               	subwf	___awdiv@dividend+1,f
  4893  0854                     l2194:	
  4894  0854  1426               	bsf	___awdiv@quotient,0
  4895  0855                     l2196:	
  4896  0855  3001               	movlw	1
  4897  0856                     u2825:	
  4898  0856  1003               	clrc
  4899  0857  0CA1               	rrf	___awdiv@divisor+1,f
  4900  0858  0CA0               	rrf	___awdiv@divisor,f
  4901  0859  3EFF               	addlw	-1
  4902  085A  1D03               	skipz
  4903  085B  2856               	goto	u2825
  4904  085C                     l2198:	
  4905  085C  3001               	movlw	1
  4906  085D  02A4               	subwf	___awdiv@counter,f
  4907  085E  1D03               	btfss	3,2
  4908  085F  2861               	goto	u2831
  4909  0860  2862               	goto	u2830
  4910  0861                     u2831:	
  4911  0861  283D               	goto	l2190
  4912  0862                     u2830:	
  4913  0862                     l2200:	
  4914  0862  0825               	movf	___awdiv@sign,w
  4915  0863  1903               	btfsc	3,2
  4916  0864  2866               	goto	u2841
  4917  0865  2867               	goto	u2840
  4918  0866                     u2841:	
  4919  0866  286C               	goto	l2204
  4920  0867                     u2840:	
  4921  0867                     l2202:	
  4922  0867  09A6               	comf	___awdiv@quotient,f
  4923  0868  09A7               	comf	___awdiv@quotient+1,f
  4924  0869  0AA6               	incf	___awdiv@quotient,f
  4925  086A  1903               	skipnz
  4926  086B  0AA7               	incf	___awdiv@quotient+1,f
  4927  086C                     l2204:	
  4928  086C  0827               	movf	___awdiv@quotient+1,w
  4929  086D  00A1               	movwf	?___awdiv+1
  4930  086E  0826               	movf	___awdiv@quotient,w
  4931  086F  00A0               	movwf	?___awdiv
  4932  0870                     l478:	
  4933  0870  0008               	return
  4934  0871                     __end_of___awdiv:	
  4935                           
  4936                           	psect	text7
  4937  1B11                     __ptext7:	
  4938 ;; *************** function _isdigit *****************
  4939 ;; Defined at:
  4940 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\isdigit.c"
  4941 ;; Parameters:    Size  Location     Type
  4942 ;;  c               1    wreg     unsigned char 
  4943 ;; Auto vars:     Size  Location     Type
  4944 ;;  c               1    3[COMMON] unsigned char 
  4945 ;; Return value:  Size  Location     Type
  4946 ;;		None               void
  4947 ;; Registers used:
  4948 ;;		wreg, status,2, status,0
  4949 ;; Tracked objects:
  4950 ;;		On entry : 0/0
  4951 ;;		On exit  : 0/0
  4952 ;;		Unchanged: 0/0
  4953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4954 ;;      Params:         0       0       0       0       0
  4955 ;;      Locals:         2       0       0       0       0
  4956 ;;      Temps:          0       0       0       0       0
  4957 ;;      Totals:         2       0       0       0       0
  4958 ;;Total ram usage:        2 bytes
  4959 ;; Hardware stack levels used:    1
  4960 ;; Hardware stack levels required when called:    1
  4961 ;; This function calls:
  4962 ;;		Nothing
  4963 ;; This function is called by:
  4964 ;;		_sprintf
  4965 ;; This function uses a non-reentrant model
  4966 ;;
  4967                           
  4968                           
  4969                           ;psect for function _isdigit
  4970  1B11                     _isdigit:	
  4971                           
  4972                           ;incstack = 0
  4973                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4974                           ;isdigit@c stored from wreg
  4975  1B11  00F3               	movwf	isdigit@c
  4976  1B12                     l2694:	
  4977  1B12  01F2               	clrf	_isdigit$845
  4978  1B13                     l2696:	
  4979  1B13  303A               	movlw	58
  4980  1B14  0273               	subwf	isdigit@c,w
  4981  1B15  1803               	skipnc
  4982  1B16  2B18               	goto	u4151
  4983  1B17  2B19               	goto	u4150
  4984  1B18                     u4151:	
  4985  1B18  2B21               	goto	l2702
  4986  1B19                     u4150:	
  4987  1B19                     l2698:	
  4988  1B19  3030               	movlw	48
  4989  1B1A  0273               	subwf	isdigit@c,w
  4990  1B1B  1C03               	skipc
  4991  1B1C  2B1E               	goto	u4161
  4992  1B1D  2B1F               	goto	u4160
  4993  1B1E                     u4161:	
  4994  1B1E  2B21               	goto	l2702
  4995  1B1F                     u4160:	
  4996  1B1F                     l2700:	
  4997  1B1F  01F2               	clrf	_isdigit$845
  4998  1B20  0AF2               	incf	_isdigit$845,f
  4999  1B21                     l2702:	
  5000  1B21  0C72               	rrf	_isdigit$845,w
  5001  1B22                     l806:	
  5002  1B22  0008               	return
  5003  1B23                     __end_of_isdigit:	
  5004                           
  5005                           	psect	text8
  5006  136B                     __ptext8:	
  5007 ;; *************** function _fround *****************
  5008 ;; Defined at:
  5009 ;;		line 417 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  5010 ;; Parameters:    Size  Location     Type
  5011 ;;  prec            1    wreg     unsigned char 
  5012 ;; Auto vars:     Size  Location     Type
  5013 ;;  prec            1   53[BANK0 ] unsigned char 
  5014 ;; Return value:  Size  Location     Type
  5015 ;;                  4   34[BANK0 ] unsigned char 
  5016 ;; Registers used:
  5017 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5018 ;; Tracked objects:
  5019 ;;		On entry : 0/0
  5020 ;;		On exit  : 0/0
  5021 ;;		Unchanged: 0/0
  5022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5023 ;;      Params:         0       4       0       0       0
  5024 ;;      Locals:         0       9       0       0       0
  5025 ;;      Temps:          0       7       0       0       0
  5026 ;;      Totals:         0      20       0       0       0
  5027 ;;Total ram usage:       20 bytes
  5028 ;; Hardware stack levels used:    1
  5029 ;; Hardware stack levels required when called:    3
  5030 ;; This function calls:
  5031 ;;		___flmul
  5032 ;;		___lwdiv
  5033 ;;		___lwmod
  5034 ;; This function is called by:
  5035 ;;		_sprintf
  5036 ;; This function uses a non-reentrant model
  5037 ;;
  5038                           
  5039                           
  5040                           ;psect for function _fround
  5041  136B                     _fround:	
  5042                           
  5043                           ;incstack = 0
  5044                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5045                           ;fround@prec stored from wreg
  5046  136B  1283               	bcf	3,5	;RP0=0, select bank0
  5047  136C  1303               	bcf	3,6	;RP1=0, select bank0
  5048  136D  00D5               	movwf	fround@prec
  5049  136E                     l3428:	
  5050                           
  5051                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 417: fround
      +                          (unsigned char prec);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\d
      +                          oprnt.c: 418: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt
      +                          .c: 421:  if(prec>=110)
  5052  136E  306E               	movlw	110
  5053  136F  0255               	subwf	fround@prec,w
  5054  1370  1C03               	skipc
  5055  1371  2B73               	goto	u5501
  5056  1372  2B74               	goto	u5500
  5057  1373                     u5501:	
  5058  1373  2C83               	goto	l3436
  5059  1374                     u5500:	
  5060  1374                     l3430:	
  5061                           
  5062                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5063  1374  303F               	movlw	63
  5064  1375  00AB               	movwf	___flmul@b+3
  5065  1376  3000               	movlw	0
  5066  1377  00AA               	movwf	___flmul@b+2
  5067  1378  3000               	movlw	0
  5068  1379  00A9               	movwf	___flmul@b+1
  5069  137A  3000               	movlw	0
  5070  137B  00A8               	movwf	___flmul@b
  5071  137C  3064               	movlw	100
  5072  137D  00A0               	movwf	___lwdiv@divisor
  5073  137E  3000               	movlw	0
  5074  137F  00A1               	movwf	___lwdiv@divisor+1
  5075  1380  0855               	movf	fround@prec,w
  5076  1381  00C6               	movwf	??_fround
  5077  1382  01C7               	clrf	??_fround+1
  5078  1383  0846               	movf	??_fround,w
  5079  1384  00A2               	movwf	___lwdiv@dividend
  5080  1385  0847               	movf	??_fround+1,w
  5081  1386  00A3               	movwf	___lwdiv@dividend+1
  5082  1387  160A  158A  2472  160A  118A  	fcall	___lwdiv
  5083  138C  1283               	bcf	3,5	;RP0=0, select bank0
  5084  138D  1303               	bcf	3,6	;RP1=0, select bank0
  5085  138E  0820               	movf	?___lwdiv,w
  5086  138F  00C8               	movwf	??_fround+2
  5087  1390  3001               	movlw	1
  5088  1391                     u5515:	
  5089  1391  1003               	clrc
  5090  1392  0DC8               	rlf	??_fround+2,f
  5091  1393  3EFF               	addlw	-1
  5092  1394  1D03               	skipz
  5093  1395  2B91               	goto	u5515
  5094  1396  1003               	clrc
  5095  1397  0D48               	rlf	??_fround+2,w
  5096  1398  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  5097  1399  0084               	movwf	4
  5098  139A  160A  118A  200A  160A  118A  	fcall	stringdir
  5099  139F  00C9               	movwf	??_fround+3
  5100  13A0  160A  118A  200A  160A  118A  	fcall	stringdir
  5101  13A5  00CA               	movwf	??_fround+4
  5102  13A6  160A  118A  200A  160A  118A  	fcall	stringdir
  5103  13AB  00CB               	movwf	??_fround+5
  5104  13AC  160A  118A  200A  160A  118A  	fcall	stringdir
  5105  13B1  00CC               	movwf	??_fround+6
  5106  13B2  084C               	movf	??_fround+6,w
  5107  13B3  00AF               	movwf	___flmul@a+3
  5108  13B4  084B               	movf	??_fround+5,w
  5109  13B5  00AE               	movwf	___flmul@a+2
  5110  13B6  084A               	movf	??_fround+4,w
  5111  13B7  00AD               	movwf	___flmul@a+1
  5112  13B8  0849               	movf	??_fround+3,w
  5113  13B9  00AC               	movwf	___flmul@a
  5114  13BA  120A  158A  213C  160A  118A  	fcall	___flmul
  5115  13BF  1283               	bcf	3,5	;RP0=0, select bank0
  5116  13C0  1303               	bcf	3,6	;RP1=0, select bank0
  5117  13C1  082B               	movf	?___flmul+3,w
  5118  13C2  00D4               	movwf	_fround$1022+3
  5119  13C3  082A               	movf	?___flmul+2,w
  5120  13C4  00D3               	movwf	_fround$1022+2
  5121  13C5  0829               	movf	?___flmul+1,w
  5122  13C6  00D2               	movwf	_fround$1022+1
  5123  13C7  0828               	movf	?___flmul,w
  5124  13C8  00D1               	movwf	_fround$1022
  5125                           
  5126                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5127  13C9  300A               	movlw	10
  5128  13CA  00A0               	movwf	___lwdiv@divisor
  5129  13CB  3000               	movlw	0
  5130  13CC  00A1               	movwf	___lwdiv@divisor+1
  5131  13CD  0855               	movf	fround@prec,w
  5132  13CE  00C6               	movwf	??_fround
  5133  13CF  01C7               	clrf	??_fround+1
  5134  13D0  0846               	movf	??_fround,w
  5135  13D1  00F4               	movwf	___lwmod@dividend
  5136  13D2  0847               	movf	??_fround+1,w
  5137  13D3  00F5               	movwf	___lwmod@dividend+1
  5138  13D4  3064               	movlw	100
  5139  13D5  00F2               	movwf	___lwmod@divisor
  5140  13D6  3000               	movlw	0
  5141  13D7  00F3               	movwf	___lwmod@divisor+1
  5142  13D8  160A  158A  23F2  160A  118A  	fcall	___lwmod
  5143  13DD  0873               	movf	?___lwmod+1,w
  5144  13DE  1283               	bcf	3,5	;RP0=0, select bank0
  5145  13DF  1303               	bcf	3,6	;RP1=0, select bank0
  5146  13E0  00A3               	movwf	___lwdiv@dividend+1
  5147  13E1  0872               	movf	?___lwmod,w
  5148  13E2  00A2               	movwf	___lwdiv@dividend
  5149  13E3  160A  158A  2472  160A  118A  	fcall	___lwdiv
  5150  13E8  1283               	bcf	3,5	;RP0=0, select bank0
  5151  13E9  1303               	bcf	3,6	;RP1=0, select bank0
  5152  13EA  0820               	movf	?___lwdiv,w
  5153  13EB  00C8               	movwf	??_fround+2
  5154  13EC  3001               	movlw	1
  5155  13ED                     u5525:	
  5156  13ED  1003               	clrc
  5157  13EE  0DC8               	rlf	??_fround+2,f
  5158  13EF  3EFF               	addlw	-1
  5159  13F0  1D03               	skipz
  5160  13F1  2BED               	goto	u5525
  5161  13F2  1003               	clrc
  5162  13F3  0D48               	rlf	??_fround+2,w
  5163  13F4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5164  13F5  0084               	movwf	4
  5165  13F6  160A  118A  200A  160A  118A  	fcall	stringdir
  5166  13FB  00C9               	movwf	??_fround+3
  5167  13FC  160A  118A  200A  160A  118A  	fcall	stringdir
  5168  1401  00CA               	movwf	??_fround+4
  5169  1402  160A  118A  200A  160A  118A  	fcall	stringdir
  5170  1407  00CB               	movwf	??_fround+5
  5171  1408  160A  118A  200A  160A  118A  	fcall	stringdir
  5172  140D  00CC               	movwf	??_fround+6
  5173  140E  084C               	movf	??_fround+6,w
  5174  140F  00AB               	movwf	___flmul@b+3
  5175  1410  084B               	movf	??_fround+5,w
  5176  1411  00AA               	movwf	___flmul@b+2
  5177  1412  084A               	movf	??_fround+4,w
  5178  1413  00A9               	movwf	___flmul@b+1
  5179  1414  0849               	movf	??_fround+3,w
  5180  1415  00A8               	movwf	___flmul@b
  5181  1416  0854               	movf	_fround$1022+3,w
  5182  1417  00AF               	movwf	___flmul@a+3
  5183  1418  0853               	movf	_fround$1022+2,w
  5184  1419  00AE               	movwf	___flmul@a+2
  5185  141A  0852               	movf	_fround$1022+1,w
  5186  141B  00AD               	movwf	___flmul@a+1
  5187  141C  0851               	movf	_fround$1022,w
  5188  141D  00AC               	movwf	___flmul@a
  5189  141E  120A  158A  213C  160A  118A  	fcall	___flmul
  5190  1423  1283               	bcf	3,5	;RP0=0, select bank0
  5191  1424  1303               	bcf	3,6	;RP1=0, select bank0
  5192  1425  082B               	movf	?___flmul+3,w
  5193  1426  00D0               	movwf	_fround$1023+3
  5194  1427  082A               	movf	?___flmul+2,w
  5195  1428  00CF               	movwf	_fround$1023+2
  5196  1429  0829               	movf	?___flmul+1,w
  5197  142A  00CE               	movwf	_fround$1023+1
  5198  142B  0828               	movf	?___flmul,w
  5199  142C  00CD               	movwf	_fround$1023
  5200                           
  5201                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5202  142D  300A               	movlw	10
  5203  142E  00F2               	movwf	___lwmod@divisor
  5204  142F  3000               	movlw	0
  5205  1430  00F3               	movwf	___lwmod@divisor+1
  5206  1431  0855               	movf	fround@prec,w
  5207  1432  00C6               	movwf	??_fround
  5208  1433  01C7               	clrf	??_fround+1
  5209  1434  0846               	movf	??_fround,w
  5210  1435  00F4               	movwf	___lwmod@dividend
  5211  1436  0847               	movf	??_fround+1,w
  5212  1437  00F5               	movwf	___lwmod@dividend+1
  5213  1438  160A  158A  23F2  160A  118A  	fcall	___lwmod
  5214  143D  0872               	movf	?___lwmod,w
  5215  143E  1283               	bcf	3,5	;RP0=0, select bank0
  5216  143F  1303               	bcf	3,6	;RP1=0, select bank0
  5217  1440  00C8               	movwf	??_fround+2
  5218  1441  3001               	movlw	1
  5219  1442                     u5535:	
  5220  1442  1003               	clrc
  5221  1443  0DC8               	rlf	??_fround+2,f
  5222  1444  3EFF               	addlw	-1
  5223  1445  1D03               	skipz
  5224  1446  2C42               	goto	u5535
  5225  1447  1003               	clrc
  5226  1448  0D48               	rlf	??_fround+2,w
  5227  1449  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5228  144A  0084               	movwf	4
  5229  144B  160A  118A  200A  160A  118A  	fcall	stringdir
  5230  1450  00C9               	movwf	??_fround+3
  5231  1451  160A  118A  200A  160A  118A  	fcall	stringdir
  5232  1456  00CA               	movwf	??_fround+4
  5233  1457  160A  118A  200A  160A  118A  	fcall	stringdir
  5234  145C  00CB               	movwf	??_fround+5
  5235  145D  160A  118A  200A  160A  118A  	fcall	stringdir
  5236  1462  00CC               	movwf	??_fround+6
  5237  1463  084C               	movf	??_fround+6,w
  5238  1464  00AB               	movwf	___flmul@b+3
  5239  1465  084B               	movf	??_fround+5,w
  5240  1466  00AA               	movwf	___flmul@b+2
  5241  1467  084A               	movf	??_fround+4,w
  5242  1468  00A9               	movwf	___flmul@b+1
  5243  1469  0849               	movf	??_fround+3,w
  5244  146A  00A8               	movwf	___flmul@b
  5245  146B  0850               	movf	_fround$1023+3,w
  5246  146C  00AF               	movwf	___flmul@a+3
  5247  146D  084F               	movf	_fround$1023+2,w
  5248  146E  00AE               	movwf	___flmul@a+2
  5249  146F  084E               	movf	_fround$1023+1,w
  5250  1470  00AD               	movwf	___flmul@a+1
  5251  1471  084D               	movf	_fround$1023,w
  5252  1472  00AC               	movwf	___flmul@a
  5253  1473  120A  158A  213C  160A  118A  	fcall	___flmul
  5254  1478  1283               	bcf	3,5	;RP0=0, select bank0
  5255  1479  1303               	bcf	3,6	;RP1=0, select bank0
  5256  147A  082B               	movf	?___flmul+3,w
  5257  147B  00C5               	movwf	?_fround+3
  5258  147C  082A               	movf	?___flmul+2,w
  5259  147D  00C4               	movwf	?_fround+2
  5260  147E  0829               	movf	?___flmul+1,w
  5261  147F  00C3               	movwf	?_fround+1
  5262  1480  0828               	movf	?___flmul,w
  5263  1481  00C2               	movwf	?_fround
  5264  1482  2D77               	goto	l239
  5265  1483                     l3436:	
  5266  1483  300B               	movlw	11
  5267  1484  0255               	subwf	fround@prec,w
  5268  1485  1C03               	skipc
  5269  1486  2C88               	goto	u5541
  5270  1487  2C89               	goto	u5540
  5271  1488                     u5541:	
  5272  1488  2D34               	goto	l3442
  5273  1489                     u5540:	
  5274  1489                     l3438:	
  5275                           
  5276                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 424:   retu
      +                          rn 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5277  1489  303F               	movlw	63
  5278  148A  00AB               	movwf	___flmul@b+3
  5279  148B  3000               	movlw	0
  5280  148C  00AA               	movwf	___flmul@b+2
  5281  148D  3000               	movlw	0
  5282  148E  00A9               	movwf	___flmul@b+1
  5283  148F  3000               	movlw	0
  5284  1490  00A8               	movwf	___flmul@b
  5285  1491  300A               	movlw	10
  5286  1492  00A0               	movwf	___lwdiv@divisor
  5287  1493  3000               	movlw	0
  5288  1494  00A1               	movwf	___lwdiv@divisor+1
  5289  1495  0855               	movf	fround@prec,w
  5290  1496  00C6               	movwf	??_fround
  5291  1497  01C7               	clrf	??_fround+1
  5292  1498  0846               	movf	??_fround,w
  5293  1499  00A2               	movwf	___lwdiv@dividend
  5294  149A  0847               	movf	??_fround+1,w
  5295  149B  00A3               	movwf	___lwdiv@dividend+1
  5296  149C  160A  158A  2472  160A  118A  	fcall	___lwdiv
  5297  14A1  1283               	bcf	3,5	;RP0=0, select bank0
  5298  14A2  1303               	bcf	3,6	;RP1=0, select bank0
  5299  14A3  0820               	movf	?___lwdiv,w
  5300  14A4  00C8               	movwf	??_fround+2
  5301  14A5  3001               	movlw	1
  5302  14A6                     u5555:	
  5303  14A6  1003               	clrc
  5304  14A7  0DC8               	rlf	??_fround+2,f
  5305  14A8  3EFF               	addlw	-1
  5306  14A9  1D03               	skipz
  5307  14AA  2CA6               	goto	u5555
  5308  14AB  1003               	clrc
  5309  14AC  0D48               	rlf	??_fround+2,w
  5310  14AD  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5311  14AE  0084               	movwf	4
  5312  14AF  160A  118A  200A  160A  118A  	fcall	stringdir
  5313  14B4  00C9               	movwf	??_fround+3
  5314  14B5  160A  118A  200A  160A  118A  	fcall	stringdir
  5315  14BA  00CA               	movwf	??_fround+4
  5316  14BB  160A  118A  200A  160A  118A  	fcall	stringdir
  5317  14C0  00CB               	movwf	??_fround+5
  5318  14C1  160A  118A  200A  160A  118A  	fcall	stringdir
  5319  14C6  00CC               	movwf	??_fround+6
  5320  14C7  084C               	movf	??_fround+6,w
  5321  14C8  00AF               	movwf	___flmul@a+3
  5322  14C9  084B               	movf	??_fround+5,w
  5323  14CA  00AE               	movwf	___flmul@a+2
  5324  14CB  084A               	movf	??_fround+4,w
  5325  14CC  00AD               	movwf	___flmul@a+1
  5326  14CD  0849               	movf	??_fround+3,w
  5327  14CE  00AC               	movwf	___flmul@a
  5328  14CF  120A  158A  213C  160A  118A  	fcall	___flmul
  5329  14D4  1283               	bcf	3,5	;RP0=0, select bank0
  5330  14D5  1303               	bcf	3,6	;RP1=0, select bank0
  5331  14D6  082B               	movf	?___flmul+3,w
  5332  14D7  00D4               	movwf	_fround$1022+3
  5333  14D8  082A               	movf	?___flmul+2,w
  5334  14D9  00D3               	movwf	_fround$1022+2
  5335  14DA  0829               	movf	?___flmul+1,w
  5336  14DB  00D2               	movwf	_fround$1022+1
  5337  14DC  0828               	movf	?___flmul,w
  5338  14DD  00D1               	movwf	_fround$1022
  5339                           
  5340                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 424:   retu
      +                          rn 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5341  14DE  300A               	movlw	10
  5342  14DF  00F2               	movwf	___lwmod@divisor
  5343  14E0  3000               	movlw	0
  5344  14E1  00F3               	movwf	___lwmod@divisor+1
  5345  14E2  0855               	movf	fround@prec,w
  5346  14E3  00C6               	movwf	??_fround
  5347  14E4  01C7               	clrf	??_fround+1
  5348  14E5  0846               	movf	??_fround,w
  5349  14E6  00F4               	movwf	___lwmod@dividend
  5350  14E7  0847               	movf	??_fround+1,w
  5351  14E8  00F5               	movwf	___lwmod@dividend+1
  5352  14E9  160A  158A  23F2  160A  118A  	fcall	___lwmod
  5353  14EE  0872               	movf	?___lwmod,w
  5354  14EF  1283               	bcf	3,5	;RP0=0, select bank0
  5355  14F0  1303               	bcf	3,6	;RP1=0, select bank0
  5356  14F1  00C8               	movwf	??_fround+2
  5357  14F2  3001               	movlw	1
  5358  14F3                     u5565:	
  5359  14F3  1003               	clrc
  5360  14F4  0DC8               	rlf	??_fround+2,f
  5361  14F5  3EFF               	addlw	-1
  5362  14F6  1D03               	skipz
  5363  14F7  2CF3               	goto	u5565
  5364  14F8  1003               	clrc
  5365  14F9  0D48               	rlf	??_fround+2,w
  5366  14FA  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5367  14FB  0084               	movwf	4
  5368  14FC  160A  118A  200A  160A  118A  	fcall	stringdir
  5369  1501  00C9               	movwf	??_fround+3
  5370  1502  160A  118A  200A  160A  118A  	fcall	stringdir
  5371  1507  00CA               	movwf	??_fround+4
  5372  1508  160A  118A  200A  160A  118A  	fcall	stringdir
  5373  150D  00CB               	movwf	??_fround+5
  5374  150E  160A  118A  200A  160A  118A  	fcall	stringdir
  5375  1513  00CC               	movwf	??_fround+6
  5376  1514  084C               	movf	??_fround+6,w
  5377  1515  00AB               	movwf	___flmul@b+3
  5378  1516  084B               	movf	??_fround+5,w
  5379  1517  00AA               	movwf	___flmul@b+2
  5380  1518  084A               	movf	??_fround+4,w
  5381  1519  00A9               	movwf	___flmul@b+1
  5382  151A  0849               	movf	??_fround+3,w
  5383  151B  00A8               	movwf	___flmul@b
  5384  151C  0854               	movf	_fround$1022+3,w
  5385  151D  00AF               	movwf	___flmul@a+3
  5386  151E  0853               	movf	_fround$1022+2,w
  5387  151F  00AE               	movwf	___flmul@a+2
  5388  1520  0852               	movf	_fround$1022+1,w
  5389  1521  00AD               	movwf	___flmul@a+1
  5390  1522  0851               	movf	_fround$1022,w
  5391  1523  00AC               	movwf	___flmul@a
  5392  1524  120A  158A  213C  160A  118A  	fcall	___flmul
  5393  1529  1283               	bcf	3,5	;RP0=0, select bank0
  5394  152A  1303               	bcf	3,6	;RP1=0, select bank0
  5395  152B  082B               	movf	?___flmul+3,w
  5396  152C  00C5               	movwf	?_fround+3
  5397  152D  082A               	movf	?___flmul+2,w
  5398  152E  00C4               	movwf	?_fround+2
  5399  152F  0829               	movf	?___flmul+1,w
  5400  1530  00C3               	movwf	?_fround+1
  5401  1531  0828               	movf	?___flmul,w
  5402  1532  00C2               	movwf	?_fround
  5403  1533  2D77               	goto	l239
  5404  1534                     l3442:	
  5405                           
  5406                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 425:  retur
      +                          n 0.5 * _npowers_[prec];
  5407  1534  303F               	movlw	63
  5408  1535  00AB               	movwf	___flmul@b+3
  5409  1536  3000               	movlw	0
  5410  1537  00AA               	movwf	___flmul@b+2
  5411  1538  3000               	movlw	0
  5412  1539  00A9               	movwf	___flmul@b+1
  5413  153A  3000               	movlw	0
  5414  153B  00A8               	movwf	___flmul@b
  5415  153C  0855               	movf	fround@prec,w
  5416  153D  00C6               	movwf	??_fround
  5417  153E  3001               	movlw	1
  5418  153F                     u5575:	
  5419  153F  1003               	clrc
  5420  1540  0DC6               	rlf	??_fround,f
  5421  1541  3EFF               	addlw	-1
  5422  1542  1D03               	skipz
  5423  1543  2D3F               	goto	u5575
  5424  1544  1003               	clrc
  5425  1545  0D46               	rlf	??_fround,w
  5426  1546  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5427  1547  0084               	movwf	4
  5428  1548  160A  118A  200A  160A  118A  	fcall	stringdir
  5429  154D  00C7               	movwf	??_fround+1
  5430  154E  160A  118A  200A  160A  118A  	fcall	stringdir
  5431  1553  00C8               	movwf	??_fround+2
  5432  1554  160A  118A  200A  160A  118A  	fcall	stringdir
  5433  1559  00C9               	movwf	??_fround+3
  5434  155A  160A  118A  200A  160A  118A  	fcall	stringdir
  5435  155F  00CA               	movwf	??_fround+4
  5436  1560  084A               	movf	??_fround+4,w
  5437  1561  00AF               	movwf	___flmul@a+3
  5438  1562  0849               	movf	??_fround+3,w
  5439  1563  00AE               	movwf	___flmul@a+2
  5440  1564  0848               	movf	??_fround+2,w
  5441  1565  00AD               	movwf	___flmul@a+1
  5442  1566  0847               	movf	??_fround+1,w
  5443  1567  00AC               	movwf	___flmul@a
  5444  1568  120A  158A  213C  160A  118A  	fcall	___flmul
  5445  156D  1283               	bcf	3,5	;RP0=0, select bank0
  5446  156E  1303               	bcf	3,6	;RP1=0, select bank0
  5447  156F  082B               	movf	?___flmul+3,w
  5448  1570  00C5               	movwf	?_fround+3
  5449  1571  082A               	movf	?___flmul+2,w
  5450  1572  00C4               	movwf	?_fround+2
  5451  1573  0829               	movf	?___flmul+1,w
  5452  1574  00C3               	movwf	?_fround+1
  5453  1575  0828               	movf	?___flmul,w
  5454  1576  00C2               	movwf	?_fround
  5455  1577                     l239:	
  5456  1577  0008               	return
  5457  1578                     __end_of_fround:	
  5458                           
  5459                           	psect	text9
  5460  1BF2                     __ptext9:	
  5461 ;; *************** function ___lwmod *****************
  5462 ;; Defined at:
  5463 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  5464 ;; Parameters:    Size  Location     Type
  5465 ;;  divisor         2    2[COMMON] unsigned int 
  5466 ;;  dividend        2    4[COMMON] unsigned int 
  5467 ;; Auto vars:     Size  Location     Type
  5468 ;;  counter         1    7[COMMON] unsigned char 
  5469 ;; Return value:  Size  Location     Type
  5470 ;;                  2    2[COMMON] unsigned int 
  5471 ;; Registers used:
  5472 ;;		wreg, status,2, status,0
  5473 ;; Tracked objects:
  5474 ;;		On entry : 0/0
  5475 ;;		On exit  : 0/0
  5476 ;;		Unchanged: 0/0
  5477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5478 ;;      Params:         4       0       0       0       0
  5479 ;;      Locals:         1       0       0       0       0
  5480 ;;      Temps:          1       0       0       0       0
  5481 ;;      Totals:         6       0       0       0       0
  5482 ;;Total ram usage:        6 bytes
  5483 ;; Hardware stack levels used:    1
  5484 ;; Hardware stack levels required when called:    1
  5485 ;; This function calls:
  5486 ;;		Nothing
  5487 ;; This function is called by:
  5488 ;;		_fround
  5489 ;; This function uses a non-reentrant model
  5490 ;;
  5491                           
  5492                           
  5493                           ;psect for function ___lwmod
  5494  1BF2                     ___lwmod:	
  5495  1BF2                     l2272:	
  5496                           ;incstack = 0
  5497                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5498                           
  5499  1BF2  0872               	movf	___lwmod@divisor,w
  5500  1BF3  0473               	iorwf	___lwmod@divisor+1,w
  5501  1BF4  1903               	btfsc	3,2
  5502  1BF5  2BF7               	goto	u3011
  5503  1BF6  2BF8               	goto	u3010
  5504  1BF7                     u3011:	
  5505  1BF7  2C27               	goto	l2290
  5506  1BF8                     u3010:	
  5507  1BF8                     l2274:	
  5508  1BF8  01F7               	clrf	___lwmod@counter
  5509  1BF9  0AF7               	incf	___lwmod@counter,f
  5510  1BFA  2C06               	goto	l2280
  5511  1BFB                     l2276:	
  5512  1BFB  3001               	movlw	1
  5513  1BFC                     u3025:	
  5514  1BFC  1003               	clrc
  5515  1BFD  0DF2               	rlf	___lwmod@divisor,f
  5516  1BFE  0DF3               	rlf	___lwmod@divisor+1,f
  5517  1BFF  3EFF               	addlw	-1
  5518  1C00  1D03               	skipz
  5519  1C01  2BFC               	goto	u3025
  5520  1C02                     l2278:	
  5521  1C02  3001               	movlw	1
  5522  1C03  00F6               	movwf	??___lwmod
  5523  1C04  0876               	movf	??___lwmod,w
  5524  1C05  07F7               	addwf	___lwmod@counter,f
  5525  1C06                     l2280:	
  5526  1C06  1FF3               	btfss	___lwmod@divisor+1,7
  5527  1C07  2C09               	goto	u3031
  5528  1C08  2C0A               	goto	u3030
  5529  1C09                     u3031:	
  5530  1C09  2BFB               	goto	l2276
  5531  1C0A                     u3030:	
  5532  1C0A                     l2282:	
  5533  1C0A  0873               	movf	___lwmod@divisor+1,w
  5534  1C0B  0275               	subwf	___lwmod@dividend+1,w
  5535  1C0C  1D03               	skipz
  5536  1C0D  2C10               	goto	u3045
  5537  1C0E  0872               	movf	___lwmod@divisor,w
  5538  1C0F  0274               	subwf	___lwmod@dividend,w
  5539  1C10                     u3045:	
  5540  1C10  1C03               	skipc
  5541  1C11  2C13               	goto	u3041
  5542  1C12  2C14               	goto	u3040
  5543  1C13                     u3041:	
  5544  1C13  2C1A               	goto	l2286
  5545  1C14                     u3040:	
  5546  1C14                     l2284:	
  5547  1C14  0872               	movf	___lwmod@divisor,w
  5548  1C15  02F4               	subwf	___lwmod@dividend,f
  5549  1C16  0873               	movf	___lwmod@divisor+1,w
  5550  1C17  1C03               	skipc
  5551  1C18  03F5               	decf	___lwmod@dividend+1,f
  5552  1C19  02F5               	subwf	___lwmod@dividend+1,f
  5553  1C1A                     l2286:	
  5554  1C1A  3001               	movlw	1
  5555  1C1B                     u3055:	
  5556  1C1B  1003               	clrc
  5557  1C1C  0CF3               	rrf	___lwmod@divisor+1,f
  5558  1C1D  0CF2               	rrf	___lwmod@divisor,f
  5559  1C1E  3EFF               	addlw	-1
  5560  1C1F  1D03               	skipz
  5561  1C20  2C1B               	goto	u3055
  5562  1C21                     l2288:	
  5563  1C21  3001               	movlw	1
  5564  1C22  02F7               	subwf	___lwmod@counter,f
  5565  1C23  1D03               	btfss	3,2
  5566  1C24  2C26               	goto	u3061
  5567  1C25  2C27               	goto	u3060
  5568  1C26                     u3061:	
  5569  1C26  2C0A               	goto	l2282
  5570  1C27                     u3060:	
  5571  1C27                     l2290:	
  5572  1C27  0875               	movf	___lwmod@dividend+1,w
  5573  1C28  00F3               	movwf	?___lwmod+1
  5574  1C29  0874               	movf	___lwmod@dividend,w
  5575  1C2A  00F2               	movwf	?___lwmod
  5576  1C2B                     l641:	
  5577  1C2B  0008               	return
  5578  1C2C                     __end_of___lwmod:	
  5579                           
  5580                           	psect	text10
  5581  1C72                     __ptext10:	
  5582 ;; *************** function ___lwdiv *****************
  5583 ;; Defined at:
  5584 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  5585 ;; Parameters:    Size  Location     Type
  5586 ;;  divisor         2    0[BANK0 ] unsigned int 
  5587 ;;  dividend        2    2[BANK0 ] unsigned int 
  5588 ;; Auto vars:     Size  Location     Type
  5589 ;;  quotient        2    5[BANK0 ] unsigned int 
  5590 ;;  counter         1    4[BANK0 ] unsigned char 
  5591 ;; Return value:  Size  Location     Type
  5592 ;;                  2    0[BANK0 ] unsigned int 
  5593 ;; Registers used:
  5594 ;;		wreg, status,2, status,0
  5595 ;; Tracked objects:
  5596 ;;		On entry : 0/0
  5597 ;;		On exit  : 0/0
  5598 ;;		Unchanged: 0/0
  5599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5600 ;;      Params:         0       4       0       0       0
  5601 ;;      Locals:         0       3       0       0       0
  5602 ;;      Temps:          1       0       0       0       0
  5603 ;;      Totals:         1       7       0       0       0
  5604 ;;Total ram usage:        8 bytes
  5605 ;; Hardware stack levels used:    1
  5606 ;; Hardware stack levels required when called:    1
  5607 ;; This function calls:
  5608 ;;		Nothing
  5609 ;; This function is called by:
  5610 ;;		_fround
  5611 ;; This function uses a non-reentrant model
  5612 ;;
  5613                           
  5614                           
  5615                           ;psect for function ___lwdiv
  5616  1C72                     ___lwdiv:	
  5617  1C72                     l3394:	
  5618                           ;incstack = 0
  5619                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5620                           
  5621  1C72  1283               	bcf	3,5	;RP0=0, select bank0
  5622  1C73  1303               	bcf	3,6	;RP1=0, select bank0
  5623  1C74  01A5               	clrf	___lwdiv@quotient
  5624  1C75  01A6               	clrf	___lwdiv@quotient+1
  5625  1C76                     l3396:	
  5626  1C76  0820               	movf	___lwdiv@divisor,w
  5627  1C77  0421               	iorwf	___lwdiv@divisor+1,w
  5628  1C78  1903               	btfsc	3,2
  5629  1C79  2C7B               	goto	u5431
  5630  1C7A  2C7C               	goto	u5430
  5631  1C7B                     u5431:	
  5632  1C7B  2CB3               	goto	l3416
  5633  1C7C                     u5430:	
  5634  1C7C                     l3398:	
  5635  1C7C  01A4               	clrf	___lwdiv@counter
  5636  1C7D  0AA4               	incf	___lwdiv@counter,f
  5637  1C7E  2C8A               	goto	l3404
  5638  1C7F                     l3400:	
  5639  1C7F  3001               	movlw	1
  5640  1C80                     u5445:	
  5641  1C80  1003               	clrc
  5642  1C81  0DA0               	rlf	___lwdiv@divisor,f
  5643  1C82  0DA1               	rlf	___lwdiv@divisor+1,f
  5644  1C83  3EFF               	addlw	-1
  5645  1C84  1D03               	skipz
  5646  1C85  2C80               	goto	u5445
  5647  1C86                     l3402:	
  5648  1C86  3001               	movlw	1
  5649  1C87  00F8               	movwf	??___lwdiv
  5650  1C88  0878               	movf	??___lwdiv,w
  5651  1C89  07A4               	addwf	___lwdiv@counter,f
  5652  1C8A                     l3404:	
  5653  1C8A  1FA1               	btfss	___lwdiv@divisor+1,7
  5654  1C8B  2C8D               	goto	u5451
  5655  1C8C  2C8E               	goto	u5450
  5656  1C8D                     u5451:	
  5657  1C8D  2C7F               	goto	l3400
  5658  1C8E                     u5450:	
  5659  1C8E                     l3406:	
  5660  1C8E  3001               	movlw	1
  5661  1C8F                     u5465:	
  5662  1C8F  1003               	clrc
  5663  1C90  0DA5               	rlf	___lwdiv@quotient,f
  5664  1C91  0DA6               	rlf	___lwdiv@quotient+1,f
  5665  1C92  3EFF               	addlw	-1
  5666  1C93  1D03               	skipz
  5667  1C94  2C8F               	goto	u5465
  5668  1C95  0821               	movf	___lwdiv@divisor+1,w
  5669  1C96  0223               	subwf	___lwdiv@dividend+1,w
  5670  1C97  1D03               	skipz
  5671  1C98  2C9B               	goto	u5475
  5672  1C99  0820               	movf	___lwdiv@divisor,w
  5673  1C9A  0222               	subwf	___lwdiv@dividend,w
  5674  1C9B                     u5475:	
  5675  1C9B  1C03               	skipc
  5676  1C9C  2C9E               	goto	u5471
  5677  1C9D  2C9F               	goto	u5470
  5678  1C9E                     u5471:	
  5679  1C9E  2CA6               	goto	l3412
  5680  1C9F                     u5470:	
  5681  1C9F                     l3408:	
  5682  1C9F  0820               	movf	___lwdiv@divisor,w
  5683  1CA0  02A2               	subwf	___lwdiv@dividend,f
  5684  1CA1  0821               	movf	___lwdiv@divisor+1,w
  5685  1CA2  1C03               	skipc
  5686  1CA3  03A3               	decf	___lwdiv@dividend+1,f
  5687  1CA4  02A3               	subwf	___lwdiv@dividend+1,f
  5688  1CA5                     l3410:	
  5689  1CA5  1425               	bsf	___lwdiv@quotient,0
  5690  1CA6                     l3412:	
  5691  1CA6  3001               	movlw	1
  5692  1CA7                     u5485:	
  5693  1CA7  1003               	clrc
  5694  1CA8  0CA1               	rrf	___lwdiv@divisor+1,f
  5695  1CA9  0CA0               	rrf	___lwdiv@divisor,f
  5696  1CAA  3EFF               	addlw	-1
  5697  1CAB  1D03               	skipz
  5698  1CAC  2CA7               	goto	u5485
  5699  1CAD                     l3414:	
  5700  1CAD  3001               	movlw	1
  5701  1CAE  02A4               	subwf	___lwdiv@counter,f
  5702  1CAF  1D03               	btfss	3,2
  5703  1CB0  2CB2               	goto	u5491
  5704  1CB1  2CB3               	goto	u5490
  5705  1CB2                     u5491:	
  5706  1CB2  2C8E               	goto	l3406
  5707  1CB3                     u5490:	
  5708  1CB3                     l3416:	
  5709  1CB3  0826               	movf	___lwdiv@quotient+1,w
  5710  1CB4  00A1               	movwf	?___lwdiv+1
  5711  1CB5  0825               	movf	___lwdiv@quotient,w
  5712  1CB6  00A0               	movwf	?___lwdiv
  5713  1CB7                     l631:	
  5714  1CB7  0008               	return
  5715  1CB8                     __end_of___lwdiv:	
  5716                           
  5717                           	psect	text11
  5718  093C                     __ptext11:	
  5719 ;; *************** function ___flmul *****************
  5720 ;; Defined at:
  5721 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcmul.c"
  5722 ;; Parameters:    Size  Location     Type
  5723 ;;  b               4    8[BANK0 ] unsigned int 
  5724 ;;  a               4   12[BANK0 ] unsigned int 
  5725 ;; Auto vars:     Size  Location     Type
  5726 ;;  prod            4   28[BANK0 ] struct .
  5727 ;;  grs             4   22[BANK0 ] unsigned long 
  5728 ;;  temp            2   32[BANK0 ] struct .
  5729 ;;  bexp            1   27[BANK0 ] unsigned char 
  5730 ;;  aexp            1   26[BANK0 ] unsigned char 
  5731 ;;  sign            1   21[BANK0 ] unsigned char 
  5732 ;; Return value:  Size  Location     Type
  5733 ;;                  4    8[BANK0 ] unsigned char 
  5734 ;; Registers used:
  5735 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5736 ;; Tracked objects:
  5737 ;;		On entry : 0/0
  5738 ;;		On exit  : 0/0
  5739 ;;		Unchanged: 0/0
  5740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5741 ;;      Params:         0       8       0       0       0
  5742 ;;      Locals:         0      13       0       0       0
  5743 ;;      Temps:          0       5       0       0       0
  5744 ;;      Totals:         0      26       0       0       0
  5745 ;;Total ram usage:       26 bytes
  5746 ;; Hardware stack levels used:    1
  5747 ;; Hardware stack levels required when called:    2
  5748 ;; This function calls:
  5749 ;;		__Umul8_16
  5750 ;; This function is called by:
  5751 ;;		_fround
  5752 ;;		_scale
  5753 ;;		_sprintf
  5754 ;; This function uses a non-reentrant model
  5755 ;;
  5756                           
  5757                           
  5758                           ;psect for function ___flmul
  5759  093C                     ___flmul:	
  5760  093C                     l2488:	
  5761                           ;incstack = 0
  5762                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5763                           
  5764  093C  1283               	bcf	3,5	;RP0=0, select bank0
  5765  093D  1303               	bcf	3,6	;RP1=0, select bank0
  5766  093E  082B               	movf	___flmul@b+3,w
  5767  093F  3980               	andlw	128
  5768  0940  00B0               	movwf	??___flmul
  5769  0941  0830               	movf	??___flmul,w
  5770  0942  00B5               	movwf	___flmul@sign
  5771  0943                     l2490:	
  5772  0943  082B               	movf	___flmul@b+3,w
  5773  0944  00B0               	movwf	??___flmul
  5774  0945  0730               	addwf	??___flmul,w
  5775  0946  00B1               	movwf	??___flmul+1
  5776  0947  0831               	movf	??___flmul+1,w
  5777  0948  00BB               	movwf	___flmul@bexp
  5778  0949                     l2492:	
  5779  0949  1FAA               	btfss	___flmul@b+2,7
  5780  094A  294C               	goto	u3531
  5781  094B  294D               	goto	u3530
  5782  094C                     u3531:	
  5783  094C  294E               	goto	l2496
  5784  094D                     u3530:	
  5785  094D                     l2494:	
  5786  094D  143B               	bsf	___flmul@bexp,0
  5787  094E                     l2496:	
  5788  094E  083B               	movf	___flmul@bexp,w
  5789  094F  1903               	btfsc	3,2
  5790  0950  2952               	goto	u3541
  5791  0951  2953               	goto	u3540
  5792  0952                     u3541:	
  5793  0952  2962               	goto	l2504
  5794  0953                     u3540:	
  5795  0953                     l2498:	
  5796  0953  0A3B               	incf	___flmul@bexp,w
  5797  0954  1D03               	btfss	3,2
  5798  0955  2957               	goto	u3551
  5799  0956  2958               	goto	u3550
  5800  0957                     u3551:	
  5801  0957  2960               	goto	l2502
  5802  0958                     u3550:	
  5803  0958                     l2500:	
  5804  0958  3000               	movlw	0
  5805  0959  00AB               	movwf	___flmul@b+3
  5806  095A  3000               	movlw	0
  5807  095B  00AA               	movwf	___flmul@b+2
  5808  095C  3000               	movlw	0
  5809  095D  00A9               	movwf	___flmul@b+1
  5810  095E  3000               	movlw	0
  5811  095F  00A8               	movwf	___flmul@b
  5812  0960                     l2502:	
  5813  0960  17AA               	bsf	___flmul@b+2,7
  5814  0961  296A               	goto	l2506
  5815  0962                     l2504:	
  5816  0962  3000               	movlw	0
  5817  0963  00AB               	movwf	___flmul@b+3
  5818  0964  3000               	movlw	0
  5819  0965  00AA               	movwf	___flmul@b+2
  5820  0966  3000               	movlw	0
  5821  0967  00A9               	movwf	___flmul@b+1
  5822  0968  3000               	movlw	0
  5823  0969  00A8               	movwf	___flmul@b
  5824  096A                     l2506:	
  5825  096A  082F               	movf	___flmul@a+3,w
  5826  096B  3980               	andlw	128
  5827  096C  00B0               	movwf	??___flmul
  5828  096D  0830               	movf	??___flmul,w
  5829  096E  06B5               	xorwf	___flmul@sign,f
  5830  096F                     l2508:	
  5831  096F  082F               	movf	___flmul@a+3,w
  5832  0970  00B0               	movwf	??___flmul
  5833  0971  0730               	addwf	??___flmul,w
  5834  0972  00B1               	movwf	??___flmul+1
  5835  0973  0831               	movf	??___flmul+1,w
  5836  0974  00BA               	movwf	___flmul@aexp
  5837  0975                     l2510:	
  5838  0975  1FAE               	btfss	___flmul@a+2,7
  5839  0976  2978               	goto	u3561
  5840  0977  2979               	goto	u3560
  5841  0978                     u3561:	
  5842  0978  297A               	goto	l2514
  5843  0979                     u3560:	
  5844  0979                     l2512:	
  5845  0979  143A               	bsf	___flmul@aexp,0
  5846  097A                     l2514:	
  5847  097A  083A               	movf	___flmul@aexp,w
  5848  097B  1903               	btfsc	3,2
  5849  097C  297E               	goto	u3571
  5850  097D  297F               	goto	u3570
  5851  097E                     u3571:	
  5852  097E  298E               	goto	l2522
  5853  097F                     u3570:	
  5854  097F                     l2516:	
  5855  097F  0A3A               	incf	___flmul@aexp,w
  5856  0980  1D03               	btfss	3,2
  5857  0981  2983               	goto	u3581
  5858  0982  2984               	goto	u3580
  5859  0983                     u3581:	
  5860  0983  298C               	goto	l2520
  5861  0984                     u3580:	
  5862  0984                     l2518:	
  5863  0984  3000               	movlw	0
  5864  0985  00AF               	movwf	___flmul@a+3
  5865  0986  3000               	movlw	0
  5866  0987  00AE               	movwf	___flmul@a+2
  5867  0988  3000               	movlw	0
  5868  0989  00AD               	movwf	___flmul@a+1
  5869  098A  3000               	movlw	0
  5870  098B  00AC               	movwf	___flmul@a
  5871  098C                     l2520:	
  5872  098C  17AE               	bsf	___flmul@a+2,7
  5873  098D  2996               	goto	l2524
  5874  098E                     l2522:	
  5875  098E  3000               	movlw	0
  5876  098F  00AF               	movwf	___flmul@a+3
  5877  0990  3000               	movlw	0
  5878  0991  00AE               	movwf	___flmul@a+2
  5879  0992  3000               	movlw	0
  5880  0993  00AD               	movwf	___flmul@a+1
  5881  0994  3000               	movlw	0
  5882  0995  00AC               	movwf	___flmul@a
  5883  0996                     l2524:	
  5884  0996  083A               	movf	___flmul@aexp,w
  5885  0997  1903               	btfsc	3,2
  5886  0998  299A               	goto	u3591
  5887  0999  299B               	goto	u3590
  5888  099A                     u3591:	
  5889  099A  29A0               	goto	l2528
  5890  099B                     u3590:	
  5891  099B                     l2526:	
  5892  099B  083B               	movf	___flmul@bexp,w
  5893  099C  1D03               	btfss	3,2
  5894  099D  299F               	goto	u3601
  5895  099E  29A0               	goto	u3600
  5896  099F                     u3601:	
  5897  099F  29A9               	goto	l2532
  5898  09A0                     u3600:	
  5899  09A0                     l2528:	
  5900  09A0  3000               	movlw	0
  5901  09A1  00AB               	movwf	?___flmul+3
  5902  09A2  3000               	movlw	0
  5903  09A3  00AA               	movwf	?___flmul+2
  5904  09A4  3000               	movlw	0
  5905  09A5  00A9               	movwf	?___flmul+1
  5906  09A6  3000               	movlw	0
  5907  09A7  00A8               	movwf	?___flmul
  5908  09A8  2C9C               	goto	l748
  5909  09A9                     l2532:	
  5910  09A9  0828               	movf	___flmul@b,w
  5911  09AA  00B0               	movwf	??___flmul
  5912  09AB  0830               	movf	??___flmul,w
  5913  09AC  00F2               	movwf	__Umul8_16@multiplicand
  5914  09AD  082E               	movf	___flmul@a+2,w
  5915  09AE  160A  158A  23A3  120A  158A  	fcall	__Umul8_16
  5916  09B3  0873               	movf	?__Umul8_16+1,w
  5917  09B4  1283               	bcf	3,5	;RP0=0, select bank0
  5918  09B5  1303               	bcf	3,6	;RP1=0, select bank0
  5919  09B6  00C1               	movwf	___flmul@temp+1
  5920  09B7  0872               	movf	?__Umul8_16,w
  5921  09B8  00C0               	movwf	___flmul@temp
  5922  09B9                     l2534:	
  5923  09B9  0840               	movf	___flmul@temp,w
  5924  09BA  00B0               	movwf	??___flmul
  5925  09BB  01B1               	clrf	??___flmul+1
  5926  09BC  01B2               	clrf	??___flmul+2
  5927  09BD  01B3               	clrf	??___flmul+3
  5928  09BE  0833               	movf	??___flmul+3,w
  5929  09BF  00B9               	movwf	___flmul@grs+3
  5930  09C0  0832               	movf	??___flmul+2,w
  5931  09C1  00B8               	movwf	___flmul@grs+2
  5932  09C2  0831               	movf	??___flmul+1,w
  5933  09C3  00B7               	movwf	___flmul@grs+1
  5934  09C4  0830               	movf	??___flmul,w
  5935  09C5  00B6               	movwf	___flmul@grs
  5936  09C6                     l2536:	
  5937  09C6  0841               	movf	___flmul@temp+1,w
  5938  09C7  00B0               	movwf	??___flmul
  5939  09C8  01B1               	clrf	??___flmul+1
  5940  09C9  01B2               	clrf	??___flmul+2
  5941  09CA  01B3               	clrf	??___flmul+3
  5942  09CB  0833               	movf	??___flmul+3,w
  5943  09CC  00BF               	movwf	___flmul@prod+3
  5944  09CD  0832               	movf	??___flmul+2,w
  5945  09CE  00BE               	movwf	___flmul@prod+2
  5946  09CF  0831               	movf	??___flmul+1,w
  5947  09D0  00BD               	movwf	___flmul@prod+1
  5948  09D1  0830               	movf	??___flmul,w
  5949  09D2  00BC               	movwf	___flmul@prod
  5950  09D3  0829               	movf	___flmul@b+1,w
  5951  09D4  00B0               	movwf	??___flmul
  5952  09D5  0830               	movf	??___flmul,w
  5953  09D6  00F2               	movwf	__Umul8_16@multiplicand
  5954  09D7  082D               	movf	___flmul@a+1,w
  5955  09D8  160A  158A  23A3  120A  158A  	fcall	__Umul8_16
  5956  09DD  0873               	movf	?__Umul8_16+1,w
  5957  09DE  1283               	bcf	3,5	;RP0=0, select bank0
  5958  09DF  1303               	bcf	3,6	;RP1=0, select bank0
  5959  09E0  00C1               	movwf	___flmul@temp+1
  5960  09E1  0872               	movf	?__Umul8_16,w
  5961  09E2  00C0               	movwf	___flmul@temp
  5962  09E3                     l2538:	
  5963  09E3  0840               	movf	___flmul@temp,w
  5964  09E4  00B0               	movwf	??___flmul
  5965  09E5  01B1               	clrf	??___flmul+1
  5966  09E6  01B2               	clrf	??___flmul+2
  5967  09E7  01B3               	clrf	??___flmul+3
  5968  09E8  0830               	movf	??___flmul,w
  5969  09E9  07B6               	addwf	___flmul@grs,f
  5970  09EA  0831               	movf	??___flmul+1,w
  5971  09EB  1103               	clrz
  5972  09EC  1803               	skipnc
  5973  09ED  3E01               	addlw	1
  5974  09EE  1903               	skipnz
  5975  09EF  29F1               	goto	u3611
  5976  09F0  07B7               	addwf	___flmul@grs+1,f
  5977  09F1                     u3611:	
  5978  09F1  0832               	movf	??___flmul+2,w
  5979  09F2  1103               	clrz
  5980  09F3  1803               	skipnc
  5981  09F4  3E01               	addlw	1
  5982  09F5  1903               	skipnz
  5983  09F6  29F8               	goto	u3612
  5984  09F7  07B8               	addwf	___flmul@grs+2,f
  5985  09F8                     u3612:	
  5986  09F8  0833               	movf	??___flmul+3,w
  5987  09F9  1103               	clrz
  5988  09FA  1803               	skipnc
  5989  09FB  3E01               	addlw	1
  5990  09FC  1903               	skipnz
  5991  09FD  29FF               	goto	u3613
  5992  09FE  07B9               	addwf	___flmul@grs+3,f
  5993  09FF                     u3613:	
  5994  09FF                     l2540:	
  5995  09FF  0841               	movf	___flmul@temp+1,w
  5996  0A00  00B0               	movwf	??___flmul
  5997  0A01  01B1               	clrf	??___flmul+1
  5998  0A02  01B2               	clrf	??___flmul+2
  5999  0A03  01B3               	clrf	??___flmul+3
  6000  0A04  0830               	movf	??___flmul,w
  6001  0A05  07BC               	addwf	___flmul@prod,f
  6002  0A06  0831               	movf	??___flmul+1,w
  6003  0A07  1103               	clrz
  6004  0A08  1803               	skipnc
  6005  0A09  3E01               	addlw	1
  6006  0A0A  1903               	skipnz
  6007  0A0B  2A0D               	goto	u3621
  6008  0A0C  07BD               	addwf	___flmul@prod+1,f
  6009  0A0D                     u3621:	
  6010  0A0D  0832               	movf	??___flmul+2,w
  6011  0A0E  1103               	clrz
  6012  0A0F  1803               	skipnc
  6013  0A10  3E01               	addlw	1
  6014  0A11  1903               	skipnz
  6015  0A12  2A14               	goto	u3622
  6016  0A13  07BE               	addwf	___flmul@prod+2,f
  6017  0A14                     u3622:	
  6018  0A14  0833               	movf	??___flmul+3,w
  6019  0A15  1103               	clrz
  6020  0A16  1803               	skipnc
  6021  0A17  3E01               	addlw	1
  6022  0A18  1903               	skipnz
  6023  0A19  2A1B               	goto	u3623
  6024  0A1A  07BF               	addwf	___flmul@prod+3,f
  6025  0A1B                     u3623:	
  6026  0A1B  082A               	movf	___flmul@b+2,w
  6027  0A1C  00B0               	movwf	??___flmul
  6028  0A1D  0830               	movf	??___flmul,w
  6029  0A1E  00F2               	movwf	__Umul8_16@multiplicand
  6030  0A1F  082C               	movf	___flmul@a,w
  6031  0A20  160A  158A  23A3  120A  158A  	fcall	__Umul8_16
  6032  0A25  0873               	movf	?__Umul8_16+1,w
  6033  0A26  1283               	bcf	3,5	;RP0=0, select bank0
  6034  0A27  1303               	bcf	3,6	;RP1=0, select bank0
  6035  0A28  00C1               	movwf	___flmul@temp+1
  6036  0A29  0872               	movf	?__Umul8_16,w
  6037  0A2A  00C0               	movwf	___flmul@temp
  6038  0A2B                     l2542:	
  6039  0A2B  0840               	movf	___flmul@temp,w
  6040  0A2C  00B0               	movwf	??___flmul
  6041  0A2D  01B1               	clrf	??___flmul+1
  6042  0A2E  01B2               	clrf	??___flmul+2
  6043  0A2F  01B3               	clrf	??___flmul+3
  6044  0A30  0830               	movf	??___flmul,w
  6045  0A31  07B6               	addwf	___flmul@grs,f
  6046  0A32  0831               	movf	??___flmul+1,w
  6047  0A33  1103               	clrz
  6048  0A34  1803               	skipnc
  6049  0A35  3E01               	addlw	1
  6050  0A36  1903               	skipnz
  6051  0A37  2A39               	goto	u3631
  6052  0A38  07B7               	addwf	___flmul@grs+1,f
  6053  0A39                     u3631:	
  6054  0A39  0832               	movf	??___flmul+2,w
  6055  0A3A  1103               	clrz
  6056  0A3B  1803               	skipnc
  6057  0A3C  3E01               	addlw	1
  6058  0A3D  1903               	skipnz
  6059  0A3E  2A40               	goto	u3632
  6060  0A3F  07B8               	addwf	___flmul@grs+2,f
  6061  0A40                     u3632:	
  6062  0A40  0833               	movf	??___flmul+3,w
  6063  0A41  1103               	clrz
  6064  0A42  1803               	skipnc
  6065  0A43  3E01               	addlw	1
  6066  0A44  1903               	skipnz
  6067  0A45  2A47               	goto	u3633
  6068  0A46  07B9               	addwf	___flmul@grs+3,f
  6069  0A47                     u3633:	
  6070  0A47                     l2544:	
  6071  0A47  0841               	movf	___flmul@temp+1,w
  6072  0A48  00B0               	movwf	??___flmul
  6073  0A49  01B1               	clrf	??___flmul+1
  6074  0A4A  01B2               	clrf	??___flmul+2
  6075  0A4B  01B3               	clrf	??___flmul+3
  6076  0A4C  0830               	movf	??___flmul,w
  6077  0A4D  07BC               	addwf	___flmul@prod,f
  6078  0A4E  0831               	movf	??___flmul+1,w
  6079  0A4F  1103               	clrz
  6080  0A50  1803               	skipnc
  6081  0A51  3E01               	addlw	1
  6082  0A52  1903               	skipnz
  6083  0A53  2A55               	goto	u3641
  6084  0A54  07BD               	addwf	___flmul@prod+1,f
  6085  0A55                     u3641:	
  6086  0A55  0832               	movf	??___flmul+2,w
  6087  0A56  1103               	clrz
  6088  0A57  1803               	skipnc
  6089  0A58  3E01               	addlw	1
  6090  0A59  1903               	skipnz
  6091  0A5A  2A5C               	goto	u3642
  6092  0A5B  07BE               	addwf	___flmul@prod+2,f
  6093  0A5C                     u3642:	
  6094  0A5C  0833               	movf	??___flmul+3,w
  6095  0A5D  1103               	clrz
  6096  0A5E  1803               	skipnc
  6097  0A5F  3E01               	addlw	1
  6098  0A60  1903               	skipnz
  6099  0A61  2A63               	goto	u3643
  6100  0A62  07BF               	addwf	___flmul@prod+3,f
  6101  0A63                     u3643:	
  6102  0A63                     l2546:	
  6103  0A63  3008               	movlw	8
  6104  0A64  00B0               	movwf	??___flmul
  6105  0A65                     u3655:	
  6106  0A65  1003               	clrc
  6107  0A66  0DB6               	rlf	___flmul@grs,f
  6108  0A67  0DB7               	rlf	___flmul@grs+1,f
  6109  0A68  0DB8               	rlf	___flmul@grs+2,f
  6110  0A69  0DB9               	rlf	___flmul@grs+3,f
  6111  0A6A  0BB0               	decfsz	??___flmul,f
  6112  0A6B  2A65               	goto	u3655
  6113  0A6C                     l2548:	
  6114  0A6C  0829               	movf	___flmul@b+1,w
  6115  0A6D  00B0               	movwf	??___flmul
  6116  0A6E  0830               	movf	??___flmul,w
  6117  0A6F  00F2               	movwf	__Umul8_16@multiplicand
  6118  0A70  082C               	movf	___flmul@a,w
  6119  0A71  160A  158A  23A3  120A  158A  	fcall	__Umul8_16
  6120  0A76  0873               	movf	?__Umul8_16+1,w
  6121  0A77  1283               	bcf	3,5	;RP0=0, select bank0
  6122  0A78  1303               	bcf	3,6	;RP1=0, select bank0
  6123  0A79  00C1               	movwf	___flmul@temp+1
  6124  0A7A  0872               	movf	?__Umul8_16,w
  6125  0A7B  00C0               	movwf	___flmul@temp
  6126  0A7C                     l2550:	
  6127  0A7C  0840               	movf	___flmul@temp,w
  6128  0A7D  00B0               	movwf	??___flmul
  6129  0A7E  0841               	movf	___flmul@temp+1,w
  6130  0A7F  00B1               	movwf	??___flmul+1
  6131  0A80  01B2               	clrf	??___flmul+2
  6132  0A81  01B3               	clrf	??___flmul+3
  6133  0A82  0830               	movf	??___flmul,w
  6134  0A83  07B6               	addwf	___flmul@grs,f
  6135  0A84  0831               	movf	??___flmul+1,w
  6136  0A85  1103               	clrz
  6137  0A86  1803               	skipnc
  6138  0A87  3E01               	addlw	1
  6139  0A88  1903               	skipnz
  6140  0A89  2A8B               	goto	u3661
  6141  0A8A  07B7               	addwf	___flmul@grs+1,f
  6142  0A8B                     u3661:	
  6143  0A8B  0832               	movf	??___flmul+2,w
  6144  0A8C  1103               	clrz
  6145  0A8D  1803               	skipnc
  6146  0A8E  3E01               	addlw	1
  6147  0A8F  1903               	skipnz
  6148  0A90  2A92               	goto	u3662
  6149  0A91  07B8               	addwf	___flmul@grs+2,f
  6150  0A92                     u3662:	
  6151  0A92  0833               	movf	??___flmul+3,w
  6152  0A93  1103               	clrz
  6153  0A94  1803               	skipnc
  6154  0A95  3E01               	addlw	1
  6155  0A96  1903               	skipnz
  6156  0A97  2A99               	goto	u3663
  6157  0A98  07B9               	addwf	___flmul@grs+3,f
  6158  0A99                     u3663:	
  6159  0A99                     l2552:	
  6160  0A99  0828               	movf	___flmul@b,w
  6161  0A9A  00B0               	movwf	??___flmul
  6162  0A9B  0830               	movf	??___flmul,w
  6163  0A9C  00F2               	movwf	__Umul8_16@multiplicand
  6164  0A9D  082D               	movf	___flmul@a+1,w
  6165  0A9E  160A  158A  23A3  120A  158A  	fcall	__Umul8_16
  6166  0AA3  0873               	movf	?__Umul8_16+1,w
  6167  0AA4  1283               	bcf	3,5	;RP0=0, select bank0
  6168  0AA5  1303               	bcf	3,6	;RP1=0, select bank0
  6169  0AA6  00C1               	movwf	___flmul@temp+1
  6170  0AA7  0872               	movf	?__Umul8_16,w
  6171  0AA8  00C0               	movwf	___flmul@temp
  6172  0AA9                     l2554:	
  6173  0AA9  0840               	movf	___flmul@temp,w
  6174  0AAA  00B0               	movwf	??___flmul
  6175  0AAB  0841               	movf	___flmul@temp+1,w
  6176  0AAC  00B1               	movwf	??___flmul+1
  6177  0AAD  01B2               	clrf	??___flmul+2
  6178  0AAE  01B3               	clrf	??___flmul+3
  6179  0AAF  0830               	movf	??___flmul,w
  6180  0AB0  07B6               	addwf	___flmul@grs,f
  6181  0AB1  0831               	movf	??___flmul+1,w
  6182  0AB2  1103               	clrz
  6183  0AB3  1803               	skipnc
  6184  0AB4  3E01               	addlw	1
  6185  0AB5  1903               	skipnz
  6186  0AB6  2AB8               	goto	u3671
  6187  0AB7  07B7               	addwf	___flmul@grs+1,f
  6188  0AB8                     u3671:	
  6189  0AB8  0832               	movf	??___flmul+2,w
  6190  0AB9  1103               	clrz
  6191  0ABA  1803               	skipnc
  6192  0ABB  3E01               	addlw	1
  6193  0ABC  1903               	skipnz
  6194  0ABD  2ABF               	goto	u3672
  6195  0ABE  07B8               	addwf	___flmul@grs+2,f
  6196  0ABF                     u3672:	
  6197  0ABF  0833               	movf	??___flmul+3,w
  6198  0AC0  1103               	clrz
  6199  0AC1  1803               	skipnc
  6200  0AC2  3E01               	addlw	1
  6201  0AC3  1903               	skipnz
  6202  0AC4  2AC6               	goto	u3673
  6203  0AC5  07B9               	addwf	___flmul@grs+3,f
  6204  0AC6                     u3673:	
  6205  0AC6                     l2556:	
  6206  0AC6  3008               	movlw	8
  6207  0AC7  00B0               	movwf	??___flmul
  6208  0AC8                     u3685:	
  6209  0AC8  1003               	clrc
  6210  0AC9  0DB6               	rlf	___flmul@grs,f
  6211  0ACA  0DB7               	rlf	___flmul@grs+1,f
  6212  0ACB  0DB8               	rlf	___flmul@grs+2,f
  6213  0ACC  0DB9               	rlf	___flmul@grs+3,f
  6214  0ACD  0BB0               	decfsz	??___flmul,f
  6215  0ACE  2AC8               	goto	u3685
  6216  0ACF  0828               	movf	___flmul@b,w
  6217  0AD0  00B0               	movwf	??___flmul
  6218  0AD1  0830               	movf	??___flmul,w
  6219  0AD2  00F2               	movwf	__Umul8_16@multiplicand
  6220  0AD3  082C               	movf	___flmul@a,w
  6221  0AD4  160A  158A  23A3  120A  158A  	fcall	__Umul8_16
  6222  0AD9  0873               	movf	?__Umul8_16+1,w
  6223  0ADA  1283               	bcf	3,5	;RP0=0, select bank0
  6224  0ADB  1303               	bcf	3,6	;RP1=0, select bank0
  6225  0ADC  00C1               	movwf	___flmul@temp+1
  6226  0ADD  0872               	movf	?__Umul8_16,w
  6227  0ADE  00C0               	movwf	___flmul@temp
  6228  0ADF                     l2558:	
  6229  0ADF  0840               	movf	___flmul@temp,w
  6230  0AE0  00B0               	movwf	??___flmul
  6231  0AE1  0841               	movf	___flmul@temp+1,w
  6232  0AE2  00B1               	movwf	??___flmul+1
  6233  0AE3  01B2               	clrf	??___flmul+2
  6234  0AE4  01B3               	clrf	??___flmul+3
  6235  0AE5  0830               	movf	??___flmul,w
  6236  0AE6  07B6               	addwf	___flmul@grs,f
  6237  0AE7  0831               	movf	??___flmul+1,w
  6238  0AE8  1103               	clrz
  6239  0AE9  1803               	skipnc
  6240  0AEA  3E01               	addlw	1
  6241  0AEB  1903               	skipnz
  6242  0AEC  2AEE               	goto	u3691
  6243  0AED  07B7               	addwf	___flmul@grs+1,f
  6244  0AEE                     u3691:	
  6245  0AEE  0832               	movf	??___flmul+2,w
  6246  0AEF  1103               	clrz
  6247  0AF0  1803               	skipnc
  6248  0AF1  3E01               	addlw	1
  6249  0AF2  1903               	skipnz
  6250  0AF3  2AF5               	goto	u3692
  6251  0AF4  07B8               	addwf	___flmul@grs+2,f
  6252  0AF5                     u3692:	
  6253  0AF5  0833               	movf	??___flmul+3,w
  6254  0AF6  1103               	clrz
  6255  0AF7  1803               	skipnc
  6256  0AF8  3E01               	addlw	1
  6257  0AF9  1903               	skipnz
  6258  0AFA  2AFC               	goto	u3693
  6259  0AFB  07B9               	addwf	___flmul@grs+3,f
  6260  0AFC                     u3693:	
  6261  0AFC                     l2560:	
  6262  0AFC  0829               	movf	___flmul@b+1,w
  6263  0AFD  00B0               	movwf	??___flmul
  6264  0AFE  0830               	movf	??___flmul,w
  6265  0AFF  00F2               	movwf	__Umul8_16@multiplicand
  6266  0B00  082E               	movf	___flmul@a+2,w
  6267  0B01  160A  158A  23A3  120A  158A  	fcall	__Umul8_16
  6268  0B06  0873               	movf	?__Umul8_16+1,w
  6269  0B07  1283               	bcf	3,5	;RP0=0, select bank0
  6270  0B08  1303               	bcf	3,6	;RP1=0, select bank0
  6271  0B09  00C1               	movwf	___flmul@temp+1
  6272  0B0A  0872               	movf	?__Umul8_16,w
  6273  0B0B  00C0               	movwf	___flmul@temp
  6274  0B0C  0840               	movf	___flmul@temp,w
  6275  0B0D  00B0               	movwf	??___flmul
  6276  0B0E  0841               	movf	___flmul@temp+1,w
  6277  0B0F  00B1               	movwf	??___flmul+1
  6278  0B10  01B2               	clrf	??___flmul+2
  6279  0B11  01B3               	clrf	??___flmul+3
  6280  0B12  0830               	movf	??___flmul,w
  6281  0B13  07BC               	addwf	___flmul@prod,f
  6282  0B14  0831               	movf	??___flmul+1,w
  6283  0B15  1103               	clrz
  6284  0B16  1803               	skipnc
  6285  0B17  3E01               	addlw	1
  6286  0B18  1903               	skipnz
  6287  0B19  2B1B               	goto	u3701
  6288  0B1A  07BD               	addwf	___flmul@prod+1,f
  6289  0B1B                     u3701:	
  6290  0B1B  0832               	movf	??___flmul+2,w
  6291  0B1C  1103               	clrz
  6292  0B1D  1803               	skipnc
  6293  0B1E  3E01               	addlw	1
  6294  0B1F  1903               	skipnz
  6295  0B20  2B22               	goto	u3702
  6296  0B21  07BE               	addwf	___flmul@prod+2,f
  6297  0B22                     u3702:	
  6298  0B22  0833               	movf	??___flmul+3,w
  6299  0B23  1103               	clrz
  6300  0B24  1803               	skipnc
  6301  0B25  3E01               	addlw	1
  6302  0B26  1903               	skipnz
  6303  0B27  2B29               	goto	u3703
  6304  0B28  07BF               	addwf	___flmul@prod+3,f
  6305  0B29                     u3703:	
  6306  0B29                     l2562:	
  6307  0B29  082A               	movf	___flmul@b+2,w
  6308  0B2A  00B0               	movwf	??___flmul
  6309  0B2B  0830               	movf	??___flmul,w
  6310  0B2C  00F2               	movwf	__Umul8_16@multiplicand
  6311  0B2D  082D               	movf	___flmul@a+1,w
  6312  0B2E  160A  158A  23A3  120A  158A  	fcall	__Umul8_16
  6313  0B33  0873               	movf	?__Umul8_16+1,w
  6314  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  6315  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  6316  0B36  00C1               	movwf	___flmul@temp+1
  6317  0B37  0872               	movf	?__Umul8_16,w
  6318  0B38  00C0               	movwf	___flmul@temp
  6319  0B39                     l2564:	
  6320  0B39  0840               	movf	___flmul@temp,w
  6321  0B3A  00B0               	movwf	??___flmul
  6322  0B3B  0841               	movf	___flmul@temp+1,w
  6323  0B3C  00B1               	movwf	??___flmul+1
  6324  0B3D  01B2               	clrf	??___flmul+2
  6325  0B3E  01B3               	clrf	??___flmul+3
  6326  0B3F  0830               	movf	??___flmul,w
  6327  0B40  07BC               	addwf	___flmul@prod,f
  6328  0B41  0831               	movf	??___flmul+1,w
  6329  0B42  1103               	clrz
  6330  0B43  1803               	skipnc
  6331  0B44  3E01               	addlw	1
  6332  0B45  1903               	skipnz
  6333  0B46  2B48               	goto	u3711
  6334  0B47  07BD               	addwf	___flmul@prod+1,f
  6335  0B48                     u3711:	
  6336  0B48  0832               	movf	??___flmul+2,w
  6337  0B49  1103               	clrz
  6338  0B4A  1803               	skipnc
  6339  0B4B  3E01               	addlw	1
  6340  0B4C  1903               	skipnz
  6341  0B4D  2B4F               	goto	u3712
  6342  0B4E  07BE               	addwf	___flmul@prod+2,f
  6343  0B4F                     u3712:	
  6344  0B4F  0833               	movf	??___flmul+3,w
  6345  0B50  1103               	clrz
  6346  0B51  1803               	skipnc
  6347  0B52  3E01               	addlw	1
  6348  0B53  1903               	skipnz
  6349  0B54  2B56               	goto	u3713
  6350  0B55  07BF               	addwf	___flmul@prod+3,f
  6351  0B56                     u3713:	
  6352  0B56  082A               	movf	___flmul@b+2,w
  6353  0B57  00B0               	movwf	??___flmul
  6354  0B58  0830               	movf	??___flmul,w
  6355  0B59  00F2               	movwf	__Umul8_16@multiplicand
  6356  0B5A  082E               	movf	___flmul@a+2,w
  6357  0B5B  160A  158A  23A3  120A  158A  	fcall	__Umul8_16
  6358  0B60  0873               	movf	?__Umul8_16+1,w
  6359  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  6360  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  6361  0B63  00C1               	movwf	___flmul@temp+1
  6362  0B64  0872               	movf	?__Umul8_16,w
  6363  0B65  00C0               	movwf	___flmul@temp
  6364  0B66                     l2566:	
  6365  0B66  0840               	movf	___flmul@temp,w
  6366  0B67  00B0               	movwf	??___flmul
  6367  0B68  0841               	movf	___flmul@temp+1,w
  6368  0B69  00B1               	movwf	??___flmul+1
  6369  0B6A  01B2               	clrf	??___flmul+2
  6370  0B6B  01B3               	clrf	??___flmul+3
  6371  0B6C  3008               	movlw	8
  6372  0B6D                     u3725:	
  6373  0B6D  1003               	clrc
  6374  0B6E  0DB0               	rlf	??___flmul,f
  6375  0B6F  0DB1               	rlf	??___flmul+1,f
  6376  0B70  0DB2               	rlf	??___flmul+2,f
  6377  0B71  0DB3               	rlf	??___flmul+3,f
  6378  0B72                     u3720:	
  6379  0B72  3EFF               	addlw	-1
  6380  0B73  1D03               	skipz
  6381  0B74  2B6D               	goto	u3725
  6382  0B75  0830               	movf	??___flmul,w
  6383  0B76  07BC               	addwf	___flmul@prod,f
  6384  0B77  0831               	movf	??___flmul+1,w
  6385  0B78  1103               	clrz
  6386  0B79  1803               	skipnc
  6387  0B7A  3E01               	addlw	1
  6388  0B7B  1903               	skipnz
  6389  0B7C  2B7E               	goto	u3731
  6390  0B7D  07BD               	addwf	___flmul@prod+1,f
  6391  0B7E                     u3731:	
  6392  0B7E  0832               	movf	??___flmul+2,w
  6393  0B7F  1103               	clrz
  6394  0B80  1803               	skipnc
  6395  0B81  3E01               	addlw	1
  6396  0B82  1903               	skipnz
  6397  0B83  2B85               	goto	u3732
  6398  0B84  07BE               	addwf	___flmul@prod+2,f
  6399  0B85                     u3732:	
  6400  0B85  0833               	movf	??___flmul+3,w
  6401  0B86  1103               	clrz
  6402  0B87  1803               	skipnc
  6403  0B88  3E01               	addlw	1
  6404  0B89  1903               	skipnz
  6405  0B8A  2B8C               	goto	u3733
  6406  0B8B  07BF               	addwf	___flmul@prod+3,f
  6407  0B8C                     u3733:	
  6408  0B8C                     l2568:	
  6409  0B8C  0836               	movf	___flmul@grs,w
  6410  0B8D  00B0               	movwf	??___flmul
  6411  0B8E  0837               	movf	___flmul@grs+1,w
  6412  0B8F  00B1               	movwf	??___flmul+1
  6413  0B90  0838               	movf	___flmul@grs+2,w
  6414  0B91  00B2               	movwf	??___flmul+2
  6415  0B92  0839               	movf	___flmul@grs+3,w
  6416  0B93  00B3               	movwf	??___flmul+3
  6417  0B94  3018               	movlw	24
  6418  0B95                     u3745:	
  6419  0B95  1003               	clrc
  6420  0B96  0CB3               	rrf	??___flmul+3,f
  6421  0B97  0CB2               	rrf	??___flmul+2,f
  6422  0B98  0CB1               	rrf	??___flmul+1,f
  6423  0B99  0CB0               	rrf	??___flmul,f
  6424  0B9A                     u3740:	
  6425  0B9A  3EFF               	addlw	-1
  6426  0B9B  1D03               	skipz
  6427  0B9C  2B95               	goto	u3745
  6428  0B9D  0830               	movf	??___flmul,w
  6429  0B9E  07BC               	addwf	___flmul@prod,f
  6430  0B9F  0831               	movf	??___flmul+1,w
  6431  0BA0  1103               	clrz
  6432  0BA1  1803               	skipnc
  6433  0BA2  3E01               	addlw	1
  6434  0BA3  1903               	skipnz
  6435  0BA4  2BA6               	goto	u3751
  6436  0BA5  07BD               	addwf	___flmul@prod+1,f
  6437  0BA6                     u3751:	
  6438  0BA6  0832               	movf	??___flmul+2,w
  6439  0BA7  1103               	clrz
  6440  0BA8  1803               	skipnc
  6441  0BA9  3E01               	addlw	1
  6442  0BAA  1903               	skipnz
  6443  0BAB  2BAD               	goto	u3752
  6444  0BAC  07BE               	addwf	___flmul@prod+2,f
  6445  0BAD                     u3752:	
  6446  0BAD  0833               	movf	??___flmul+3,w
  6447  0BAE  1103               	clrz
  6448  0BAF  1803               	skipnc
  6449  0BB0  3E01               	addlw	1
  6450  0BB1  1903               	skipnz
  6451  0BB2  2BB4               	goto	u3753
  6452  0BB3  07BF               	addwf	___flmul@prod+3,f
  6453  0BB4                     u3753:	
  6454  0BB4                     l2570:	
  6455  0BB4  3008               	movlw	8
  6456  0BB5  00B0               	movwf	??___flmul
  6457  0BB6                     u3765:	
  6458  0BB6  1003               	clrc
  6459  0BB7  0DB6               	rlf	___flmul@grs,f
  6460  0BB8  0DB7               	rlf	___flmul@grs+1,f
  6461  0BB9  0DB8               	rlf	___flmul@grs+2,f
  6462  0BBA  0DB9               	rlf	___flmul@grs+3,f
  6463  0BBB  0BB0               	decfsz	??___flmul,f
  6464  0BBC  2BB6               	goto	u3765
  6465  0BBD                     l2572:	
  6466  0BBD  083B               	movf	___flmul@bexp,w
  6467  0BBE  073A               	addwf	___flmul@aexp,w
  6468  0BBF  00B0               	movwf	??___flmul
  6469  0BC0  01B1               	clrf	??___flmul+1
  6470  0BC1  0DB1               	rlf	??___flmul+1,f
  6471  0BC2  0830               	movf	??___flmul,w
  6472  0BC3  3E82               	addlw	130
  6473  0BC4  00C0               	movwf	___flmul@temp
  6474  0BC5  0831               	movf	??___flmul+1,w
  6475  0BC6  1803               	skipnc
  6476  0BC7  3E01               	addlw	1
  6477  0BC8  3EFF               	addlw	255
  6478  0BC9  00C1               	movwf	___flmul@temp+1
  6479  0BCA  2BE8               	goto	l2584
  6480  0BCB                     l2574:	
  6481  0BCB  3001               	movlw	1
  6482  0BCC  00B0               	movwf	??___flmul
  6483  0BCD                     u3775:	
  6484  0BCD  1003               	clrc
  6485  0BCE  0DBC               	rlf	___flmul@prod,f
  6486  0BCF  0DBD               	rlf	___flmul@prod+1,f
  6487  0BD0  0DBE               	rlf	___flmul@prod+2,f
  6488  0BD1  0DBF               	rlf	___flmul@prod+3,f
  6489  0BD2  0BB0               	decfsz	??___flmul,f
  6490  0BD3  2BCD               	goto	u3775
  6491  0BD4                     l2576:	
  6492  0BD4  1FB9               	btfss	___flmul@grs+3,7
  6493  0BD5  2BD7               	goto	u3781
  6494  0BD6  2BD8               	goto	u3780
  6495  0BD7                     u3781:	
  6496  0BD7  2BD9               	goto	l2580
  6497  0BD8                     u3780:	
  6498  0BD8                     l2578:	
  6499  0BD8  143C               	bsf	___flmul@prod,0
  6500  0BD9                     l2580:	
  6501  0BD9  3001               	movlw	1
  6502  0BDA  00B0               	movwf	??___flmul
  6503  0BDB                     u3795:	
  6504  0BDB  1003               	clrc
  6505  0BDC  0DB6               	rlf	___flmul@grs,f
  6506  0BDD  0DB7               	rlf	___flmul@grs+1,f
  6507  0BDE  0DB8               	rlf	___flmul@grs+2,f
  6508  0BDF  0DB9               	rlf	___flmul@grs+3,f
  6509  0BE0  0BB0               	decfsz	??___flmul,f
  6510  0BE1  2BDB               	goto	u3795
  6511  0BE2                     l2582:	
  6512  0BE2  30FF               	movlw	255
  6513  0BE3  07C0               	addwf	___flmul@temp,f
  6514  0BE4  1803               	skipnc
  6515  0BE5  0AC1               	incf	___flmul@temp+1,f
  6516  0BE6  30FF               	movlw	255
  6517  0BE7  07C1               	addwf	___flmul@temp+1,f
  6518  0BE8                     l2584:	
  6519  0BE8  1FBE               	btfss	___flmul@prod+2,7
  6520  0BE9  2BEB               	goto	u3801
  6521  0BEA  2BEC               	goto	u3800
  6522  0BEB                     u3801:	
  6523  0BEB  2BCB               	goto	l2574
  6524  0BEC                     u3800:	
  6525  0BEC                     l2586:	
  6526  0BEC  01BA               	clrf	___flmul@aexp
  6527  0BED                     l2588:	
  6528  0BED  1FB9               	btfss	___flmul@grs+3,7
  6529  0BEE  2BF0               	goto	u3811
  6530  0BEF  2BF1               	goto	u3810
  6531  0BF0                     u3811:	
  6532  0BF0  2C0D               	goto	l2596
  6533  0BF1                     u3810:	
  6534  0BF1                     l2590:	
  6535  0BF1  30FF               	movlw	255
  6536  0BF2  0536               	andwf	___flmul@grs,w
  6537  0BF3  00B0               	movwf	??___flmul
  6538  0BF4  30FF               	movlw	255
  6539  0BF5  0537               	andwf	___flmul@grs+1,w
  6540  0BF6  00B1               	movwf	??___flmul+1
  6541  0BF7  30FF               	movlw	255
  6542  0BF8  0538               	andwf	___flmul@grs+2,w
  6543  0BF9  00B2               	movwf	??___flmul+2
  6544  0BFA  307F               	movlw	127
  6545  0BFB  0539               	andwf	___flmul@grs+3,w
  6546  0BFC  00B3               	movwf	??___flmul+3
  6547  0BFD  0833               	movf	??___flmul+3,w
  6548  0BFE  0432               	iorwf	??___flmul+2,w
  6549  0BFF  0431               	iorwf	??___flmul+1,w
  6550  0C00  0430               	iorwf	??___flmul,w
  6551  0C01  1903               	skipnz
  6552  0C02  2C04               	goto	u3821
  6553  0C03  2C05               	goto	u3820
  6554  0C04                     u3821:	
  6555  0C04  2C08               	goto	l754
  6556  0C05                     u3820:	
  6557  0C05                     l2592:	
  6558  0C05  01BA               	clrf	___flmul@aexp
  6559  0C06  0ABA               	incf	___flmul@aexp,f
  6560  0C07  2C0D               	goto	l2596
  6561  0C08                     l754:	
  6562  0C08  1C3C               	btfss	___flmul@prod,0
  6563  0C09  2C0B               	goto	u3831
  6564  0C0A  2C0C               	goto	u3830
  6565  0C0B                     u3831:	
  6566  0C0B  2C0D               	goto	l2596
  6567  0C0C                     u3830:	
  6568  0C0C  2C05               	goto	l2592
  6569  0C0D                     l2596:	
  6570  0C0D  083A               	movf	___flmul@aexp,w
  6571  0C0E  1903               	btfsc	3,2
  6572  0C0F  2C11               	goto	u3841
  6573  0C10  2C12               	goto	u3840
  6574  0C11                     u3841:	
  6575  0C11  2C43               	goto	l2606
  6576  0C12                     u3840:	
  6577  0C12                     l2598:	
  6578  0C12  3001               	movlw	1
  6579  0C13  07BC               	addwf	___flmul@prod,f
  6580  0C14  3000               	movlw	0
  6581  0C15  1803               	skipnc
  6582  0C16  3001               	movlw	1
  6583  0C17  07BD               	addwf	___flmul@prod+1,f
  6584  0C18  3000               	movlw	0
  6585  0C19  1803               	skipnc
  6586  0C1A  3001               	movlw	1
  6587  0C1B  07BE               	addwf	___flmul@prod+2,f
  6588  0C1C  3000               	movlw	0
  6589  0C1D  1803               	skipnc
  6590  0C1E  3001               	movlw	1
  6591  0C1F  07BF               	addwf	___flmul@prod+3,f
  6592  0C20                     l2600:	
  6593  0C20  1C3F               	btfss	___flmul@prod+3,0
  6594  0C21  2C23               	goto	u3851
  6595  0C22  2C24               	goto	u3850
  6596  0C23                     u3851:	
  6597  0C23  2C43               	goto	l2606
  6598  0C24                     u3850:	
  6599  0C24                     l2602:	
  6600  0C24  083C               	movf	___flmul@prod,w
  6601  0C25  00B0               	movwf	??___flmul
  6602  0C26  083D               	movf	___flmul@prod+1,w
  6603  0C27  00B1               	movwf	??___flmul+1
  6604  0C28  083E               	movf	___flmul@prod+2,w
  6605  0C29  00B2               	movwf	??___flmul+2
  6606  0C2A  083F               	movf	___flmul@prod+3,w
  6607  0C2B  00B3               	movwf	??___flmul+3
  6608  0C2C  3001               	movlw	1
  6609  0C2D  00B4               	movwf	??___flmul+4
  6610  0C2E                     u3865:	
  6611  0C2E  0D33               	rlf	??___flmul+3,w
  6612  0C2F  0CB3               	rrf	??___flmul+3,f
  6613  0C30  0CB2               	rrf	??___flmul+2,f
  6614  0C31  0CB1               	rrf	??___flmul+1,f
  6615  0C32  0CB0               	rrf	??___flmul,f
  6616  0C33                     u3860:	
  6617  0C33  0BB4               	decfsz	??___flmul+4,f
  6618  0C34  2C2E               	goto	u3865
  6619  0C35  0833               	movf	??___flmul+3,w
  6620  0C36  00BF               	movwf	___flmul@prod+3
  6621  0C37  0832               	movf	??___flmul+2,w
  6622  0C38  00BE               	movwf	___flmul@prod+2
  6623  0C39  0831               	movf	??___flmul+1,w
  6624  0C3A  00BD               	movwf	___flmul@prod+1
  6625  0C3B  0830               	movf	??___flmul,w
  6626  0C3C  00BC               	movwf	___flmul@prod
  6627  0C3D                     l2604:	
  6628  0C3D  3001               	movlw	1
  6629  0C3E  07C0               	addwf	___flmul@temp,f
  6630  0C3F  1803               	skipnc
  6631  0C40  0AC1               	incf	___flmul@temp+1,f
  6632  0C41  3000               	movlw	0
  6633  0C42  07C1               	addwf	___flmul@temp+1,f
  6634  0C43                     l2606:	
  6635  0C43  0841               	movf	___flmul@temp+1,w
  6636  0C44  3A80               	xorlw	128
  6637  0C45  00FF               	movwf	btemp+1
  6638  0C46  3080               	movlw	128
  6639  0C47  027F               	subwf	btemp+1,w
  6640  0C48  1D03               	skipz
  6641  0C49  2C4C               	goto	u3875
  6642  0C4A  30FF               	movlw	255
  6643  0C4B  0240               	subwf	___flmul@temp,w
  6644  0C4C                     u3875:	
  6645  0C4C  1C03               	skipc
  6646  0C4D  2C4F               	goto	u3871
  6647  0C4E  2C50               	goto	u3870
  6648  0C4F                     u3871:	
  6649  0C4F  2C5B               	goto	l2610
  6650  0C50                     u3870:	
  6651  0C50                     l2608:	
  6652  0C50  307F               	movlw	127
  6653  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  6654  0C52  1303               	bcf	3,6	;RP1=0, select bank0
  6655  0C53  00BF               	movwf	___flmul@prod+3
  6656  0C54  3080               	movlw	128
  6657  0C55  00BE               	movwf	___flmul@prod+2
  6658  0C56  3000               	movlw	0
  6659  0C57  00BD               	movwf	___flmul@prod+1
  6660  0C58  3000               	movlw	0
  6661  0C59  00BC               	movwf	___flmul@prod
  6662  0C5A  2C90               	goto	l760
  6663  0C5B                     l2610:	
  6664  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  6665  0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  6666  0C5D  0841               	movf	___flmul@temp+1,w
  6667  0C5E  3A80               	xorlw	128
  6668  0C5F  00FF               	movwf	btemp+1
  6669  0C60  3080               	movlw	128
  6670  0C61  027F               	subwf	btemp+1,w
  6671  0C62  1D03               	skipz
  6672  0C63  2C66               	goto	u3885
  6673  0C64  3001               	movlw	1
  6674  0C65  0240               	subwf	___flmul@temp,w
  6675  0C66                     u3885:	
  6676  0C66  1803               	skipnc
  6677  0C67  2C69               	goto	u3881
  6678  0C68  2C6A               	goto	u3880
  6679  0C69                     u3881:	
  6680  0C69  2C76               	goto	l2616
  6681  0C6A                     u3880:	
  6682  0C6A                     l2612:	
  6683  0C6A  3000               	movlw	0
  6684  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  6685  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  6686  0C6D  00BF               	movwf	___flmul@prod+3
  6687  0C6E  3000               	movlw	0
  6688  0C6F  00BE               	movwf	___flmul@prod+2
  6689  0C70  3000               	movlw	0
  6690  0C71  00BD               	movwf	___flmul@prod+1
  6691  0C72  3000               	movlw	0
  6692  0C73  00BC               	movwf	___flmul@prod
  6693  0C74                     l2614:	
  6694  0C74  01B5               	clrf	___flmul@sign
  6695  0C75  2C90               	goto	l760
  6696  0C76                     l2616:	
  6697  0C76  1283               	bcf	3,5	;RP0=0, select bank0
  6698  0C77  1303               	bcf	3,6	;RP1=0, select bank0
  6699  0C78  0840               	movf	___flmul@temp,w
  6700  0C79  00B0               	movwf	??___flmul
  6701  0C7A  0830               	movf	??___flmul,w
  6702  0C7B  00BB               	movwf	___flmul@bexp
  6703  0C7C  30FF               	movlw	255
  6704  0C7D  05BC               	andwf	___flmul@prod,f
  6705  0C7E  30FF               	movlw	255
  6706  0C7F  05BD               	andwf	___flmul@prod+1,f
  6707  0C80  307F               	movlw	127
  6708  0C81  05BE               	andwf	___flmul@prod+2,f
  6709  0C82  3000               	movlw	0
  6710  0C83  05BF               	andwf	___flmul@prod+3,f
  6711  0C84                     l2618:	
  6712  0C84  1C3B               	btfss	___flmul@bexp,0
  6713  0C85  2C87               	goto	u3891
  6714  0C86  2C88               	goto	u3890
  6715  0C87                     u3891:	
  6716  0C87  2C89               	goto	l2622
  6717  0C88                     u3890:	
  6718  0C88                     l2620:	
  6719  0C88  17BE               	bsf	___flmul@prod+2,7
  6720  0C89                     l2622:	
  6721  0C89  083B               	movf	___flmul@bexp,w
  6722  0C8A  00B0               	movwf	??___flmul
  6723  0C8B  1003               	clrc
  6724  0C8C  0C30               	rrf	??___flmul,w
  6725  0C8D  00B1               	movwf	??___flmul+1
  6726  0C8E  0831               	movf	??___flmul+1,w
  6727  0C8F  00BF               	movwf	___flmul@prod+3
  6728  0C90                     l760:	
  6729  0C90  0835               	movf	___flmul@sign,w
  6730  0C91  00B0               	movwf	??___flmul
  6731  0C92  0830               	movf	??___flmul,w
  6732  0C93  04BF               	iorwf	___flmul@prod+3,f
  6733  0C94                     l2624:	
  6734  0C94  083F               	movf	___flmul@prod+3,w
  6735  0C95  00AB               	movwf	?___flmul+3
  6736  0C96  083E               	movf	___flmul@prod+2,w
  6737  0C97  00AA               	movwf	?___flmul+2
  6738  0C98  083D               	movf	___flmul@prod+1,w
  6739  0C99  00A9               	movwf	?___flmul+1
  6740  0C9A  083C               	movf	___flmul@prod,w
  6741  0C9B  00A8               	movwf	?___flmul
  6742  0C9C                     l748:	
  6743  0C9C  0008               	return
  6744  0C9D                     __end_of___flmul:	
  6745                           
  6746                           	psect	text12
  6747  1BA3                     __ptext12:	
  6748 ;; *************** function __Umul8_16 *****************
  6749 ;; Defined at:
  6750 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8_16.c"
  6751 ;; Parameters:    Size  Location     Type
  6752 ;;  multiplier      1    wreg     unsigned char 
  6753 ;;  multiplicand    1    2[COMMON] unsigned char 
  6754 ;; Auto vars:     Size  Location     Type
  6755 ;;  multiplier      1   10[COMMON] unsigned char 
  6756 ;;  word_mpld       2    8[COMMON] unsigned int 
  6757 ;;  product         2    6[COMMON] unsigned int 
  6758 ;; Return value:  Size  Location     Type
  6759 ;;                  2    2[COMMON] unsigned int 
  6760 ;; Registers used:
  6761 ;;		wreg, status,2, status,0
  6762 ;; Tracked objects:
  6763 ;;		On entry : 0/0
  6764 ;;		On exit  : 0/0
  6765 ;;		Unchanged: 0/0
  6766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6767 ;;      Params:         2       0       0       0       0
  6768 ;;      Locals:         5       0       0       0       0
  6769 ;;      Temps:          2       0       0       0       0
  6770 ;;      Totals:         9       0       0       0       0
  6771 ;;Total ram usage:        9 bytes
  6772 ;; Hardware stack levels used:    1
  6773 ;; Hardware stack levels required when called:    1
  6774 ;; This function calls:
  6775 ;;		Nothing
  6776 ;; This function is called by:
  6777 ;;		___flmul
  6778 ;; This function uses a non-reentrant model
  6779 ;;
  6780                           
  6781                           
  6782                           ;psect for function __Umul8_16
  6783  1BA3                     __Umul8_16:	
  6784                           
  6785                           ;incstack = 0
  6786                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6787                           ;__Umul8_16@multiplier stored from wreg
  6788  1BA3  00FA               	movwf	__Umul8_16@multiplier
  6789  1BA4                     l2150:	
  6790  1BA4  01F6               	clrf	__Umul8_16@product
  6791  1BA5  01F7               	clrf	__Umul8_16@product+1
  6792  1BA6                     l2152:	
  6793  1BA6  0872               	movf	__Umul8_16@multiplicand,w
  6794  1BA7  00F4               	movwf	??__Umul8_16
  6795  1BA8  01F5               	clrf	??__Umul8_16+1
  6796  1BA9  0874               	movf	??__Umul8_16,w
  6797  1BAA  00F8               	movwf	__Umul8_16@word_mpld
  6798  1BAB  0875               	movf	??__Umul8_16+1,w
  6799  1BAC  00F9               	movwf	__Umul8_16@word_mpld+1
  6800  1BAD                     l2154:	
  6801  1BAD  1C7A               	btfss	__Umul8_16@multiplier,0
  6802  1BAE  2BB0               	goto	u2721
  6803  1BAF  2BB1               	goto	u2720
  6804  1BB0                     u2721:	
  6805  1BB0  2BB7               	goto	l814
  6806  1BB1                     u2720:	
  6807  1BB1                     l2156:	
  6808  1BB1  0878               	movf	__Umul8_16@word_mpld,w
  6809  1BB2  07F6               	addwf	__Umul8_16@product,f
  6810  1BB3  1803               	skipnc
  6811  1BB4  0AF7               	incf	__Umul8_16@product+1,f
  6812  1BB5  0879               	movf	__Umul8_16@word_mpld+1,w
  6813  1BB6  07F7               	addwf	__Umul8_16@product+1,f
  6814  1BB7                     l814:	
  6815  1BB7  3001               	movlw	1
  6816  1BB8                     u2735:	
  6817  1BB8  1003               	clrc
  6818  1BB9  0DF8               	rlf	__Umul8_16@word_mpld,f
  6819  1BBA  0DF9               	rlf	__Umul8_16@word_mpld+1,f
  6820  1BBB  3EFF               	addlw	-1
  6821  1BBC  1D03               	skipz
  6822  1BBD  2BB8               	goto	u2735
  6823  1BBE  1003               	clrc
  6824  1BBF  0CFA               	rrf	__Umul8_16@multiplier,f
  6825  1BC0                     l2158:	
  6826  1BC0  087A               	movf	__Umul8_16@multiplier,w
  6827  1BC1  1D03               	btfss	3,2
  6828  1BC2  2BC4               	goto	u2741
  6829  1BC3  2BC5               	goto	u2740
  6830  1BC4                     u2741:	
  6831  1BC4  2BAD               	goto	l2154
  6832  1BC5                     u2740:	
  6833  1BC5                     l2160:	
  6834  1BC5  0877               	movf	__Umul8_16@product+1,w
  6835  1BC6  00F3               	movwf	?__Umul8_16+1
  6836  1BC7  0876               	movf	__Umul8_16@product,w
  6837  1BC8  00F2               	movwf	?__Umul8_16
  6838  1BC9                     l816:	
  6839  1BC9  0008               	return
  6840  1BCA                     __end_of__Umul8_16:	
  6841                           
  6842                           	psect	text13
  6843  11F0                     __ptext13:	
  6844 ;; *************** function __tdiv_to_l_ *****************
  6845 ;; Defined at:
  6846 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\ftdivl.c"
  6847 ;; Parameters:    Size  Location     Type
  6848 ;;  f1              4    2[COMMON] float 
  6849 ;;  f2              4    6[COMMON] float 
  6850 ;; Auto vars:     Size  Location     Type
  6851 ;;  quot            4    4[BANK0 ] unsigned long 
  6852 ;;  exp1            1    9[BANK0 ] unsigned char 
  6853 ;;  cntr            1    8[BANK0 ] unsigned char 
  6854 ;; Return value:  Size  Location     Type
  6855 ;;                  4    2[COMMON] unsigned long 
  6856 ;; Registers used:
  6857 ;;		wreg, status,2, status,0
  6858 ;; Tracked objects:
  6859 ;;		On entry : 0/0
  6860 ;;		On exit  : 0/0
  6861 ;;		Unchanged: 0/0
  6862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6863 ;;      Params:         8       0       0       0       0
  6864 ;;      Locals:         0       6       0       0       0
  6865 ;;      Temps:          0       4       0       0       0
  6866 ;;      Totals:         8      10       0       0       0
  6867 ;;Total ram usage:       18 bytes
  6868 ;; Hardware stack levels used:    1
  6869 ;; Hardware stack levels required when called:    1
  6870 ;; This function calls:
  6871 ;;		Nothing
  6872 ;; This function is called by:
  6873 ;;		_sprintf
  6874 ;; This function uses a non-reentrant model
  6875 ;;
  6876                           
  6877                           
  6878                           ;psect for function __tdiv_to_l_
  6879  11F0                     __tdiv_to_l_:	
  6880  11F0                     l2706:	
  6881                           ;incstack = 0
  6882                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  6883                           
  6884  11F0  0872               	movf	__tdiv_to_l_@f1,w
  6885  11F1  1283               	bcf	3,5	;RP0=0, select bank0
  6886  11F2  1303               	bcf	3,6	;RP1=0, select bank0
  6887  11F3  00A0               	movwf	??__tdiv_to_l_
  6888  11F4  0873               	movf	__tdiv_to_l_@f1+1,w
  6889  11F5  00A1               	movwf	??__tdiv_to_l_+1
  6890  11F6  0874               	movf	__tdiv_to_l_@f1+2,w
  6891  11F7  00A2               	movwf	??__tdiv_to_l_+2
  6892  11F8  1003               	clrc
  6893  11F9  0D21               	rlf	??__tdiv_to_l_+1,w
  6894  11FA  0D22               	rlf	??__tdiv_to_l_+2,w
  6895  11FB  00A3               	movwf	??__tdiv_to_l_+3
  6896  11FC  0823               	movf	??__tdiv_to_l_+3,w
  6897  11FD  00A9               	movwf	__tdiv_to_l_@exp1
  6898  11FE  0829               	movf	__tdiv_to_l_@exp1,w
  6899  11FF  1D03               	btfss	3,2
  6900  1200  2A02               	goto	u4171
  6901  1201  2A03               	goto	u4170
  6902  1202                     u4171:	
  6903  1202  2A0C               	goto	l2712
  6904  1203                     u4170:	
  6905  1203                     l2708:	
  6906  1203  3000               	movlw	0
  6907  1204  00F5               	movwf	?__tdiv_to_l_+3
  6908  1205  3000               	movlw	0
  6909  1206  00F4               	movwf	?__tdiv_to_l_+2
  6910  1207  3000               	movlw	0
  6911  1208  00F3               	movwf	?__tdiv_to_l_+1
  6912  1209  3000               	movlw	0
  6913  120A  00F2               	movwf	?__tdiv_to_l_
  6914  120B  2AAC               	goto	l542
  6915  120C                     l2712:	
  6916  120C  0876               	movf	__tdiv_to_l_@f2,w
  6917  120D  00A0               	movwf	??__tdiv_to_l_
  6918  120E  0877               	movf	__tdiv_to_l_@f2+1,w
  6919  120F  00A1               	movwf	??__tdiv_to_l_+1
  6920  1210  0878               	movf	__tdiv_to_l_@f2+2,w
  6921  1211  00A2               	movwf	??__tdiv_to_l_+2
  6922  1212  1003               	clrc
  6923  1213  0D21               	rlf	??__tdiv_to_l_+1,w
  6924  1214  0D22               	rlf	??__tdiv_to_l_+2,w
  6925  1215  00A3               	movwf	??__tdiv_to_l_+3
  6926  1216  0823               	movf	??__tdiv_to_l_+3,w
  6927  1217  00A8               	movwf	__tdiv_to_l_@cntr
  6928  1218  0828               	movf	__tdiv_to_l_@cntr,w
  6929  1219  1D03               	btfss	3,2
  6930  121A  2A1C               	goto	u4181
  6931  121B  2A1D               	goto	u4180
  6932  121C                     u4181:	
  6933  121C  2A1E               	goto	l543
  6934  121D                     u4180:	
  6935  121D  2A03               	goto	l2708
  6936  121E                     l543:	
  6937  121E  17F3               	bsf	__tdiv_to_l_@f1+1,7
  6938  121F                     l2718:	
  6939  121F  30FF               	movlw	255
  6940  1220  05F2               	andwf	__tdiv_to_l_@f1,f
  6941  1221  30FF               	movlw	255
  6942  1222  05F3               	andwf	__tdiv_to_l_@f1+1,f
  6943  1223  3000               	movlw	0
  6944  1224  05F4               	andwf	__tdiv_to_l_@f1+2,f
  6945  1225                     l2720:	
  6946  1225  17F7               	bsf	__tdiv_to_l_@f2+1,7
  6947  1226  30FF               	movlw	255
  6948  1227  05F6               	andwf	__tdiv_to_l_@f2,f
  6949  1228  30FF               	movlw	255
  6950  1229  05F7               	andwf	__tdiv_to_l_@f2+1,f
  6951  122A  3000               	movlw	0
  6952  122B  05F8               	andwf	__tdiv_to_l_@f2+2,f
  6953  122C  3000               	movlw	0
  6954  122D  00A7               	movwf	__tdiv_to_l_@quot+3
  6955  122E  3000               	movlw	0
  6956  122F  00A6               	movwf	__tdiv_to_l_@quot+2
  6957  1230  3000               	movlw	0
  6958  1231  00A5               	movwf	__tdiv_to_l_@quot+1
  6959  1232  3000               	movlw	0
  6960  1233  00A4               	movwf	__tdiv_to_l_@quot
  6961  1234                     l2722:	
  6962  1234  307F               	movlw	127
  6963  1235  02A9               	subwf	__tdiv_to_l_@exp1,f
  6964  1236                     l2724:	
  6965  1236  3098               	movlw	152
  6966  1237  0728               	addwf	__tdiv_to_l_@cntr,w
  6967  1238  00A0               	movwf	??__tdiv_to_l_
  6968  1239  0820               	movf	??__tdiv_to_l_,w
  6969  123A  02A9               	subwf	__tdiv_to_l_@exp1,f
  6970  123B  3018               	movlw	24
  6971  123C  00A0               	movwf	??__tdiv_to_l_
  6972  123D  0820               	movf	??__tdiv_to_l_,w
  6973  123E  00A8               	movwf	__tdiv_to_l_@cntr
  6974  123F                     l2726:	
  6975  123F  3001               	movlw	1
  6976  1240  00A0               	movwf	??__tdiv_to_l_
  6977  1241                     u4195:	
  6978  1241  1003               	clrc
  6979  1242  0DA4               	rlf	__tdiv_to_l_@quot,f
  6980  1243  0DA5               	rlf	__tdiv_to_l_@quot+1,f
  6981  1244  0DA6               	rlf	__tdiv_to_l_@quot+2,f
  6982  1245  0DA7               	rlf	__tdiv_to_l_@quot+3,f
  6983  1246  0BA0               	decfsz	??__tdiv_to_l_,f
  6984  1247  2A41               	goto	u4195
  6985  1248                     l2728:	
  6986  1248  0878               	movf	__tdiv_to_l_@f2+2,w
  6987  1249  0274               	subwf	__tdiv_to_l_@f1+2,w
  6988  124A  1D03               	skipz
  6989  124B  2A52               	goto	u4205
  6990  124C  0877               	movf	__tdiv_to_l_@f2+1,w
  6991  124D  0273               	subwf	__tdiv_to_l_@f1+1,w
  6992  124E  1D03               	skipz
  6993  124F  2A52               	goto	u4205
  6994  1250  0876               	movf	__tdiv_to_l_@f2,w
  6995  1251  0272               	subwf	__tdiv_to_l_@f1,w
  6996  1252                     u4205:	
  6997  1252  1C03               	skipc
  6998  1253  2A55               	goto	u4201
  6999  1254  2A56               	goto	u4200
  7000  1255                     u4201:	
  7001  1255  2A61               	goto	l2734
  7002  1256                     u4200:	
  7003  1256                     l2730:	
  7004  1256  0876               	movf	__tdiv_to_l_@f2,w
  7005  1257  02F2               	subwf	__tdiv_to_l_@f1,f
  7006  1258  0877               	movf	__tdiv_to_l_@f2+1,w
  7007  1259  1C03               	skipc
  7008  125A  0F77               	incfsz	__tdiv_to_l_@f2+1,w
  7009  125B  02F3               	subwf	__tdiv_to_l_@f1+1,f
  7010  125C  0878               	movf	__tdiv_to_l_@f2+2,w
  7011  125D  1C03               	skipc
  7012  125E  0A78               	incf	__tdiv_to_l_@f2+2,w
  7013  125F  02F4               	subwf	__tdiv_to_l_@f1+2,f
  7014  1260                     l2732:	
  7015  1260  1424               	bsf	__tdiv_to_l_@quot,0
  7016  1261                     l2734:	
  7017  1261  3001               	movlw	1
  7018  1262                     u4215:	
  7019  1262  1003               	clrc
  7020  1263  0DF2               	rlf	__tdiv_to_l_@f1,f
  7021  1264  0DF3               	rlf	__tdiv_to_l_@f1+1,f
  7022  1265  0DF4               	rlf	__tdiv_to_l_@f1+2,f
  7023  1266  3EFF               	addlw	-1
  7024  1267  1D03               	skipz
  7025  1268  2A62               	goto	u4215
  7026  1269                     l2736:	
  7027  1269  3001               	movlw	1
  7028  126A  02A8               	subwf	__tdiv_to_l_@cntr,f
  7029  126B  1D03               	btfss	3,2
  7030  126C  2A6E               	goto	u4221
  7031  126D  2A6F               	goto	u4220
  7032  126E                     u4221:	
  7033  126E  2A3F               	goto	l2726
  7034  126F                     u4220:	
  7035  126F                     l546:	
  7036  126F  1FA9               	btfss	__tdiv_to_l_@exp1,7
  7037  1270  2A72               	goto	u4231
  7038  1271  2A73               	goto	u4230
  7039  1272                     u4231:	
  7040  1272  2A8D               	goto	l2746
  7041  1273                     u4230:	
  7042  1273                     l2738:	
  7043  1273  0829               	movf	__tdiv_to_l_@exp1,w
  7044  1274  3A80               	xorlw	128
  7045  1275  3E97               	addlw	151
  7046  1276  1803               	skipnc
  7047  1277  2A79               	goto	u4241
  7048  1278  2A7A               	goto	u4240
  7049  1279                     u4241:	
  7050  1279  2A7B               	goto	l2744
  7051  127A                     u4240:	
  7052  127A  2A03               	goto	l2708
  7053  127B                     l2744:	
  7054  127B  3001               	movlw	1
  7055  127C                     u4255:	
  7056  127C  1003               	clrc
  7057  127D  0CA7               	rrf	__tdiv_to_l_@quot+3,f
  7058  127E  0CA6               	rrf	__tdiv_to_l_@quot+2,f
  7059  127F  0CA5               	rrf	__tdiv_to_l_@quot+1,f
  7060  1280  0CA4               	rrf	__tdiv_to_l_@quot,f
  7061  1281  3EFF               	addlw	-1
  7062  1282  1D03               	skipz
  7063  1283  2A7C               	goto	u4255
  7064  1284  3001               	movlw	1
  7065  1285  00A0               	movwf	??__tdiv_to_l_
  7066  1286  0820               	movf	??__tdiv_to_l_,w
  7067  1287  07A9               	addwf	__tdiv_to_l_@exp1,f
  7068  1288  1D03               	btfss	3,2
  7069  1289  2A8B               	goto	u4261
  7070  128A  2A8C               	goto	u4260
  7071  128B                     u4261:	
  7072  128B  2A7B               	goto	l2744
  7073  128C                     u4260:	
  7074  128C  2AA4               	goto	l2754
  7075  128D                     l2746:	
  7076  128D  3018               	movlw	24
  7077  128E  0229               	subwf	__tdiv_to_l_@exp1,w
  7078  128F  1C03               	skipc
  7079  1290  2A92               	goto	u4271
  7080  1291  2A93               	goto	u4270
  7081  1292                     u4271:	
  7082  1292  2A9F               	goto	l553
  7083  1293                     u4270:	
  7084  1293  2A03               	goto	l2708
  7085  1294                     l2752:	
  7086  1294  3001               	movlw	1
  7087  1295  00A0               	movwf	??__tdiv_to_l_
  7088  1296                     u4285:	
  7089  1296  1003               	clrc
  7090  1297  0DA4               	rlf	__tdiv_to_l_@quot,f
  7091  1298  0DA5               	rlf	__tdiv_to_l_@quot+1,f
  7092  1299  0DA6               	rlf	__tdiv_to_l_@quot+2,f
  7093  129A  0DA7               	rlf	__tdiv_to_l_@quot+3,f
  7094  129B  0BA0               	decfsz	??__tdiv_to_l_,f
  7095  129C  2A96               	goto	u4285
  7096  129D  3001               	movlw	1
  7097  129E  02A9               	subwf	__tdiv_to_l_@exp1,f
  7098  129F                     l553:	
  7099  129F  0829               	movf	__tdiv_to_l_@exp1,w
  7100  12A0  1D03               	btfss	3,2
  7101  12A1  2AA3               	goto	u4291
  7102  12A2  2AA4               	goto	u4290
  7103  12A3                     u4291:	
  7104  12A3  2A94               	goto	l2752
  7105  12A4                     u4290:	
  7106  12A4                     l2754:	
  7107  12A4  0827               	movf	__tdiv_to_l_@quot+3,w
  7108  12A5  00F5               	movwf	?__tdiv_to_l_+3
  7109  12A6  0826               	movf	__tdiv_to_l_@quot+2,w
  7110  12A7  00F4               	movwf	?__tdiv_to_l_+2
  7111  12A8  0825               	movf	__tdiv_to_l_@quot+1,w
  7112  12A9  00F3               	movwf	?__tdiv_to_l_+1
  7113  12AA  0824               	movf	__tdiv_to_l_@quot,w
  7114  12AB  00F2               	movwf	?__tdiv_to_l_
  7115  12AC                     l542:	
  7116  12AC  0008               	return
  7117  12AD                     __end_of__tdiv_to_l_:	
  7118                           
  7119                           	psect	text14
  7120  12AD                     __ptext14:	
  7121 ;; *************** function __div_to_l_ *****************
  7122 ;; Defined at:
  7123 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fldivl.c"
  7124 ;; Parameters:    Size  Location     Type
  7125 ;;  f1              4    2[COMMON] unsigned long 
  7126 ;;  f2              4    6[COMMON] unsigned long 
  7127 ;; Auto vars:     Size  Location     Type
  7128 ;;  quot            4    0[BANK0 ] unsigned long 
  7129 ;;  exp1            1    5[BANK0 ] unsigned char 
  7130 ;;  cntr            1    4[BANK0 ] unsigned char 
  7131 ;; Return value:  Size  Location     Type
  7132 ;;                  4    2[COMMON] unsigned long 
  7133 ;; Registers used:
  7134 ;;		wreg, status,2, status,0
  7135 ;; Tracked objects:
  7136 ;;		On entry : 0/0
  7137 ;;		On exit  : 0/0
  7138 ;;		Unchanged: 0/0
  7139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7140 ;;      Params:         8       0       0       0       0
  7141 ;;      Locals:         0       6       0       0       0
  7142 ;;      Temps:          1       0       0       0       0
  7143 ;;      Totals:         9       6       0       0       0
  7144 ;;Total ram usage:       15 bytes
  7145 ;; Hardware stack levels used:    1
  7146 ;; Hardware stack levels required when called:    1
  7147 ;; This function calls:
  7148 ;;		Nothing
  7149 ;; This function is called by:
  7150 ;;		_sprintf
  7151 ;; This function uses a non-reentrant model
  7152 ;;
  7153                           
  7154                           
  7155                           ;psect for function __div_to_l_
  7156  12AD                     __div_to_l_:	
  7157  12AD                     l2758:	
  7158                           ;incstack = 0
  7159                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  7160                           
  7161  12AD  1003               	clrc
  7162  12AE  0D74               	rlf	__div_to_l_@f1+2,w
  7163  12AF  0D75               	rlf	__div_to_l_@f1+3,w
  7164  12B0  00FA               	movwf	??__div_to_l_
  7165  12B1  087A               	movf	??__div_to_l_,w
  7166  12B2  1283               	bcf	3,5	;RP0=0, select bank0
  7167  12B3  1303               	bcf	3,6	;RP1=0, select bank0
  7168  12B4  00A5               	movwf	__div_to_l_@exp1
  7169  12B5  0825               	movf	__div_to_l_@exp1,w
  7170  12B6  1D03               	btfss	3,2
  7171  12B7  2AB9               	goto	u4301
  7172  12B8  2ABA               	goto	u4300
  7173  12B9                     u4301:	
  7174  12B9  2AC3               	goto	l2764
  7175  12BA                     u4300:	
  7176  12BA                     l2760:	
  7177  12BA  3000               	movlw	0
  7178  12BB  00F5               	movwf	?__div_to_l_+3
  7179  12BC  3000               	movlw	0
  7180  12BD  00F4               	movwf	?__div_to_l_+2
  7181  12BE  3000               	movlw	0
  7182  12BF  00F3               	movwf	?__div_to_l_+1
  7183  12C0  3000               	movlw	0
  7184  12C1  00F2               	movwf	?__div_to_l_
  7185  12C2  2B6A               	goto	l495
  7186  12C3                     l2764:	
  7187  12C3  1003               	clrc
  7188  12C4  0D78               	rlf	__div_to_l_@f2+2,w
  7189  12C5  0D79               	rlf	__div_to_l_@f2+3,w
  7190  12C6  00FA               	movwf	??__div_to_l_
  7191  12C7  087A               	movf	??__div_to_l_,w
  7192  12C8  00A4               	movwf	__div_to_l_@cntr
  7193  12C9  0824               	movf	__div_to_l_@cntr,w
  7194  12CA  1D03               	btfss	3,2
  7195  12CB  2ACD               	goto	u4311
  7196  12CC  2ACE               	goto	u4310
  7197  12CD                     u4311:	
  7198  12CD  2ACF               	goto	l496
  7199  12CE                     u4310:	
  7200  12CE  2ABA               	goto	l2760
  7201  12CF                     l496:	
  7202  12CF  17F4               	bsf	__div_to_l_@f1+2,7
  7203  12D0                     l2770:	
  7204  12D0  30FF               	movlw	255
  7205  12D1  05F2               	andwf	__div_to_l_@f1,f
  7206  12D2  30FF               	movlw	255
  7207  12D3  05F3               	andwf	__div_to_l_@f1+1,f
  7208  12D4  30FF               	movlw	255
  7209  12D5  05F4               	andwf	__div_to_l_@f1+2,f
  7210  12D6  3000               	movlw	0
  7211  12D7  05F5               	andwf	__div_to_l_@f1+3,f
  7212  12D8                     l2772:	
  7213  12D8  17F8               	bsf	__div_to_l_@f2+2,7
  7214  12D9  30FF               	movlw	255
  7215  12DA  05F6               	andwf	__div_to_l_@f2,f
  7216  12DB  30FF               	movlw	255
  7217  12DC  05F7               	andwf	__div_to_l_@f2+1,f
  7218  12DD  30FF               	movlw	255
  7219  12DE  05F8               	andwf	__div_to_l_@f2+2,f
  7220  12DF  3000               	movlw	0
  7221  12E0  05F9               	andwf	__div_to_l_@f2+3,f
  7222  12E1  3000               	movlw	0
  7223  12E2  00A3               	movwf	__div_to_l_@quot+3
  7224  12E3  3000               	movlw	0
  7225  12E4  00A2               	movwf	__div_to_l_@quot+2
  7226  12E5  3000               	movlw	0
  7227  12E6  00A1               	movwf	__div_to_l_@quot+1
  7228  12E7  3000               	movlw	0
  7229  12E8  00A0               	movwf	__div_to_l_@quot
  7230  12E9                     l2774:	
  7231  12E9  307F               	movlw	127
  7232  12EA  02A5               	subwf	__div_to_l_@exp1,f
  7233  12EB                     l2776:	
  7234  12EB  30A0               	movlw	160
  7235  12EC  0724               	addwf	__div_to_l_@cntr,w
  7236  12ED  00FA               	movwf	??__div_to_l_
  7237  12EE  087A               	movf	??__div_to_l_,w
  7238  12EF  02A5               	subwf	__div_to_l_@exp1,f
  7239  12F0  3020               	movlw	32
  7240  12F1  00FA               	movwf	??__div_to_l_
  7241  12F2  087A               	movf	??__div_to_l_,w
  7242  12F3  00A4               	movwf	__div_to_l_@cntr
  7243  12F4                     l2778:	
  7244  12F4  3001               	movlw	1
  7245  12F5  00FA               	movwf	??__div_to_l_
  7246  12F6                     u4325:	
  7247  12F6  1003               	clrc
  7248  12F7  0DA0               	rlf	__div_to_l_@quot,f
  7249  12F8  0DA1               	rlf	__div_to_l_@quot+1,f
  7250  12F9  0DA2               	rlf	__div_to_l_@quot+2,f
  7251  12FA  0DA3               	rlf	__div_to_l_@quot+3,f
  7252  12FB  0BFA               	decfsz	??__div_to_l_,f
  7253  12FC  2AF6               	goto	u4325
  7254  12FD                     l2780:	
  7255  12FD  0879               	movf	__div_to_l_@f2+3,w
  7256  12FE  0275               	subwf	__div_to_l_@f1+3,w
  7257  12FF  1D03               	skipz
  7258  1300  2B0B               	goto	u4335
  7259  1301  0878               	movf	__div_to_l_@f2+2,w
  7260  1302  0274               	subwf	__div_to_l_@f1+2,w
  7261  1303  1D03               	skipz
  7262  1304  2B0B               	goto	u4335
  7263  1305  0877               	movf	__div_to_l_@f2+1,w
  7264  1306  0273               	subwf	__div_to_l_@f1+1,w
  7265  1307  1D03               	skipz
  7266  1308  2B0B               	goto	u4335
  7267  1309  0876               	movf	__div_to_l_@f2,w
  7268  130A  0272               	subwf	__div_to_l_@f1,w
  7269  130B                     u4335:	
  7270  130B  1C03               	skipc
  7271  130C  2B0E               	goto	u4331
  7272  130D  2B0F               	goto	u4330
  7273  130E                     u4331:	
  7274  130E  2B1E               	goto	l2786
  7275  130F                     u4330:	
  7276  130F                     l2782:	
  7277  130F  0876               	movf	__div_to_l_@f2,w
  7278  1310  02F2               	subwf	__div_to_l_@f1,f
  7279  1311  0877               	movf	__div_to_l_@f2+1,w
  7280  1312  1C03               	skipc
  7281  1313  0F77               	incfsz	__div_to_l_@f2+1,w
  7282  1314  02F3               	subwf	__div_to_l_@f1+1,f
  7283  1315  0878               	movf	__div_to_l_@f2+2,w
  7284  1316  1C03               	skipc
  7285  1317  0F78               	incfsz	__div_to_l_@f2+2,w
  7286  1318  02F4               	subwf	__div_to_l_@f1+2,f
  7287  1319  0879               	movf	__div_to_l_@f2+3,w
  7288  131A  1C03               	skipc
  7289  131B  0F79               	incfsz	__div_to_l_@f2+3,w
  7290  131C  02F5               	subwf	__div_to_l_@f1+3,f
  7291  131D                     l2784:	
  7292  131D  1420               	bsf	__div_to_l_@quot,0
  7293  131E                     l2786:	
  7294  131E  3001               	movlw	1
  7295  131F  00FA               	movwf	??__div_to_l_
  7296  1320                     u4345:	
  7297  1320  1003               	clrc
  7298  1321  0DF2               	rlf	__div_to_l_@f1,f
  7299  1322  0DF3               	rlf	__div_to_l_@f1+1,f
  7300  1323  0DF4               	rlf	__div_to_l_@f1+2,f
  7301  1324  0DF5               	rlf	__div_to_l_@f1+3,f
  7302  1325  0BFA               	decfsz	??__div_to_l_,f
  7303  1326  2B20               	goto	u4345
  7304  1327                     l2788:	
  7305  1327  3001               	movlw	1
  7306  1328  02A4               	subwf	__div_to_l_@cntr,f
  7307  1329  1D03               	btfss	3,2
  7308  132A  2B2C               	goto	u4351
  7309  132B  2B2D               	goto	u4350
  7310  132C                     u4351:	
  7311  132C  2AF4               	goto	l2778
  7312  132D                     u4350:	
  7313  132D                     l499:	
  7314  132D  1FA5               	btfss	__div_to_l_@exp1,7
  7315  132E  2B30               	goto	u4361
  7316  132F  2B31               	goto	u4360
  7317  1330                     u4361:	
  7318  1330  2B4B               	goto	l2798
  7319  1331                     u4360:	
  7320  1331                     l2790:	
  7321  1331  0825               	movf	__div_to_l_@exp1,w
  7322  1332  3A80               	xorlw	128
  7323  1333  3E9F               	addlw	159
  7324  1334  1803               	skipnc
  7325  1335  2B37               	goto	u4371
  7326  1336  2B38               	goto	u4370
  7327  1337                     u4371:	
  7328  1337  2B39               	goto	l2796
  7329  1338                     u4370:	
  7330  1338  2ABA               	goto	l2760
  7331  1339                     l2796:	
  7332  1339  3001               	movlw	1
  7333  133A                     u4385:	
  7334  133A  1003               	clrc
  7335  133B  0CA3               	rrf	__div_to_l_@quot+3,f
  7336  133C  0CA2               	rrf	__div_to_l_@quot+2,f
  7337  133D  0CA1               	rrf	__div_to_l_@quot+1,f
  7338  133E  0CA0               	rrf	__div_to_l_@quot,f
  7339  133F  3EFF               	addlw	-1
  7340  1340  1D03               	skipz
  7341  1341  2B3A               	goto	u4385
  7342  1342  3001               	movlw	1
  7343  1343  00FA               	movwf	??__div_to_l_
  7344  1344  087A               	movf	??__div_to_l_,w
  7345  1345  07A5               	addwf	__div_to_l_@exp1,f
  7346  1346  1D03               	btfss	3,2
  7347  1347  2B49               	goto	u4391
  7348  1348  2B4A               	goto	u4390
  7349  1349                     u4391:	
  7350  1349  2B39               	goto	l2796
  7351  134A                     u4390:	
  7352  134A  2B62               	goto	l2806
  7353  134B                     l2798:	
  7354  134B  3020               	movlw	32
  7355  134C  0225               	subwf	__div_to_l_@exp1,w
  7356  134D  1C03               	skipc
  7357  134E  2B50               	goto	u4401
  7358  134F  2B51               	goto	u4400
  7359  1350                     u4401:	
  7360  1350  2B5D               	goto	l506
  7361  1351                     u4400:	
  7362  1351  2ABA               	goto	l2760
  7363  1352                     l2804:	
  7364  1352  3001               	movlw	1
  7365  1353  00FA               	movwf	??__div_to_l_
  7366  1354                     u4415:	
  7367  1354  1003               	clrc
  7368  1355  0DA0               	rlf	__div_to_l_@quot,f
  7369  1356  0DA1               	rlf	__div_to_l_@quot+1,f
  7370  1357  0DA2               	rlf	__div_to_l_@quot+2,f
  7371  1358  0DA3               	rlf	__div_to_l_@quot+3,f
  7372  1359  0BFA               	decfsz	??__div_to_l_,f
  7373  135A  2B54               	goto	u4415
  7374  135B  3001               	movlw	1
  7375  135C  02A5               	subwf	__div_to_l_@exp1,f
  7376  135D                     l506:	
  7377  135D  0825               	movf	__div_to_l_@exp1,w
  7378  135E  1D03               	btfss	3,2
  7379  135F  2B61               	goto	u4421
  7380  1360  2B62               	goto	u4420
  7381  1361                     u4421:	
  7382  1361  2B52               	goto	l2804
  7383  1362                     u4420:	
  7384  1362                     l2806:	
  7385  1362  0823               	movf	__div_to_l_@quot+3,w
  7386  1363  00F5               	movwf	?__div_to_l_+3
  7387  1364  0822               	movf	__div_to_l_@quot+2,w
  7388  1365  00F4               	movwf	?__div_to_l_+2
  7389  1366  0821               	movf	__div_to_l_@quot+1,w
  7390  1367  00F3               	movwf	?__div_to_l_+1
  7391  1368  0820               	movf	__div_to_l_@quot,w
  7392  1369  00F2               	movwf	?__div_to_l_
  7393  136A                     l495:	
  7394  136A  0008               	return
  7395  136B                     __end_of__div_to_l_:	
  7396                           
  7397                           	psect	text15
  7398  1134                     __ptext15:	
  7399 ;; *************** function ___xxtofl *****************
  7400 ;; Defined at:
  7401 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\xxtofl.c"
  7402 ;; Parameters:    Size  Location     Type
  7403 ;;  sign            1    wreg     unsigned char 
  7404 ;;  val             4    2[COMMON] long 
  7405 ;; Auto vars:     Size  Location     Type
  7406 ;;  sign            1    0[BANK0 ] unsigned char 
  7407 ;;  arg             4    2[BANK0 ] unsigned long 
  7408 ;;  exp             1    1[BANK0 ] unsigned char 
  7409 ;; Return value:  Size  Location     Type
  7410 ;;                  4    2[COMMON] unsigned char 
  7411 ;; Registers used:
  7412 ;;		wreg, status,2, status,0
  7413 ;; Tracked objects:
  7414 ;;		On entry : 0/0
  7415 ;;		On exit  : 0/0
  7416 ;;		Unchanged: 0/0
  7417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7418 ;;      Params:         4       0       0       0       0
  7419 ;;      Locals:         0       6       0       0       0
  7420 ;;      Temps:          4       0       0       0       0
  7421 ;;      Totals:         8       6       0       0       0
  7422 ;;Total ram usage:       14 bytes
  7423 ;; Hardware stack levels used:    1
  7424 ;; Hardware stack levels required when called:    1
  7425 ;; This function calls:
  7426 ;;		Nothing
  7427 ;; This function is called by:
  7428 ;;		_main
  7429 ;;		_sprintf
  7430 ;; This function uses a non-reentrant model
  7431 ;;
  7432                           
  7433                           
  7434                           ;psect for function ___xxtofl
  7435  1134                     ___xxtofl:	
  7436                           
  7437                           ;incstack = 0
  7438                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7439                           ;___xxtofl@sign stored from wreg
  7440  1134  1283               	bcf	3,5	;RP0=0, select bank0
  7441  1135  1303               	bcf	3,6	;RP1=0, select bank0
  7442  1136  00A0               	movwf	___xxtofl@sign
  7443  1137                     l2950:	
  7444  1137  0820               	movf	___xxtofl@sign,w
  7445  1138  1903               	btfsc	3,2
  7446  1139  293B               	goto	u4811
  7447  113A  293C               	goto	u4810
  7448  113B                     u4811:	
  7449  113B  2950               	goto	l2956
  7450  113C                     u4810:	
  7451  113C                     l2952:	
  7452  113C  1FF5               	btfss	___xxtofl@val+3,7
  7453  113D  293F               	goto	u4821
  7454  113E  2940               	goto	u4820
  7455  113F                     u4821:	
  7456  113F  2950               	goto	l2956
  7457  1140                     u4820:	
  7458  1140                     l2954:	
  7459  1140  0972               	comf	___xxtofl@val,w
  7460  1141  00A2               	movwf	___xxtofl@arg
  7461  1142  0973               	comf	___xxtofl@val+1,w
  7462  1143  00A3               	movwf	___xxtofl@arg+1
  7463  1144  0974               	comf	___xxtofl@val+2,w
  7464  1145  00A4               	movwf	___xxtofl@arg+2
  7465  1146  0975               	comf	___xxtofl@val+3,w
  7466  1147  00A5               	movwf	___xxtofl@arg+3
  7467  1148  0AA2               	incf	___xxtofl@arg,f
  7468  1149  1903               	skipnz
  7469  114A  0AA3               	incf	___xxtofl@arg+1,f
  7470  114B  1903               	skipnz
  7471  114C  0AA4               	incf	___xxtofl@arg+2,f
  7472  114D  1903               	skipnz
  7473  114E  0AA5               	incf	___xxtofl@arg+3,f
  7474  114F  2958               	goto	l786
  7475  1150                     l2956:	
  7476  1150  0875               	movf	___xxtofl@val+3,w
  7477  1151  00A5               	movwf	___xxtofl@arg+3
  7478  1152  0874               	movf	___xxtofl@val+2,w
  7479  1153  00A4               	movwf	___xxtofl@arg+2
  7480  1154  0873               	movf	___xxtofl@val+1,w
  7481  1155  00A3               	movwf	___xxtofl@arg+1
  7482  1156  0872               	movf	___xxtofl@val,w
  7483  1157  00A2               	movwf	___xxtofl@arg
  7484  1158                     l786:	
  7485  1158  0875               	movf	___xxtofl@val+3,w
  7486  1159  0474               	iorwf	___xxtofl@val+2,w
  7487  115A  0473               	iorwf	___xxtofl@val+1,w
  7488  115B  0472               	iorwf	___xxtofl@val,w
  7489  115C  1D03               	skipz
  7490  115D  295F               	goto	u4831
  7491  115E  2960               	goto	u4830
  7492  115F                     u4831:	
  7493  115F  2969               	goto	l2962
  7494  1160                     u4830:	
  7495  1160                     l2958:	
  7496  1160  3000               	movlw	0
  7497  1161  00F5               	movwf	?___xxtofl+3
  7498  1162  3000               	movlw	0
  7499  1163  00F4               	movwf	?___xxtofl+2
  7500  1164  3000               	movlw	0
  7501  1165  00F3               	movwf	?___xxtofl+1
  7502  1166  3000               	movlw	0
  7503  1167  00F2               	movwf	?___xxtofl
  7504  1168  29EF               	goto	l788
  7505  1169                     l2962:	
  7506  1169  3096               	movlw	150
  7507  116A  00F6               	movwf	??___xxtofl
  7508  116B  0876               	movf	??___xxtofl,w
  7509  116C  00A1               	movwf	___xxtofl@exp
  7510  116D  297B               	goto	l2966
  7511  116E                     l2964:	
  7512  116E  3001               	movlw	1
  7513  116F  00F6               	movwf	??___xxtofl
  7514  1170  0876               	movf	??___xxtofl,w
  7515  1171  07A1               	addwf	___xxtofl@exp,f
  7516  1172  3001               	movlw	1
  7517  1173                     u4845:	
  7518  1173  1003               	clrc
  7519  1174  0CA5               	rrf	___xxtofl@arg+3,f
  7520  1175  0CA4               	rrf	___xxtofl@arg+2,f
  7521  1176  0CA3               	rrf	___xxtofl@arg+1,f
  7522  1177  0CA2               	rrf	___xxtofl@arg,f
  7523  1178  3EFF               	addlw	-1
  7524  1179  1D03               	skipz
  7525  117A  2973               	goto	u4845
  7526  117B                     l2966:	
  7527  117B  30FE               	movlw	254
  7528  117C  0525               	andwf	___xxtofl@arg+3,w
  7529  117D  1D03               	btfss	3,2
  7530  117E  2980               	goto	u4851
  7531  117F  2981               	goto	u4850
  7532  1180                     u4851:	
  7533  1180  296E               	goto	l2964
  7534  1181                     u4850:	
  7535  1181  299D               	goto	l792
  7536  1182                     l2968:	
  7537  1182  3001               	movlw	1
  7538  1183  00F6               	movwf	??___xxtofl
  7539  1184  0876               	movf	??___xxtofl,w
  7540  1185  07A1               	addwf	___xxtofl@exp,f
  7541  1186                     l2970:	
  7542  1186  3001               	movlw	1
  7543  1187  07A2               	addwf	___xxtofl@arg,f
  7544  1188  3000               	movlw	0
  7545  1189  1803               	skipnc
  7546  118A  3001               	movlw	1
  7547  118B  07A3               	addwf	___xxtofl@arg+1,f
  7548  118C  3000               	movlw	0
  7549  118D  1803               	skipnc
  7550  118E  3001               	movlw	1
  7551  118F  07A4               	addwf	___xxtofl@arg+2,f
  7552  1190  3000               	movlw	0
  7553  1191  1803               	skipnc
  7554  1192  3001               	movlw	1
  7555  1193  07A5               	addwf	___xxtofl@arg+3,f
  7556  1194                     l2972:	
  7557  1194  3001               	movlw	1
  7558  1195                     u4865:	
  7559  1195  1003               	clrc
  7560  1196  0CA5               	rrf	___xxtofl@arg+3,f
  7561  1197  0CA4               	rrf	___xxtofl@arg+2,f
  7562  1198  0CA3               	rrf	___xxtofl@arg+1,f
  7563  1199  0CA2               	rrf	___xxtofl@arg,f
  7564  119A  3EFF               	addlw	-1
  7565  119B  1D03               	skipz
  7566  119C  2995               	goto	u4865
  7567  119D                     l792:	
  7568  119D  30FF               	movlw	255
  7569  119E  0525               	andwf	___xxtofl@arg+3,w
  7570  119F  1D03               	btfss	3,2
  7571  11A0  29A2               	goto	u4871
  7572  11A1  29A3               	goto	u4870
  7573  11A2                     u4871:	
  7574  11A2  2982               	goto	l2968
  7575  11A3                     u4870:	
  7576  11A3  29AF               	goto	l2976
  7577  11A4                     l2974:	
  7578  11A4  3001               	movlw	1
  7579  11A5  02A1               	subwf	___xxtofl@exp,f
  7580  11A6  3001               	movlw	1
  7581  11A7  00F6               	movwf	??___xxtofl
  7582  11A8                     u4885:	
  7583  11A8  1003               	clrc
  7584  11A9  0DA2               	rlf	___xxtofl@arg,f
  7585  11AA  0DA3               	rlf	___xxtofl@arg+1,f
  7586  11AB  0DA4               	rlf	___xxtofl@arg+2,f
  7587  11AC  0DA5               	rlf	___xxtofl@arg+3,f
  7588  11AD  0BF6               	decfsz	??___xxtofl,f
  7589  11AE  29A8               	goto	u4885
  7590  11AF                     l2976:	
  7591  11AF  1BA4               	btfsc	___xxtofl@arg+2,7
  7592  11B0  29B2               	goto	u4891
  7593  11B1  29B3               	goto	u4890
  7594  11B2                     u4891:	
  7595  11B2  29B9               	goto	l799
  7596  11B3                     u4890:	
  7597  11B3                     l2978:	
  7598  11B3  3002               	movlw	2
  7599  11B4  0221               	subwf	___xxtofl@exp,w
  7600  11B5  1803               	skipnc
  7601  11B6  29B8               	goto	u4901
  7602  11B7  29B9               	goto	u4900
  7603  11B8                     u4901:	
  7604  11B8  29A4               	goto	l2974
  7605  11B9                     u4900:	
  7606  11B9                     l799:	
  7607  11B9  1821               	btfsc	___xxtofl@exp,0
  7608  11BA  29BC               	goto	u4911
  7609  11BB  29BD               	goto	u4910
  7610  11BC                     u4911:	
  7611  11BC  29C5               	goto	l800
  7612  11BD                     u4910:	
  7613  11BD                     l2980:	
  7614  11BD  30FF               	movlw	255
  7615  11BE  05A2               	andwf	___xxtofl@arg,f
  7616  11BF  30FF               	movlw	255
  7617  11C0  05A3               	andwf	___xxtofl@arg+1,f
  7618  11C1  307F               	movlw	127
  7619  11C2  05A4               	andwf	___xxtofl@arg+2,f
  7620  11C3  30FF               	movlw	255
  7621  11C4  05A5               	andwf	___xxtofl@arg+3,f
  7622  11C5                     l800:	
  7623  11C5  1003               	clrc
  7624  11C6  0CA1               	rrf	___xxtofl@exp,f
  7625  11C7                     l2982:	
  7626  11C7  0821               	movf	___xxtofl@exp,w
  7627  11C8  00F6               	movwf	??___xxtofl
  7628  11C9  01F7               	clrf	??___xxtofl+1
  7629  11CA  01F8               	clrf	??___xxtofl+2
  7630  11CB  01F9               	clrf	??___xxtofl+3
  7631  11CC  3018               	movlw	24
  7632  11CD                     u4925:	
  7633  11CD  1003               	clrc
  7634  11CE  0DF6               	rlf	??___xxtofl,f
  7635  11CF  0DF7               	rlf	??___xxtofl+1,f
  7636  11D0  0DF8               	rlf	??___xxtofl+2,f
  7637  11D1  0DF9               	rlf	??___xxtofl+3,f
  7638  11D2                     u4920:	
  7639  11D2  3EFF               	addlw	-1
  7640  11D3  1D03               	skipz
  7641  11D4  29CD               	goto	u4925
  7642  11D5  0876               	movf	??___xxtofl,w
  7643  11D6  04A2               	iorwf	___xxtofl@arg,f
  7644  11D7  0877               	movf	??___xxtofl+1,w
  7645  11D8  04A3               	iorwf	___xxtofl@arg+1,f
  7646  11D9  0878               	movf	??___xxtofl+2,w
  7647  11DA  04A4               	iorwf	___xxtofl@arg+2,f
  7648  11DB  0879               	movf	??___xxtofl+3,w
  7649  11DC  04A5               	iorwf	___xxtofl@arg+3,f
  7650  11DD                     l2984:	
  7651  11DD  0820               	movf	___xxtofl@sign,w
  7652  11DE  1903               	btfsc	3,2
  7653  11DF  29E1               	goto	u4931
  7654  11E0  29E2               	goto	u4930
  7655  11E1                     u4931:	
  7656  11E1  29E7               	goto	l2990
  7657  11E2                     u4930:	
  7658  11E2                     l2986:	
  7659  11E2  1FF5               	btfss	___xxtofl@val+3,7
  7660  11E3  29E5               	goto	u4941
  7661  11E4  29E6               	goto	u4940
  7662  11E5                     u4941:	
  7663  11E5  29E7               	goto	l2990
  7664  11E6                     u4940:	
  7665  11E6                     l2988:	
  7666  11E6  17A5               	bsf	___xxtofl@arg+3,7
  7667  11E7                     l2990:	
  7668  11E7  0825               	movf	___xxtofl@arg+3,w
  7669  11E8  00F5               	movwf	?___xxtofl+3
  7670  11E9  0824               	movf	___xxtofl@arg+2,w
  7671  11EA  00F4               	movwf	?___xxtofl+2
  7672  11EB  0823               	movf	___xxtofl@arg+1,w
  7673  11EC  00F3               	movwf	?___xxtofl+1
  7674  11ED  0822               	movf	___xxtofl@arg,w
  7675  11EE  00F2               	movwf	?___xxtofl
  7676  11EF                     l788:	
  7677  11EF  0008               	return
  7678  11F0                     __end_of___xxtofl:	
  7679                           
  7680                           	psect	text16
  7681  1B7E                     __ptext16:	
  7682 ;; *************** function ___wmul *****************
  7683 ;; Defined at:
  7684 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  7685 ;; Parameters:    Size  Location     Type
  7686 ;;  multiplier      2    2[COMMON] unsigned int 
  7687 ;;  multiplicand    2    4[COMMON] unsigned int 
  7688 ;; Auto vars:     Size  Location     Type
  7689 ;;  product         2    6[COMMON] unsigned int 
  7690 ;; Return value:  Size  Location     Type
  7691 ;;                  2    2[COMMON] unsigned int 
  7692 ;; Registers used:
  7693 ;;		wreg, status,2, status,0
  7694 ;; Tracked objects:
  7695 ;;		On entry : 0/0
  7696 ;;		On exit  : 0/0
  7697 ;;		Unchanged: 0/0
  7698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7699 ;;      Params:         4       0       0       0       0
  7700 ;;      Locals:         2       0       0       0       0
  7701 ;;      Temps:          0       0       0       0       0
  7702 ;;      Totals:         6       0       0       0       0
  7703 ;;Total ram usage:        6 bytes
  7704 ;; Hardware stack levels used:    1
  7705 ;; Hardware stack levels required when called:    1
  7706 ;; This function calls:
  7707 ;;		Nothing
  7708 ;; This function is called by:
  7709 ;;		_main
  7710 ;;		_sprintf
  7711 ;; This function uses a non-reentrant model
  7712 ;;
  7713                           
  7714                           
  7715                           ;psect for function ___wmul
  7716  1B7E                     ___wmul:	
  7717  1B7E                     l2810:	
  7718                           ;incstack = 0
  7719                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7720                           
  7721  1B7E  01F6               	clrf	___wmul@product
  7722  1B7F  01F7               	clrf	___wmul@product+1
  7723  1B80                     l2812:	
  7724  1B80  1C72               	btfss	___wmul@multiplier,0
  7725  1B81  2B83               	goto	u4431
  7726  1B82  2B84               	goto	u4430
  7727  1B83                     u4431:	
  7728  1B83  2B8A               	goto	l325
  7729  1B84                     u4430:	
  7730  1B84                     l2814:	
  7731  1B84  0874               	movf	___wmul@multiplicand,w
  7732  1B85  07F6               	addwf	___wmul@product,f
  7733  1B86  1803               	skipnc
  7734  1B87  0AF7               	incf	___wmul@product+1,f
  7735  1B88  0875               	movf	___wmul@multiplicand+1,w
  7736  1B89  07F7               	addwf	___wmul@product+1,f
  7737  1B8A                     l325:	
  7738  1B8A  3001               	movlw	1
  7739  1B8B                     u4445:	
  7740  1B8B  1003               	clrc
  7741  1B8C  0DF4               	rlf	___wmul@multiplicand,f
  7742  1B8D  0DF5               	rlf	___wmul@multiplicand+1,f
  7743  1B8E  3EFF               	addlw	-1
  7744  1B8F  1D03               	skipz
  7745  1B90  2B8B               	goto	u4445
  7746  1B91                     l2816:	
  7747  1B91  3001               	movlw	1
  7748  1B92                     u4455:	
  7749  1B92  1003               	clrc
  7750  1B93  0CF3               	rrf	___wmul@multiplier+1,f
  7751  1B94  0CF2               	rrf	___wmul@multiplier,f
  7752  1B95  3EFF               	addlw	-1
  7753  1B96  1D03               	skipz
  7754  1B97  2B92               	goto	u4455
  7755  1B98                     l2818:	
  7756  1B98  0872               	movf	___wmul@multiplier,w
  7757  1B99  0473               	iorwf	___wmul@multiplier+1,w
  7758  1B9A  1D03               	btfss	3,2
  7759  1B9B  2B9D               	goto	u4461
  7760  1B9C  2B9E               	goto	u4460
  7761  1B9D                     u4461:	
  7762  1B9D  2B80               	goto	l2812
  7763  1B9E                     u4460:	
  7764  1B9E                     l2820:	
  7765  1B9E  0877               	movf	___wmul@product+1,w
  7766  1B9F  00F3               	movwf	?___wmul+1
  7767  1BA0  0876               	movf	___wmul@product,w
  7768  1BA1  00F2               	movwf	?___wmul
  7769  1BA2                     l327:	
  7770  1BA2  0008               	return
  7771  1BA3                     __end_of___wmul:	
  7772                           
  7773                           	psect	text17
  7774  1DA7                     __ptext17:	
  7775 ;; *************** function ___llmod *****************
  7776 ;; Defined at:
  7777 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\llmod.c"
  7778 ;; Parameters:    Size  Location     Type
  7779 ;;  divisor         4    5[BANK0 ] unsigned long 
  7780 ;;  dividend        4    9[BANK0 ] unsigned long 
  7781 ;; Auto vars:     Size  Location     Type
  7782 ;;  counter         1   14[BANK0 ] unsigned char 
  7783 ;; Return value:  Size  Location     Type
  7784 ;;                  4    5[BANK0 ] unsigned long 
  7785 ;; Registers used:
  7786 ;;		wreg, status,2, status,0
  7787 ;; Tracked objects:
  7788 ;;		On entry : 0/0
  7789 ;;		On exit  : 0/0
  7790 ;;		Unchanged: 0/0
  7791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7792 ;;      Params:         0       8       0       0       0
  7793 ;;      Locals:         0       1       0       0       0
  7794 ;;      Temps:          0       1       0       0       0
  7795 ;;      Totals:         0      10       0       0       0
  7796 ;;Total ram usage:       10 bytes
  7797 ;; Hardware stack levels used:    1
  7798 ;; Hardware stack levels required when called:    1
  7799 ;; This function calls:
  7800 ;;		Nothing
  7801 ;; This function is called by:
  7802 ;;		_sprintf
  7803 ;; This function uses a non-reentrant model
  7804 ;;
  7805                           
  7806                           
  7807                           ;psect for function ___llmod
  7808  1DA7                     ___llmod:	
  7809  1DA7                     l3446:	
  7810                           ;incstack = 0
  7811                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  7812                           
  7813  1DA7  1283               	bcf	3,5	;RP0=0, select bank0
  7814  1DA8  1303               	bcf	3,6	;RP1=0, select bank0
  7815  1DA9  0828               	movf	___llmod@divisor+3,w
  7816  1DAA  0427               	iorwf	___llmod@divisor+2,w
  7817  1DAB  0426               	iorwf	___llmod@divisor+1,w
  7818  1DAC  0425               	iorwf	___llmod@divisor,w
  7819  1DAD  1903               	skipnz
  7820  1DAE  2DB0               	goto	u5581
  7821  1DAF  2DB1               	goto	u5580
  7822  1DB0                     u5581:	
  7823  1DB0  2DF4               	goto	l3462
  7824  1DB1                     u5580:	
  7825  1DB1                     l3448:	
  7826  1DB1  01AE               	clrf	___llmod@counter
  7827  1DB2  0AAE               	incf	___llmod@counter,f
  7828  1DB3  2DC1               	goto	l3452
  7829  1DB4                     l3450:	
  7830  1DB4  3001               	movlw	1
  7831  1DB5  00AD               	movwf	??___llmod
  7832  1DB6                     u5595:	
  7833  1DB6  1003               	clrc
  7834  1DB7  0DA5               	rlf	___llmod@divisor,f
  7835  1DB8  0DA6               	rlf	___llmod@divisor+1,f
  7836  1DB9  0DA7               	rlf	___llmod@divisor+2,f
  7837  1DBA  0DA8               	rlf	___llmod@divisor+3,f
  7838  1DBB  0BAD               	decfsz	??___llmod,f
  7839  1DBC  2DB6               	goto	u5595
  7840  1DBD  3001               	movlw	1
  7841  1DBE  00AD               	movwf	??___llmod
  7842  1DBF  082D               	movf	??___llmod,w
  7843  1DC0  07AE               	addwf	___llmod@counter,f
  7844  1DC1                     l3452:	
  7845  1DC1  1FA8               	btfss	___llmod@divisor+3,7
  7846  1DC2  2DC4               	goto	u5601
  7847  1DC3  2DC5               	goto	u5600
  7848  1DC4                     u5601:	
  7849  1DC4  2DB4               	goto	l3450
  7850  1DC5                     u5600:	
  7851  1DC5                     l3454:	
  7852  1DC5  0828               	movf	___llmod@divisor+3,w
  7853  1DC6  022C               	subwf	___llmod@dividend+3,w
  7854  1DC7  1D03               	skipz
  7855  1DC8  2DD3               	goto	u5615
  7856  1DC9  0827               	movf	___llmod@divisor+2,w
  7857  1DCA  022B               	subwf	___llmod@dividend+2,w
  7858  1DCB  1D03               	skipz
  7859  1DCC  2DD3               	goto	u5615
  7860  1DCD  0826               	movf	___llmod@divisor+1,w
  7861  1DCE  022A               	subwf	___llmod@dividend+1,w
  7862  1DCF  1D03               	skipz
  7863  1DD0  2DD3               	goto	u5615
  7864  1DD1  0825               	movf	___llmod@divisor,w
  7865  1DD2  0229               	subwf	___llmod@dividend,w
  7866  1DD3                     u5615:	
  7867  1DD3  1C03               	skipc
  7868  1DD4  2DD6               	goto	u5611
  7869  1DD5  2DD7               	goto	u5610
  7870  1DD6                     u5611:	
  7871  1DD6  2DE5               	goto	l3458
  7872  1DD7                     u5610:	
  7873  1DD7                     l3456:	
  7874  1DD7  0825               	movf	___llmod@divisor,w
  7875  1DD8  02A9               	subwf	___llmod@dividend,f
  7876  1DD9  0826               	movf	___llmod@divisor+1,w
  7877  1DDA  1C03               	skipc
  7878  1DDB  0F26               	incfsz	___llmod@divisor+1,w
  7879  1DDC  02AA               	subwf	___llmod@dividend+1,f
  7880  1DDD  0827               	movf	___llmod@divisor+2,w
  7881  1DDE  1C03               	skipc
  7882  1DDF  0F27               	incfsz	___llmod@divisor+2,w
  7883  1DE0  02AB               	subwf	___llmod@dividend+2,f
  7884  1DE1  0828               	movf	___llmod@divisor+3,w
  7885  1DE2  1C03               	skipc
  7886  1DE3  0F28               	incfsz	___llmod@divisor+3,w
  7887  1DE4  02AC               	subwf	___llmod@dividend+3,f
  7888  1DE5                     l3458:	
  7889  1DE5  3001               	movlw	1
  7890  1DE6                     u5625:	
  7891  1DE6  1003               	clrc
  7892  1DE7  0CA8               	rrf	___llmod@divisor+3,f
  7893  1DE8  0CA7               	rrf	___llmod@divisor+2,f
  7894  1DE9  0CA6               	rrf	___llmod@divisor+1,f
  7895  1DEA  0CA5               	rrf	___llmod@divisor,f
  7896  1DEB  3EFF               	addlw	-1
  7897  1DEC  1D03               	skipz
  7898  1DED  2DE6               	goto	u5625
  7899  1DEE                     l3460:	
  7900  1DEE  3001               	movlw	1
  7901  1DEF  02AE               	subwf	___llmod@counter,f
  7902  1DF0  1D03               	btfss	3,2
  7903  1DF1  2DF3               	goto	u5631
  7904  1DF2  2DF4               	goto	u5630
  7905  1DF3                     u5631:	
  7906  1DF3  2DC5               	goto	l3454
  7907  1DF4                     u5630:	
  7908  1DF4                     l3462:	
  7909  1DF4  082C               	movf	___llmod@dividend+3,w
  7910  1DF5  00A8               	movwf	?___llmod+3
  7911  1DF6  082B               	movf	___llmod@dividend+2,w
  7912  1DF7  00A7               	movwf	?___llmod+2
  7913  1DF8  082A               	movf	___llmod@dividend+1,w
  7914  1DF9  00A6               	movwf	?___llmod+1
  7915  1DFA  0829               	movf	___llmod@dividend,w
  7916  1DFB  00A5               	movwf	?___llmod
  7917  1DFC                     l581:	
  7918  1DFC  0008               	return
  7919  1DFD                     __end_of___llmod:	
  7920                           
  7921                           	psect	text18
  7922  1E56                     __ptext18:	
  7923 ;; *************** function ___lldiv *****************
  7924 ;; Defined at:
  7925 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  7926 ;; Parameters:    Size  Location     Type
  7927 ;;  divisor         4    2[COMMON] unsigned long 
  7928 ;;  dividend        4    6[COMMON] unsigned long 
  7929 ;; Auto vars:     Size  Location     Type
  7930 ;;  quotient        4    0[BANK0 ] unsigned long 
  7931 ;;  counter         1    4[BANK0 ] unsigned char 
  7932 ;; Return value:  Size  Location     Type
  7933 ;;                  4    2[COMMON] unsigned long 
  7934 ;; Registers used:
  7935 ;;		wreg, status,2, status,0
  7936 ;; Tracked objects:
  7937 ;;		On entry : 0/0
  7938 ;;		On exit  : 0/0
  7939 ;;		Unchanged: 0/0
  7940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7941 ;;      Params:         8       0       0       0       0
  7942 ;;      Locals:         0       5       0       0       0
  7943 ;;      Temps:          1       0       0       0       0
  7944 ;;      Totals:         9       5       0       0       0
  7945 ;;Total ram usage:       14 bytes
  7946 ;; Hardware stack levels used:    1
  7947 ;; Hardware stack levels required when called:    1
  7948 ;; This function calls:
  7949 ;;		Nothing
  7950 ;; This function is called by:
  7951 ;;		_sprintf
  7952 ;; This function uses a non-reentrant model
  7953 ;;
  7954                           
  7955                           
  7956                           ;psect for function ___lldiv
  7957  1E56                     ___lldiv:	
  7958  1E56                     l2824:	
  7959                           ;incstack = 0
  7960                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7961                           
  7962  1E56  3000               	movlw	0
  7963  1E57  1283               	bcf	3,5	;RP0=0, select bank0
  7964  1E58  1303               	bcf	3,6	;RP1=0, select bank0
  7965  1E59  00A3               	movwf	___lldiv@quotient+3
  7966  1E5A  3000               	movlw	0
  7967  1E5B  00A2               	movwf	___lldiv@quotient+2
  7968  1E5C  3000               	movlw	0
  7969  1E5D  00A1               	movwf	___lldiv@quotient+1
  7970  1E5E  3000               	movlw	0
  7971  1E5F  00A0               	movwf	___lldiv@quotient
  7972  1E60  0875               	movf	___lldiv@divisor+3,w
  7973  1E61  0474               	iorwf	___lldiv@divisor+2,w
  7974  1E62  0473               	iorwf	___lldiv@divisor+1,w
  7975  1E63  0472               	iorwf	___lldiv@divisor,w
  7976  1E64  1903               	skipnz
  7977  1E65  2E67               	goto	u4471
  7978  1E66  2E68               	goto	u4470
  7979  1E67                     u4471:	
  7980  1E67  2EB5               	goto	l2844
  7981  1E68                     u4470:	
  7982  1E68                     l2826:	
  7983  1E68  01A4               	clrf	___lldiv@counter
  7984  1E69  0AA4               	incf	___lldiv@counter,f
  7985  1E6A  2E78               	goto	l2830
  7986  1E6B                     l2828:	
  7987  1E6B  3001               	movlw	1
  7988  1E6C  00FA               	movwf	??___lldiv
  7989  1E6D                     u4485:	
  7990  1E6D  1003               	clrc
  7991  1E6E  0DF2               	rlf	___lldiv@divisor,f
  7992  1E6F  0DF3               	rlf	___lldiv@divisor+1,f
  7993  1E70  0DF4               	rlf	___lldiv@divisor+2,f
  7994  1E71  0DF5               	rlf	___lldiv@divisor+3,f
  7995  1E72  0BFA               	decfsz	??___lldiv,f
  7996  1E73  2E6D               	goto	u4485
  7997  1E74  3001               	movlw	1
  7998  1E75  00FA               	movwf	??___lldiv
  7999  1E76  087A               	movf	??___lldiv,w
  8000  1E77  07A4               	addwf	___lldiv@counter,f
  8001  1E78                     l2830:	
  8002  1E78  1FF5               	btfss	___lldiv@divisor+3,7
  8003  1E79  2E7B               	goto	u4491
  8004  1E7A  2E7C               	goto	u4490
  8005  1E7B                     u4491:	
  8006  1E7B  2E6B               	goto	l2828
  8007  1E7C                     u4490:	
  8008  1E7C                     l2832:	
  8009  1E7C  3001               	movlw	1
  8010  1E7D  00FA               	movwf	??___lldiv
  8011  1E7E                     u4505:	
  8012  1E7E  1003               	clrc
  8013  1E7F  0DA0               	rlf	___lldiv@quotient,f
  8014  1E80  0DA1               	rlf	___lldiv@quotient+1,f
  8015  1E81  0DA2               	rlf	___lldiv@quotient+2,f
  8016  1E82  0DA3               	rlf	___lldiv@quotient+3,f
  8017  1E83  0BFA               	decfsz	??___lldiv,f
  8018  1E84  2E7E               	goto	u4505
  8019  1E85                     l2834:	
  8020  1E85  0875               	movf	___lldiv@divisor+3,w
  8021  1E86  0279               	subwf	___lldiv@dividend+3,w
  8022  1E87  1D03               	skipz
  8023  1E88  2E93               	goto	u4515
  8024  1E89  0874               	movf	___lldiv@divisor+2,w
  8025  1E8A  0278               	subwf	___lldiv@dividend+2,w
  8026  1E8B  1D03               	skipz
  8027  1E8C  2E93               	goto	u4515
  8028  1E8D  0873               	movf	___lldiv@divisor+1,w
  8029  1E8E  0277               	subwf	___lldiv@dividend+1,w
  8030  1E8F  1D03               	skipz
  8031  1E90  2E93               	goto	u4515
  8032  1E91  0872               	movf	___lldiv@divisor,w
  8033  1E92  0276               	subwf	___lldiv@dividend,w
  8034  1E93                     u4515:	
  8035  1E93  1C03               	skipc
  8036  1E94  2E96               	goto	u4511
  8037  1E95  2E97               	goto	u4510
  8038  1E96                     u4511:	
  8039  1E96  2EA6               	goto	l2840
  8040  1E97                     u4510:	
  8041  1E97                     l2836:	
  8042  1E97  0872               	movf	___lldiv@divisor,w
  8043  1E98  02F6               	subwf	___lldiv@dividend,f
  8044  1E99  0873               	movf	___lldiv@divisor+1,w
  8045  1E9A  1C03               	skipc
  8046  1E9B  0F73               	incfsz	___lldiv@divisor+1,w
  8047  1E9C  02F7               	subwf	___lldiv@dividend+1,f
  8048  1E9D  0874               	movf	___lldiv@divisor+2,w
  8049  1E9E  1C03               	skipc
  8050  1E9F  0F74               	incfsz	___lldiv@divisor+2,w
  8051  1EA0  02F8               	subwf	___lldiv@dividend+2,f
  8052  1EA1  0875               	movf	___lldiv@divisor+3,w
  8053  1EA2  1C03               	skipc
  8054  1EA3  0F75               	incfsz	___lldiv@divisor+3,w
  8055  1EA4  02F9               	subwf	___lldiv@dividend+3,f
  8056  1EA5                     l2838:	
  8057  1EA5  1420               	bsf	___lldiv@quotient,0
  8058  1EA6                     l2840:	
  8059  1EA6  3001               	movlw	1
  8060  1EA7                     u4525:	
  8061  1EA7  1003               	clrc
  8062  1EA8  0CF5               	rrf	___lldiv@divisor+3,f
  8063  1EA9  0CF4               	rrf	___lldiv@divisor+2,f
  8064  1EAA  0CF3               	rrf	___lldiv@divisor+1,f
  8065  1EAB  0CF2               	rrf	___lldiv@divisor,f
  8066  1EAC  3EFF               	addlw	-1
  8067  1EAD  1D03               	skipz
  8068  1EAE  2EA7               	goto	u4525
  8069  1EAF                     l2842:	
  8070  1EAF  3001               	movlw	1
  8071  1EB0  02A4               	subwf	___lldiv@counter,f
  8072  1EB1  1D03               	btfss	3,2
  8073  1EB2  2EB4               	goto	u4531
  8074  1EB3  2EB5               	goto	u4530
  8075  1EB4                     u4531:	
  8076  1EB4  2E7C               	goto	l2832
  8077  1EB5                     u4530:	
  8078  1EB5                     l2844:	
  8079  1EB5  0823               	movf	___lldiv@quotient+3,w
  8080  1EB6  00F5               	movwf	?___lldiv+3
  8081  1EB7  0822               	movf	___lldiv@quotient+2,w
  8082  1EB8  00F4               	movwf	?___lldiv+2
  8083  1EB9  0821               	movf	___lldiv@quotient+1,w
  8084  1EBA  00F3               	movwf	?___lldiv+1
  8085  1EBB  0820               	movf	___lldiv@quotient,w
  8086  1EBC  00F2               	movwf	?___lldiv
  8087  1EBD                     l361:	
  8088  1EBD  0008               	return
  8089  1EBE                     __end_of___lldiv:	
  8090                           
  8091                           	psect	text19
  8092  10B8                     __ptext19:	
  8093 ;; *************** function ___fltol *****************
  8094 ;; Defined at:
  8095 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fltol.c"
  8096 ;; Parameters:    Size  Location     Type
  8097 ;;  f1              4   53[BANK0 ] unsigned long 
  8098 ;; Auto vars:     Size  Location     Type
  8099 ;;  exp1            1   63[BANK0 ] unsigned char 
  8100 ;;  sign1           1   62[BANK0 ] unsigned char 
  8101 ;; Return value:  Size  Location     Type
  8102 ;;                  4   53[BANK0 ] long 
  8103 ;; Registers used:
  8104 ;;		wreg, status,2, status,0
  8105 ;; Tracked objects:
  8106 ;;		On entry : 0/0
  8107 ;;		On exit  : 0/0
  8108 ;;		Unchanged: 0/0
  8109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8110 ;;      Params:         0       4       0       0       0
  8111 ;;      Locals:         0       2       0       0       0
  8112 ;;      Temps:          0       5       0       0       0
  8113 ;;      Totals:         0      11       0       0       0
  8114 ;;Total ram usage:       11 bytes
  8115 ;; Hardware stack levels used:    1
  8116 ;; Hardware stack levels required when called:    1
  8117 ;; This function calls:
  8118 ;;		Nothing
  8119 ;; This function is called by:
  8120 ;;		_sprintf
  8121 ;; This function uses a non-reentrant model
  8122 ;;
  8123                           
  8124                           
  8125                           ;psect for function ___fltol
  8126  10B8                     ___fltol:	
  8127  10B8                     l2888:	
  8128                           ;incstack = 0
  8129                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  8130                           
  8131  10B8  1003               	clrc
  8132  10B9  1283               	bcf	3,5	;RP0=0, select bank0
  8133  10BA  1303               	bcf	3,6	;RP1=0, select bank0
  8134  10BB  0D57               	rlf	___fltol@f1+2,w
  8135  10BC  0D58               	rlf	___fltol@f1+3,w
  8136  10BD  00D9               	movwf	??___fltol
  8137  10BE  0859               	movf	??___fltol,w
  8138  10BF  00DF               	movwf	___fltol@exp1
  8139  10C0  085F               	movf	___fltol@exp1,w
  8140  10C1  1D03               	btfss	3,2
  8141  10C2  28C4               	goto	u4651
  8142  10C3  28C5               	goto	u4650
  8143  10C4                     u4651:	
  8144  10C4  28CE               	goto	l2894
  8145  10C5                     u4650:	
  8146  10C5                     l2890:	
  8147  10C5  3000               	movlw	0
  8148  10C6  00D8               	movwf	?___fltol+3
  8149  10C7  3000               	movlw	0
  8150  10C8  00D7               	movwf	?___fltol+2
  8151  10C9  3000               	movlw	0
  8152  10CA  00D6               	movwf	?___fltol+1
  8153  10CB  3000               	movlw	0
  8154  10CC  00D5               	movwf	?___fltol
  8155  10CD  2933               	goto	l528
  8156  10CE                     l2894:	
  8157  10CE  0855               	movf	___fltol@f1,w
  8158  10CF  00D9               	movwf	??___fltol
  8159  10D0  0856               	movf	___fltol@f1+1,w
  8160  10D1  00DA               	movwf	??___fltol+1
  8161  10D2  0857               	movf	___fltol@f1+2,w
  8162  10D3  00DB               	movwf	??___fltol+2
  8163  10D4  0858               	movf	___fltol@f1+3,w
  8164  10D5  00DC               	movwf	??___fltol+3
  8165  10D6  301F               	movlw	31
  8166  10D7                     u4665:	
  8167  10D7  1003               	clrc
  8168  10D8  0CDC               	rrf	??___fltol+3,f
  8169  10D9  0CDB               	rrf	??___fltol+2,f
  8170  10DA  0CDA               	rrf	??___fltol+1,f
  8171  10DB  0CD9               	rrf	??___fltol,f
  8172  10DC                     u4660:	
  8173  10DC  3EFF               	addlw	-1
  8174  10DD  1D03               	skipz
  8175  10DE  28D7               	goto	u4665
  8176  10DF  0859               	movf	??___fltol,w
  8177  10E0  00DD               	movwf	??___fltol+4
  8178  10E1  085D               	movf	??___fltol+4,w
  8179  10E2  00DE               	movwf	___fltol@sign1
  8180  10E3                     l2896:	
  8181  10E3  17D7               	bsf	___fltol@f1+2,7
  8182  10E4                     l2898:	
  8183  10E4  30FF               	movlw	255
  8184  10E5  05D5               	andwf	___fltol@f1,f
  8185  10E6  30FF               	movlw	255
  8186  10E7  05D6               	andwf	___fltol@f1+1,f
  8187  10E8  30FF               	movlw	255
  8188  10E9  05D7               	andwf	___fltol@f1+2,f
  8189  10EA  3000               	movlw	0
  8190  10EB  05D8               	andwf	___fltol@f1+3,f
  8191  10EC                     l2900:	
  8192  10EC  3096               	movlw	150
  8193  10ED  02DF               	subwf	___fltol@exp1,f
  8194  10EE                     l2902:	
  8195  10EE  1FDF               	btfss	___fltol@exp1,7
  8196  10EF  28F1               	goto	u4671
  8197  10F0  28F2               	goto	u4670
  8198  10F1                     u4671:	
  8199  10F1  290C               	goto	l2912
  8200  10F2                     u4670:	
  8201  10F2                     l2904:	
  8202  10F2  085F               	movf	___fltol@exp1,w
  8203  10F3  3A80               	xorlw	128
  8204  10F4  3E97               	addlw	151
  8205  10F5  1803               	skipnc
  8206  10F6  28F8               	goto	u4681
  8207  10F7  28F9               	goto	u4680
  8208  10F8                     u4681:	
  8209  10F8  28FA               	goto	l2910
  8210  10F9                     u4680:	
  8211  10F9  28C5               	goto	l2890
  8212  10FA                     l2910:	
  8213  10FA  3001               	movlw	1
  8214  10FB                     u4695:	
  8215  10FB  1003               	clrc
  8216  10FC  0CD8               	rrf	___fltol@f1+3,f
  8217  10FD  0CD7               	rrf	___fltol@f1+2,f
  8218  10FE  0CD6               	rrf	___fltol@f1+1,f
  8219  10FF  0CD5               	rrf	___fltol@f1,f
  8220  1100  3EFF               	addlw	-1
  8221  1101  1D03               	skipz
  8222  1102  28FB               	goto	u4695
  8223  1103  3001               	movlw	1
  8224  1104  00D9               	movwf	??___fltol
  8225  1105  0859               	movf	??___fltol,w
  8226  1106  07DF               	addwf	___fltol@exp1,f
  8227  1107  1D03               	btfss	3,2
  8228  1108  290A               	goto	u4701
  8229  1109  290B               	goto	u4700
  8230  110A                     u4701:	
  8231  110A  28FA               	goto	l2910
  8232  110B                     u4700:	
  8233  110B  2923               	goto	l2920
  8234  110C                     l2912:	
  8235  110C  3020               	movlw	32
  8236  110D  025F               	subwf	___fltol@exp1,w
  8237  110E  1C03               	skipc
  8238  110F  2911               	goto	u4711
  8239  1110  2912               	goto	u4710
  8240  1111                     u4711:	
  8241  1111  291E               	goto	l535
  8242  1112                     u4710:	
  8243  1112  28C5               	goto	l2890
  8244  1113                     l2918:	
  8245  1113  3001               	movlw	1
  8246  1114  00D9               	movwf	??___fltol
  8247  1115                     u4725:	
  8248  1115  1003               	clrc
  8249  1116  0DD5               	rlf	___fltol@f1,f
  8250  1117  0DD6               	rlf	___fltol@f1+1,f
  8251  1118  0DD7               	rlf	___fltol@f1+2,f
  8252  1119  0DD8               	rlf	___fltol@f1+3,f
  8253  111A  0BD9               	decfsz	??___fltol,f
  8254  111B  2915               	goto	u4725
  8255  111C  3001               	movlw	1
  8256  111D  02DF               	subwf	___fltol@exp1,f
  8257  111E                     l535:	
  8258  111E  085F               	movf	___fltol@exp1,w
  8259  111F  1D03               	btfss	3,2
  8260  1120  2922               	goto	u4731
  8261  1121  2923               	goto	u4730
  8262  1122                     u4731:	
  8263  1122  2913               	goto	l2918
  8264  1123                     u4730:	
  8265  1123                     l2920:	
  8266  1123  085E               	movf	___fltol@sign1,w
  8267  1124  1903               	btfsc	3,2
  8268  1125  2927               	goto	u4741
  8269  1126  2928               	goto	u4740
  8270  1127                     u4741:	
  8271  1127  2933               	goto	l538
  8272  1128                     u4740:	
  8273  1128                     l2922:	
  8274  1128  09D5               	comf	___fltol@f1,f
  8275  1129  09D6               	comf	___fltol@f1+1,f
  8276  112A  09D7               	comf	___fltol@f1+2,f
  8277  112B  09D8               	comf	___fltol@f1+3,f
  8278  112C  0AD5               	incf	___fltol@f1,f
  8279  112D  1903               	skipnz
  8280  112E  0AD6               	incf	___fltol@f1+1,f
  8281  112F  1903               	skipnz
  8282  1130  0AD7               	incf	___fltol@f1+2,f
  8283  1131  1903               	skipnz
  8284  1132  0AD8               	incf	___fltol@f1+3,f
  8285  1133                     l538:	
  8286  1133                     l528:	
  8287  1133  0008               	return
  8288  1134                     __end_of___fltol:	
  8289                           
  8290                           	psect	text20
  8291  1D57                     __ptext20:	
  8292 ;; *************** function ___flsub *****************
  8293 ;; Defined at:
  8294 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  8295 ;; Parameters:    Size  Location     Type
  8296 ;;  a               4    0[BANK1 ] long 
  8297 ;;  b               4    4[BANK1 ] long 
  8298 ;; Auto vars:     Size  Location     Type
  8299 ;;		None
  8300 ;; Return value:  Size  Location     Type
  8301 ;;                  4    0[BANK1 ] long 
  8302 ;; Registers used:
  8303 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8304 ;; Tracked objects:
  8305 ;;		On entry : 0/0
  8306 ;;		On exit  : 0/0
  8307 ;;		Unchanged: 0/0
  8308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8309 ;;      Params:         0       0       8       0       0
  8310 ;;      Locals:         0       0       0       0       0
  8311 ;;      Temps:          0       0       0       0       0
  8312 ;;      Totals:         0       0       8       0       0
  8313 ;;Total ram usage:        8 bytes
  8314 ;; Hardware stack levels used:    1
  8315 ;; Hardware stack levels required when called:    2
  8316 ;; This function calls:
  8317 ;;		___fladd
  8318 ;; This function is called by:
  8319 ;;		_sprintf
  8320 ;; This function uses a non-reentrant model
  8321 ;;
  8322                           
  8323                           
  8324                           ;psect for function ___flsub
  8325  1D57                     ___flsub:	
  8326  1D57                     l2944:	
  8327                           ;incstack = 0
  8328                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8329                           
  8330  1D57  3080               	movlw	128
  8331  1D58  1683               	bsf	3,5	;RP0=1, select bank1
  8332  1D59  1303               	bcf	3,6	;RP1=0, select bank1
  8333  1D5A  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  8334  1D5B                     l2946:	
  8335  1D5B  0827               	movf	(___flsub@b+3)^(0+128),w
  8336  1D5C  1283               	bcf	3,5	;RP0=0, select bank0
  8337  1D5D  1303               	bcf	3,6	;RP1=0, select bank0
  8338  1D5E  00D9               	movwf	___fladd@b+3
  8339  1D5F  1683               	bsf	3,5	;RP0=1, select bank1
  8340  1D60  1303               	bcf	3,6	;RP1=0, select bank1
  8341  1D61  0826               	movf	(___flsub@b+2)^(0+128),w
  8342  1D62  1283               	bcf	3,5	;RP0=0, select bank0
  8343  1D63  1303               	bcf	3,6	;RP1=0, select bank0
  8344  1D64  00D8               	movwf	___fladd@b+2
  8345  1D65  1683               	bsf	3,5	;RP0=1, select bank1
  8346  1D66  1303               	bcf	3,6	;RP1=0, select bank1
  8347  1D67  0825               	movf	(___flsub@b+1)^(0+128),w
  8348  1D68  1283               	bcf	3,5	;RP0=0, select bank0
  8349  1D69  1303               	bcf	3,6	;RP1=0, select bank0
  8350  1D6A  00D7               	movwf	___fladd@b+1
  8351  1D6B  1683               	bsf	3,5	;RP0=1, select bank1
  8352  1D6C  1303               	bcf	3,6	;RP1=0, select bank1
  8353  1D6D  0824               	movf	___flsub@b^(0+128),w
  8354  1D6E  1283               	bcf	3,5	;RP0=0, select bank0
  8355  1D6F  1303               	bcf	3,6	;RP1=0, select bank0
  8356  1D70  00D6               	movwf	___fladd@b
  8357  1D71  1683               	bsf	3,5	;RP0=1, select bank1
  8358  1D72  1303               	bcf	3,6	;RP1=0, select bank1
  8359  1D73  0823               	movf	(___flsub@a+3)^(0+128),w
  8360  1D74  1283               	bcf	3,5	;RP0=0, select bank0
  8361  1D75  1303               	bcf	3,6	;RP1=0, select bank0
  8362  1D76  00DD               	movwf	___fladd@a+3
  8363  1D77  1683               	bsf	3,5	;RP0=1, select bank1
  8364  1D78  1303               	bcf	3,6	;RP1=0, select bank1
  8365  1D79  0822               	movf	(___flsub@a+2)^(0+128),w
  8366  1D7A  1283               	bcf	3,5	;RP0=0, select bank0
  8367  1D7B  1303               	bcf	3,6	;RP1=0, select bank0
  8368  1D7C  00DC               	movwf	___fladd@a+2
  8369  1D7D  1683               	bsf	3,5	;RP0=1, select bank1
  8370  1D7E  1303               	bcf	3,6	;RP1=0, select bank1
  8371  1D7F  0821               	movf	(___flsub@a+1)^(0+128),w
  8372  1D80  1283               	bcf	3,5	;RP0=0, select bank0
  8373  1D81  1303               	bcf	3,6	;RP1=0, select bank0
  8374  1D82  00DB               	movwf	___fladd@a+1
  8375  1D83  1683               	bsf	3,5	;RP0=1, select bank1
  8376  1D84  1303               	bcf	3,6	;RP1=0, select bank1
  8377  1D85  0820               	movf	___flsub@a^(0+128),w
  8378  1D86  1283               	bcf	3,5	;RP0=0, select bank0
  8379  1D87  1303               	bcf	3,6	;RP1=0, select bank0
  8380  1D88  00DA               	movwf	___fladd@a
  8381  1D89  160A  118A  2578  160A  158A  	fcall	___fladd
  8382  1D8E  1283               	bcf	3,5	;RP0=0, select bank0
  8383  1D8F  1303               	bcf	3,6	;RP1=0, select bank0
  8384  1D90  0859               	movf	?___fladd+3,w
  8385  1D91  1683               	bsf	3,5	;RP0=1, select bank1
  8386  1D92  1303               	bcf	3,6	;RP1=0, select bank1
  8387  1D93  00A3               	movwf	(?___flsub+3)^(0+128)
  8388  1D94  1283               	bcf	3,5	;RP0=0, select bank0
  8389  1D95  1303               	bcf	3,6	;RP1=0, select bank0
  8390  1D96  0858               	movf	?___fladd+2,w
  8391  1D97  1683               	bsf	3,5	;RP0=1, select bank1
  8392  1D98  1303               	bcf	3,6	;RP1=0, select bank1
  8393  1D99  00A2               	movwf	(?___flsub+2)^(0+128)
  8394  1D9A  1283               	bcf	3,5	;RP0=0, select bank0
  8395  1D9B  1303               	bcf	3,6	;RP1=0, select bank0
  8396  1D9C  0857               	movf	?___fladd+1,w
  8397  1D9D  1683               	bsf	3,5	;RP0=1, select bank1
  8398  1D9E  1303               	bcf	3,6	;RP1=0, select bank1
  8399  1D9F  00A1               	movwf	(?___flsub+1)^(0+128)
  8400  1DA0  1283               	bcf	3,5	;RP0=0, select bank0
  8401  1DA1  1303               	bcf	3,6	;RP1=0, select bank0
  8402  1DA2  0856               	movf	?___fladd,w
  8403  1DA3  1683               	bsf	3,5	;RP0=1, select bank1
  8404  1DA4  1303               	bcf	3,6	;RP1=0, select bank1
  8405  1DA5  00A0               	movwf	?___flsub^(0+128)
  8406  1DA6                     l698:	
  8407  1DA6  0008               	return
  8408  1DA7                     __end_of___flsub:	
  8409                           
  8410                           	psect	text21
  8411  1578                     __ptext21:	
  8412 ;; *************** function ___fladd *****************
  8413 ;; Defined at:
  8414 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  8415 ;; Parameters:    Size  Location     Type
  8416 ;;  b               4   54[BANK0 ] long 
  8417 ;;  a               4   58[BANK0 ] long 
  8418 ;; Auto vars:     Size  Location     Type
  8419 ;;  grs             1   73[BANK0 ] unsigned char 
  8420 ;;  bexp            1   72[BANK0 ] unsigned char 
  8421 ;;  aexp            1   71[BANK0 ] unsigned char 
  8422 ;;  signs           1   70[BANK0 ] unsigned char 
  8423 ;; Return value:  Size  Location     Type
  8424 ;;                  4   54[BANK0 ] unsigned char 
  8425 ;; Registers used:
  8426 ;;		wreg, status,2, status,0, btemp+1
  8427 ;; Tracked objects:
  8428 ;;		On entry : 0/0
  8429 ;;		On exit  : 0/0
  8430 ;;		Unchanged: 0/0
  8431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8432 ;;      Params:         0       8       0       0       0
  8433 ;;      Locals:         0       4       0       0       0
  8434 ;;      Temps:          0       8       0       0       0
  8435 ;;      Totals:         0      20       0       0       0
  8436 ;;Total ram usage:       20 bytes
  8437 ;; Hardware stack levels used:    1
  8438 ;; Hardware stack levels required when called:    1
  8439 ;; This function calls:
  8440 ;;		Nothing
  8441 ;; This function is called by:
  8442 ;;		_sprintf
  8443 ;;		___flsub
  8444 ;; This function uses a non-reentrant model
  8445 ;;
  8446                           
  8447                           
  8448                           ;psect for function ___fladd
  8449  1578                     ___fladd:	
  8450  1578                     l2294:	
  8451                           ;incstack = 0
  8452                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  8453                           
  8454  1578  1283               	bcf	3,5	;RP0=0, select bank0
  8455  1579  1303               	bcf	3,6	;RP1=0, select bank0
  8456  157A  0859               	movf	___fladd@b+3,w
  8457  157B  3980               	andlw	128
  8458  157C  00DE               	movwf	??___fladd
  8459  157D  085E               	movf	??___fladd,w
  8460  157E  00E6               	movwf	___fladd@signs
  8461  157F                     l2296:	
  8462  157F  0859               	movf	___fladd@b+3,w
  8463  1580  00DE               	movwf	??___fladd
  8464  1581  075E               	addwf	??___fladd,w
  8465  1582  00DF               	movwf	??___fladd+1
  8466  1583  085F               	movf	??___fladd+1,w
  8467  1584  00E8               	movwf	___fladd@bexp
  8468  1585                     l2298:	
  8469  1585  1FD8               	btfss	___fladd@b+2,7
  8470  1586  2D88               	goto	u3071
  8471  1587  2D89               	goto	u3070
  8472  1588                     u3071:	
  8473  1588  2D8A               	goto	l2302
  8474  1589                     u3070:	
  8475  1589                     l2300:	
  8476  1589  1468               	bsf	___fladd@bexp,0
  8477  158A                     l2302:	
  8478  158A  0868               	movf	___fladd@bexp,w
  8479  158B  1903               	btfsc	3,2
  8480  158C  2D8E               	goto	u3081
  8481  158D  2D8F               	goto	u3080
  8482  158E                     u3081:	
  8483  158E  2D9F               	goto	l2312
  8484  158F                     u3080:	
  8485  158F                     l2304:	
  8486  158F  0A68               	incf	___fladd@bexp,w
  8487  1590  1D03               	btfss	3,2
  8488  1591  2D93               	goto	u3091
  8489  1592  2D94               	goto	u3090
  8490  1593                     u3091:	
  8491  1593  2D9C               	goto	l2308
  8492  1594                     u3090:	
  8493  1594                     l2306:	
  8494  1594  3000               	movlw	0
  8495  1595  00D9               	movwf	___fladd@b+3
  8496  1596  3000               	movlw	0
  8497  1597  00D8               	movwf	___fladd@b+2
  8498  1598  3000               	movlw	0
  8499  1599  00D7               	movwf	___fladd@b+1
  8500  159A  3000               	movlw	0
  8501  159B  00D6               	movwf	___fladd@b
  8502  159C                     l2308:	
  8503  159C  17D8               	bsf	___fladd@b+2,7
  8504  159D                     l2310:	
  8505  159D  01D9               	clrf	___fladd@b+3
  8506  159E  2DA7               	goto	l2314
  8507  159F                     l2312:	
  8508  159F  3000               	movlw	0
  8509  15A0  00D9               	movwf	___fladd@b+3
  8510  15A1  3000               	movlw	0
  8511  15A2  00D8               	movwf	___fladd@b+2
  8512  15A3  3000               	movlw	0
  8513  15A4  00D7               	movwf	___fladd@b+1
  8514  15A5  3000               	movlw	0
  8515  15A6  00D6               	movwf	___fladd@b
  8516  15A7                     l2314:	
  8517  15A7  085D               	movf	___fladd@a+3,w
  8518  15A8  3980               	andlw	128
  8519  15A9  00DE               	movwf	??___fladd
  8520  15AA  085E               	movf	??___fladd,w
  8521  15AB  00E7               	movwf	___fladd@aexp
  8522  15AC                     l2316:	
  8523  15AC  0867               	movf	___fladd@aexp,w
  8524  15AD  0666               	xorwf	___fladd@signs,w
  8525  15AE  1903               	skipnz
  8526  15AF  2DB1               	goto	u3101
  8527  15B0  2DB2               	goto	u3100
  8528  15B1                     u3101:	
  8529  15B1  2DB3               	goto	l2320
  8530  15B2                     u3100:	
  8531  15B2                     l2318:	
  8532  15B2  1766               	bsf	___fladd@signs,6
  8533  15B3                     l2320:	
  8534  15B3  085D               	movf	___fladd@a+3,w
  8535  15B4  00DE               	movwf	??___fladd
  8536  15B5  075E               	addwf	??___fladd,w
  8537  15B6  00DF               	movwf	??___fladd+1
  8538  15B7  085F               	movf	??___fladd+1,w
  8539  15B8  00E7               	movwf	___fladd@aexp
  8540  15B9                     l2322:	
  8541  15B9  1FDC               	btfss	___fladd@a+2,7
  8542  15BA  2DBC               	goto	u3111
  8543  15BB  2DBD               	goto	u3110
  8544  15BC                     u3111:	
  8545  15BC  2DBE               	goto	l2326
  8546  15BD                     u3110:	
  8547  15BD                     l2324:	
  8548  15BD  1467               	bsf	___fladd@aexp,0
  8549  15BE                     l2326:	
  8550  15BE  0867               	movf	___fladd@aexp,w
  8551  15BF  1903               	btfsc	3,2
  8552  15C0  2DC2               	goto	u3121
  8553  15C1  2DC3               	goto	u3120
  8554  15C2                     u3121:	
  8555  15C2  2DD3               	goto	l2336
  8556  15C3                     u3120:	
  8557  15C3                     l2328:	
  8558  15C3  0A67               	incf	___fladd@aexp,w
  8559  15C4  1D03               	btfss	3,2
  8560  15C5  2DC7               	goto	u3131
  8561  15C6  2DC8               	goto	u3130
  8562  15C7                     u3131:	
  8563  15C7  2DD0               	goto	l2332
  8564  15C8                     u3130:	
  8565  15C8                     l2330:	
  8566  15C8  3000               	movlw	0
  8567  15C9  00DD               	movwf	___fladd@a+3
  8568  15CA  3000               	movlw	0
  8569  15CB  00DC               	movwf	___fladd@a+2
  8570  15CC  3000               	movlw	0
  8571  15CD  00DB               	movwf	___fladd@a+1
  8572  15CE  3000               	movlw	0
  8573  15CF  00DA               	movwf	___fladd@a
  8574  15D0                     l2332:	
  8575  15D0  17DC               	bsf	___fladd@a+2,7
  8576  15D1                     l2334:	
  8577  15D1  01DD               	clrf	___fladd@a+3
  8578  15D2  2DDB               	goto	l652
  8579  15D3                     l2336:	
  8580  15D3  3000               	movlw	0
  8581  15D4  00DD               	movwf	___fladd@a+3
  8582  15D5  3000               	movlw	0
  8583  15D6  00DC               	movwf	___fladd@a+2
  8584  15D7  3000               	movlw	0
  8585  15D8  00DB               	movwf	___fladd@a+1
  8586  15D9  3000               	movlw	0
  8587  15DA  00DA               	movwf	___fladd@a
  8588  15DB                     l652:	
  8589  15DB  0868               	movf	___fladd@bexp,w
  8590  15DC  0267               	subwf	___fladd@aexp,w
  8591  15DD  1803               	skipnc
  8592  15DE  2DE0               	goto	u3141
  8593  15DF  2DE1               	goto	u3140
  8594  15E0                     u3141:	
  8595  15E0  2E25               	goto	l2372
  8596  15E1                     u3140:	
  8597  15E1                     l2338:	
  8598  15E1  1F66               	btfss	___fladd@signs,6
  8599  15E2  2DE4               	goto	u3151
  8600  15E3  2DE5               	goto	u3150
  8601  15E4                     u3151:	
  8602  15E4  2DE9               	goto	l2342
  8603  15E5                     u3150:	
  8604  15E5                     l2340:	
  8605  15E5  3080               	movlw	128
  8606  15E6  00DE               	movwf	??___fladd
  8607  15E7  085E               	movf	??___fladd,w
  8608  15E8  06E6               	xorwf	___fladd@signs,f
  8609  15E9                     l2342:	
  8610  15E9  0868               	movf	___fladd@bexp,w
  8611  15EA  00DE               	movwf	??___fladd
  8612  15EB  085E               	movf	??___fladd,w
  8613  15EC  00E9               	movwf	___fladd@grs
  8614  15ED                     l2344:	
  8615  15ED  0867               	movf	___fladd@aexp,w
  8616  15EE  00DE               	movwf	??___fladd
  8617  15EF  085E               	movf	??___fladd,w
  8618  15F0  00E8               	movwf	___fladd@bexp
  8619  15F1                     l2346:	
  8620  15F1  0869               	movf	___fladd@grs,w
  8621  15F2  00DE               	movwf	??___fladd
  8622  15F3  085E               	movf	??___fladd,w
  8623  15F4  00E7               	movwf	___fladd@aexp
  8624  15F5                     l2348:	
  8625  15F5  0856               	movf	___fladd@b,w
  8626  15F6  00DE               	movwf	??___fladd
  8627  15F7  085E               	movf	??___fladd,w
  8628  15F8  00E9               	movwf	___fladd@grs
  8629  15F9                     l2350:	
  8630  15F9  085A               	movf	___fladd@a,w
  8631  15FA  00DE               	movwf	??___fladd
  8632  15FB  085E               	movf	??___fladd,w
  8633  15FC  00D6               	movwf	___fladd@b
  8634  15FD                     l2352:	
  8635  15FD  0869               	movf	___fladd@grs,w
  8636  15FE  00DE               	movwf	??___fladd
  8637  15FF  085E               	movf	??___fladd,w
  8638  1600  00DA               	movwf	___fladd@a
  8639  1601                     l2354:	
  8640  1601  0857               	movf	___fladd@b+1,w
  8641  1602  00DE               	movwf	??___fladd
  8642  1603  085E               	movf	??___fladd,w
  8643  1604  00E9               	movwf	___fladd@grs
  8644  1605                     l2356:	
  8645  1605  085B               	movf	___fladd@a+1,w
  8646  1606  00DE               	movwf	??___fladd
  8647  1607  085E               	movf	??___fladd,w
  8648  1608  00D7               	movwf	___fladd@b+1
  8649  1609                     l2358:	
  8650  1609  0869               	movf	___fladd@grs,w
  8651  160A  00DE               	movwf	??___fladd
  8652  160B  085E               	movf	??___fladd,w
  8653  160C  00DB               	movwf	___fladd@a+1
  8654  160D                     l2360:	
  8655  160D  0858               	movf	___fladd@b+2,w
  8656  160E  00DE               	movwf	??___fladd
  8657  160F  085E               	movf	??___fladd,w
  8658  1610  00E9               	movwf	___fladd@grs
  8659  1611                     l2362:	
  8660  1611  085C               	movf	___fladd@a+2,w
  8661  1612  00DE               	movwf	??___fladd
  8662  1613  085E               	movf	??___fladd,w
  8663  1614  00D8               	movwf	___fladd@b+2
  8664  1615                     l2364:	
  8665  1615  0869               	movf	___fladd@grs,w
  8666  1616  00DE               	movwf	??___fladd
  8667  1617  085E               	movf	??___fladd,w
  8668  1618  00DC               	movwf	___fladd@a+2
  8669  1619                     l2366:	
  8670  1619  0859               	movf	___fladd@b+3,w
  8671  161A  00DE               	movwf	??___fladd
  8672  161B  085E               	movf	??___fladd,w
  8673  161C  00E9               	movwf	___fladd@grs
  8674  161D                     l2368:	
  8675  161D  085D               	movf	___fladd@a+3,w
  8676  161E  00DE               	movwf	??___fladd
  8677  161F  085E               	movf	??___fladd,w
  8678  1620  00D9               	movwf	___fladd@b+3
  8679  1621                     l2370:	
  8680  1621  0869               	movf	___fladd@grs,w
  8681  1622  00DE               	movwf	??___fladd
  8682  1623  085E               	movf	??___fladd,w
  8683  1624  00DD               	movwf	___fladd@a+3
  8684  1625                     l2372:	
  8685  1625  01E9               	clrf	___fladd@grs
  8686  1626                     l2374:	
  8687  1626  0867               	movf	___fladd@aexp,w
  8688  1627  00DE               	movwf	??___fladd
  8689  1628  01DF               	clrf	??___fladd+1
  8690  1629  085F               	movf	??___fladd+1,w
  8691  162A  00E1               	movwf	??___fladd+3
  8692  162B  0868               	movf	___fladd@bexp,w
  8693  162C  025E               	subwf	??___fladd,w
  8694  162D  00E0               	movwf	??___fladd+2
  8695  162E  1C03               	skipc
  8696  162F  03E1               	decf	??___fladd+3,f
  8697  1630  0861               	movf	??___fladd+3,w
  8698  1631  3A80               	xorlw	128
  8699  1632  00FF               	movwf	btemp+1
  8700  1633  3080               	movlw	128
  8701  1634  027F               	subwf	btemp+1,w
  8702  1635  1D03               	skipz
  8703  1636  2E39               	goto	u3165
  8704  1637  301A               	movlw	26
  8705  1638  0260               	subwf	??___fladd+2,w
  8706  1639                     u3165:	
  8707  1639  1C03               	skipc
  8708  163A  2E3C               	goto	u3161
  8709  163B  2E3D               	goto	u3160
  8710  163C                     u3161:	
  8711  163C  2E7A               	goto	l2390
  8712  163D                     u3160:	
  8713  163D                     l2376:	
  8714  163D  1283               	bcf	3,5	;RP0=0, select bank0
  8715  163E  1303               	bcf	3,6	;RP1=0, select bank0
  8716  163F  0859               	movf	___fladd@b+3,w
  8717  1640  0458               	iorwf	___fladd@b+2,w
  8718  1641  0457               	iorwf	___fladd@b+1,w
  8719  1642  0456               	iorwf	___fladd@b,w
  8720  1643  1D03               	skipz
  8721  1644  2E46               	goto	u3171
  8722  1645  2E48               	goto	u3170
  8723  1646                     u3171:	
  8724  1646  3001               	movlw	1
  8725  1647  2E49               	goto	u3180
  8726  1648                     u3170:	
  8727  1648  3000               	movlw	0
  8728  1649                     u3180:	
  8729  1649  00DE               	movwf	??___fladd
  8730  164A  085E               	movf	??___fladd,w
  8731  164B  00E9               	movwf	___fladd@grs
  8732  164C  3000               	movlw	0
  8733  164D  00D9               	movwf	___fladd@b+3
  8734  164E  3000               	movlw	0
  8735  164F  00D8               	movwf	___fladd@b+2
  8736  1650  3000               	movlw	0
  8737  1651  00D7               	movwf	___fladd@b+1
  8738  1652  3000               	movlw	0
  8739  1653  00D6               	movwf	___fladd@b
  8740  1654  0867               	movf	___fladd@aexp,w
  8741  1655  00DE               	movwf	??___fladd
  8742  1656  085E               	movf	??___fladd,w
  8743  1657  00E8               	movwf	___fladd@bexp
  8744  1658  2E82               	goto	l656
  8745  1659                     l658:	
  8746  1659  1C69               	btfss	___fladd@grs,0
  8747  165A  2E5C               	goto	u3191
  8748  165B  2E5D               	goto	u3190
  8749  165C                     u3191:	
  8750  165C  2E66               	goto	l2380
  8751  165D                     u3190:	
  8752  165D                     l2378:	
  8753  165D  0869               	movf	___fladd@grs,w
  8754  165E  00DE               	movwf	??___fladd
  8755  165F  1003               	clrc
  8756  1660  0C5E               	rrf	??___fladd,w
  8757  1661  3801               	iorlw	1
  8758  1662  00DF               	movwf	??___fladd+1
  8759  1663  085F               	movf	??___fladd+1,w
  8760  1664  00E9               	movwf	___fladd@grs
  8761  1665  2E68               	goto	l2382
  8762  1666                     l2380:	
  8763  1666  1003               	clrc
  8764  1667  0CE9               	rrf	___fladd@grs,f
  8765  1668                     l2382:	
  8766  1668  1C56               	btfss	___fladd@b,0
  8767  1669  2E6B               	goto	u3201
  8768  166A  2E6C               	goto	u3200
  8769  166B                     u3201:	
  8770  166B  2E6D               	goto	l2386
  8771  166C                     u3200:	
  8772  166C                     l2384:	
  8773  166C  17E9               	bsf	___fladd@grs,7
  8774  166D                     l2386:	
  8775  166D  3001               	movlw	1
  8776  166E  00DE               	movwf	??___fladd
  8777  166F                     u3215:	
  8778  166F  0D59               	rlf	___fladd@b+3,w
  8779  1670  0CD9               	rrf	___fladd@b+3,f
  8780  1671  0CD8               	rrf	___fladd@b+2,f
  8781  1672  0CD7               	rrf	___fladd@b+1,f
  8782  1673  0CD6               	rrf	___fladd@b,f
  8783  1674  0BDE               	decfsz	??___fladd& (0+127),f
  8784  1675  2E6F               	goto	u3215
  8785  1676                     l2388:	
  8786  1676  3001               	movlw	1
  8787  1677  00DE               	movwf	??___fladd
  8788  1678  085E               	movf	??___fladd,w
  8789  1679  07E8               	addwf	___fladd@bexp,f
  8790  167A                     l2390:	
  8791  167A  1283               	bcf	3,5	;RP0=0, select bank0
  8792  167B  1303               	bcf	3,6	;RP1=0, select bank0
  8793  167C  0867               	movf	___fladd@aexp,w
  8794  167D  0268               	subwf	___fladd@bexp,w
  8795  167E  1C03               	skipc
  8796  167F  2E81               	goto	u3221
  8797  1680  2E82               	goto	u3220
  8798  1681                     u3221:	
  8799  1681  2E59               	goto	l658
  8800  1682                     u3220:	
  8801  1682                     l656:	
  8802  1682  1B66               	btfsc	___fladd@signs,6
  8803  1683  2E85               	goto	u3231
  8804  1684  2E86               	goto	u3230
  8805  1685                     u3231:	
  8806  1685  2ED1               	goto	l2416
  8807  1686                     u3230:	
  8808  1686                     l2392:	
  8809  1686  0868               	movf	___fladd@bexp,w
  8810  1687  1D03               	btfss	3,2
  8811  1688  2E8A               	goto	u3241
  8812  1689  2E8B               	goto	u3240
  8813  168A                     u3241:	
  8814  168A  2E94               	goto	l2398
  8815  168B                     u3240:	
  8816  168B                     l2394:	
  8817  168B  3000               	movlw	0
  8818  168C  00D9               	movwf	?___fladd+3
  8819  168D  3000               	movlw	0
  8820  168E  00D8               	movwf	?___fladd+2
  8821  168F  3000               	movlw	0
  8822  1690  00D7               	movwf	?___fladd+1
  8823  1691  3000               	movlw	0
  8824  1692  00D6               	movwf	?___fladd
  8825  1693  2FFF               	goto	l665
  8826  1694                     l2398:	
  8827  1694  085A               	movf	___fladd@a,w
  8828  1695  07D6               	addwf	___fladd@b,f
  8829  1696  085B               	movf	___fladd@a+1,w
  8830  1697  1103               	clrz
  8831  1698  1803               	skipnc
  8832  1699  3E01               	addlw	1
  8833  169A  1903               	skipnz
  8834  169B  2E9D               	goto	u3251
  8835  169C  07D7               	addwf	___fladd@b+1,f
  8836  169D                     u3251:	
  8837  169D  085C               	movf	___fladd@a+2,w
  8838  169E  1103               	clrz
  8839  169F  1803               	skipnc
  8840  16A0  3E01               	addlw	1
  8841  16A1  1903               	skipnz
  8842  16A2  2EA4               	goto	u3252
  8843  16A3  07D8               	addwf	___fladd@b+2,f
  8844  16A4                     u3252:	
  8845  16A4  085D               	movf	___fladd@a+3,w
  8846  16A5  1103               	clrz
  8847  16A6  1803               	skipnc
  8848  16A7  3E01               	addlw	1
  8849  16A8  1903               	skipnz
  8850  16A9  2EAB               	goto	u3253
  8851  16AA  07D9               	addwf	___fladd@b+3,f
  8852  16AB                     u3253:	
  8853  16AB                     l2400:	
  8854  16AB  1C59               	btfss	___fladd@b+3,0
  8855  16AC  2EAE               	goto	u3261
  8856  16AD  2EAF               	goto	u3260
  8857  16AE                     u3261:	
  8858  16AE  2F85               	goto	l2450
  8859  16AF                     u3260:	
  8860  16AF                     l2402:	
  8861  16AF  1C69               	btfss	___fladd@grs,0
  8862  16B0  2EB2               	goto	u3271
  8863  16B1  2EB3               	goto	u3270
  8864  16B2                     u3271:	
  8865  16B2  2EBC               	goto	l2406
  8866  16B3                     u3270:	
  8867  16B3                     l2404:	
  8868  16B3  0869               	movf	___fladd@grs,w
  8869  16B4  00DE               	movwf	??___fladd
  8870  16B5  1003               	clrc
  8871  16B6  0C5E               	rrf	??___fladd,w
  8872  16B7  3801               	iorlw	1
  8873  16B8  00DF               	movwf	??___fladd+1
  8874  16B9  085F               	movf	??___fladd+1,w
  8875  16BA  00E9               	movwf	___fladd@grs
  8876  16BB  2EBE               	goto	l2408
  8877  16BC                     l2406:	
  8878  16BC  1003               	clrc
  8879  16BD  0CE9               	rrf	___fladd@grs,f
  8880  16BE                     l2408:	
  8881  16BE  1C56               	btfss	___fladd@b,0
  8882  16BF  2EC1               	goto	u3281
  8883  16C0  2EC2               	goto	u3280
  8884  16C1                     u3281:	
  8885  16C1  2EC3               	goto	l2412
  8886  16C2                     u3280:	
  8887  16C2                     l2410:	
  8888  16C2  17E9               	bsf	___fladd@grs,7
  8889  16C3                     l2412:	
  8890  16C3  3001               	movlw	1
  8891  16C4  00DE               	movwf	??___fladd
  8892  16C5                     u3295:	
  8893  16C5  0D59               	rlf	___fladd@b+3,w
  8894  16C6  0CD9               	rrf	___fladd@b+3,f
  8895  16C7  0CD8               	rrf	___fladd@b+2,f
  8896  16C8  0CD7               	rrf	___fladd@b+1,f
  8897  16C9  0CD6               	rrf	___fladd@b,f
  8898  16CA  0BDE               	decfsz	??___fladd& (0+127),f
  8899  16CB  2EC5               	goto	u3295
  8900  16CC                     l2414:	
  8901  16CC  3001               	movlw	1
  8902  16CD  00DE               	movwf	??___fladd
  8903  16CE  085E               	movf	??___fladd,w
  8904  16CF  07E8               	addwf	___fladd@bexp,f
  8905  16D0  2F85               	goto	l2450
  8906  16D1                     l2416:	
  8907  16D1  0859               	movf	___fladd@b+3,w
  8908  16D2  3A80               	xorlw	128
  8909  16D3  00FF               	movwf	btemp+1
  8910  16D4  085D               	movf	___fladd@a+3,w
  8911  16D5  3A80               	xorlw	128
  8912  16D6  027F               	subwf	btemp+1,w
  8913  16D7  1D03               	skipz
  8914  16D8  2EE3               	goto	u3303
  8915  16D9  085C               	movf	___fladd@a+2,w
  8916  16DA  0258               	subwf	___fladd@b+2,w
  8917  16DB  1D03               	skipz
  8918  16DC  2EE3               	goto	u3303
  8919  16DD  085B               	movf	___fladd@a+1,w
  8920  16DE  0257               	subwf	___fladd@b+1,w
  8921  16DF  1D03               	skipz
  8922  16E0  2EE3               	goto	u3303
  8923  16E1  085A               	movf	___fladd@a,w
  8924  16E2  0256               	subwf	___fladd@b,w
  8925  16E3                     u3303:	
  8926  16E3  1803               	skipnc
  8927  16E4  2EE6               	goto	u3301
  8928  16E5  2EE7               	goto	u3300
  8929  16E6                     u3301:	
  8930  16E6  2F3F               	goto	l2426
  8931  16E7                     u3300:	
  8932  16E7                     l2418:	
  8933  16E7  30FF               	movlw	255
  8934  16E8  00DE               	movwf	??___fladd
  8935  16E9  30FF               	movlw	255
  8936  16EA  00DF               	movwf	??___fladd+1
  8937  16EB  30FF               	movlw	255
  8938  16EC  00E0               	movwf	??___fladd+2
  8939  16ED  30FF               	movlw	255
  8940  16EE  00E1               	movwf	??___fladd+3
  8941  16EF  085A               	movf	___fladd@a,w
  8942  16F0  00E2               	movwf	??___fladd+4
  8943  16F1  085B               	movf	___fladd@a+1,w
  8944  16F2  00E3               	movwf	??___fladd+5
  8945  16F3  085C               	movf	___fladd@a+2,w
  8946  16F4  00E4               	movwf	??___fladd+6
  8947  16F5  085D               	movf	___fladd@a+3,w
  8948  16F6  00E5               	movwf	??___fladd+7
  8949  16F7  0856               	movf	___fladd@b,w
  8950  16F8  02E2               	subwf	??___fladd+4,f
  8951  16F9  0857               	movf	___fladd@b+1,w
  8952  16FA  1C03               	skipc
  8953  16FB  0F57               	incfsz	___fladd@b+1,w
  8954  16FC  2EFE               	goto	u3311
  8955  16FD  2EFF               	goto	u3312
  8956  16FE                     u3311:	
  8957  16FE  02E3               	subwf	??___fladd+5,f
  8958  16FF                     u3312:	
  8959  16FF  0858               	movf	___fladd@b+2,w
  8960  1700  1C03               	skipc
  8961  1701  0F58               	incfsz	___fladd@b+2,w
  8962  1702  2F04               	goto	u3313
  8963  1703  2F05               	goto	u3314
  8964  1704                     u3313:	
  8965  1704  02E4               	subwf	??___fladd+6,f
  8966  1705                     u3314:	
  8967  1705  0859               	movf	___fladd@b+3,w
  8968  1706  1C03               	skipc
  8969  1707  0F59               	incfsz	___fladd@b+3,w
  8970  1708  2F0A               	goto	u3315
  8971  1709  2F0B               	goto	u3316
  8972  170A                     u3315:	
  8973  170A  02E5               	subwf	??___fladd+7,f
  8974  170B                     u3316:	
  8975  170B  0862               	movf	??___fladd+4,w
  8976  170C  07DE               	addwf	??___fladd,f
  8977  170D  0863               	movf	??___fladd+5,w
  8978  170E  1803               	skipnc
  8979  170F  0F63               	incfsz	??___fladd+5,w
  8980  1710  2F12               	goto	u3320
  8981  1711  2F13               	goto	u3321
  8982  1712                     u3320:	
  8983  1712  07DF               	addwf	??___fladd+1,f
  8984  1713                     u3321:	
  8985  1713  0864               	movf	??___fladd+6,w
  8986  1714  1803               	skipnc
  8987  1715  0F64               	incfsz	??___fladd+6,w
  8988  1716  2F18               	goto	u3322
  8989  1717  2F19               	goto	u3323
  8990  1718                     u3322:	
  8991  1718  07E0               	addwf	??___fladd+2,f
  8992  1719                     u3323:	
  8993  1719  0865               	movf	??___fladd+7,w
  8994  171A  1803               	skipnc
  8995  171B  0A65               	incf	??___fladd+7,w
  8996  171C  07E1               	addwf	??___fladd+3,f
  8997  171D  0861               	movf	??___fladd+3,w
  8998  171E  00D9               	movwf	___fladd@b+3
  8999  171F  0860               	movf	??___fladd+2,w
  9000  1720  00D8               	movwf	___fladd@b+2
  9001  1721  085F               	movf	??___fladd+1,w
  9002  1722  00D7               	movwf	___fladd@b+1
  9003  1723  085E               	movf	??___fladd,w
  9004  1724  00D6               	movwf	___fladd@b
  9005  1725                     l2420:	
  9006  1725  3080               	movlw	128
  9007  1726  00DE               	movwf	??___fladd
  9008  1727  085E               	movf	??___fladd,w
  9009  1728  06E6               	xorwf	___fladd@signs,f
  9010  1729  09E9               	comf	___fladd@grs,f
  9011  172A  0AE9               	incf	___fladd@grs,f
  9012  172B                     l2422:	
  9013  172B  0869               	movf	___fladd@grs,w
  9014  172C  1D03               	btfss	3,2
  9015  172D  2F2F               	goto	u3331
  9016  172E  2F30               	goto	u3330
  9017  172F                     u3331:	
  9018  172F  2F4D               	goto	l673
  9019  1730                     u3330:	
  9020  1730                     l2424:	
  9021  1730  3001               	movlw	1
  9022  1731  07D6               	addwf	___fladd@b,f
  9023  1732  3000               	movlw	0
  9024  1733  1803               	skipnc
  9025  1734  3001               	movlw	1
  9026  1735  07D7               	addwf	___fladd@b+1,f
  9027  1736  3000               	movlw	0
  9028  1737  1803               	skipnc
  9029  1738  3001               	movlw	1
  9030  1739  07D8               	addwf	___fladd@b+2,f
  9031  173A  3000               	movlw	0
  9032  173B  1803               	skipnc
  9033  173C  3001               	movlw	1
  9034  173D  07D9               	addwf	___fladd@b+3,f
  9035  173E  2F4D               	goto	l673
  9036  173F                     l2426:	
  9037  173F  085A               	movf	___fladd@a,w
  9038  1740  02D6               	subwf	___fladd@b,f
  9039  1741  085B               	movf	___fladd@a+1,w
  9040  1742  1C03               	skipc
  9041  1743  0F5B               	incfsz	___fladd@a+1,w
  9042  1744  02D7               	subwf	___fladd@b+1,f
  9043  1745  085C               	movf	___fladd@a+2,w
  9044  1746  1C03               	skipc
  9045  1747  0F5C               	incfsz	___fladd@a+2,w
  9046  1748  02D8               	subwf	___fladd@b+2,f
  9047  1749  085D               	movf	___fladd@a+3,w
  9048  174A  1C03               	skipc
  9049  174B  0F5D               	incfsz	___fladd@a+3,w
  9050  174C  02D9               	subwf	___fladd@b+3,f
  9051  174D                     l673:	
  9052  174D  0859               	movf	___fladd@b+3,w
  9053  174E  0458               	iorwf	___fladd@b+2,w
  9054  174F  0457               	iorwf	___fladd@b+1,w
  9055  1750  0456               	iorwf	___fladd@b,w
  9056  1751  1D03               	skipz
  9057  1752  2F54               	goto	u3341
  9058  1753  2F55               	goto	u3340
  9059  1754                     u3341:	
  9060  1754  2F81               	goto	l2448
  9061  1755                     u3340:	
  9062  1755                     l2428:	
  9063  1755  0869               	movf	___fladd@grs,w
  9064  1756  1D03               	btfss	3,2
  9065  1757  2F59               	goto	u3351
  9066  1758  2F5A               	goto	u3350
  9067  1759                     u3351:	
  9068  1759  2F81               	goto	l2448
  9069  175A                     u3350:	
  9070  175A                     l2430:	
  9071  175A  3000               	movlw	0
  9072  175B  00D9               	movwf	?___fladd+3
  9073  175C  3000               	movlw	0
  9074  175D  00D8               	movwf	?___fladd+2
  9075  175E  3000               	movlw	0
  9076  175F  00D7               	movwf	?___fladd+1
  9077  1760  3000               	movlw	0
  9078  1761  00D6               	movwf	?___fladd
  9079  1762  2FFF               	goto	l665
  9080  1763                     l2434:	
  9081  1763  3001               	movlw	1
  9082  1764  00DE               	movwf	??___fladd
  9083  1765                     u3365:	
  9084  1765  1003               	clrc
  9085  1766  0DD6               	rlf	___fladd@b,f
  9086  1767  0DD7               	rlf	___fladd@b+1,f
  9087  1768  0DD8               	rlf	___fladd@b+2,f
  9088  1769  0DD9               	rlf	___fladd@b+3,f
  9089  176A  0BDE               	decfsz	??___fladd,f
  9090  176B  2F65               	goto	u3365
  9091  176C                     l2436:	
  9092  176C  1FE9               	btfss	___fladd@grs,7
  9093  176D  2F6F               	goto	u3371
  9094  176E  2F70               	goto	u3370
  9095  176F                     u3371:	
  9096  176F  2F71               	goto	l677
  9097  1770                     u3370:	
  9098  1770                     l2438:	
  9099  1770  1456               	bsf	___fladd@b,0
  9100  1771                     l677:	
  9101  1771  1C69               	btfss	___fladd@grs,0
  9102  1772  2F74               	goto	u3381
  9103  1773  2F75               	goto	u3380
  9104  1774                     u3381:	
  9105  1774  2F78               	goto	l2442
  9106  1775                     u3380:	
  9107  1775                     l2440:	
  9108  1775  1403               	setc
  9109  1776  0DE9               	rlf	___fladd@grs,f
  9110  1777  2F7A               	goto	l2444
  9111  1778                     l2442:	
  9112  1778  1003               	clrc
  9113  1779  0DE9               	rlf	___fladd@grs,f
  9114  177A                     l2444:	
  9115  177A  0868               	movf	___fladd@bexp,w
  9116  177B  1903               	btfsc	3,2
  9117  177C  2F7E               	goto	u3391
  9118  177D  2F7F               	goto	u3390
  9119  177E                     u3391:	
  9120  177E  2F81               	goto	l2448
  9121  177F                     u3390:	
  9122  177F                     l2446:	
  9123  177F  3001               	movlw	1
  9124  1780  02E8               	subwf	___fladd@bexp,f
  9125  1781                     l2448:	
  9126  1781  1FD8               	btfss	___fladd@b+2,7
  9127  1782  2F84               	goto	u3401
  9128  1783  2F85               	goto	u3400
  9129  1784                     u3401:	
  9130  1784  2F63               	goto	l2434
  9131  1785                     u3400:	
  9132  1785                     l2450:	
  9133  1785  01E7               	clrf	___fladd@aexp
  9134  1786                     l2452:	
  9135  1786  1FE9               	btfss	___fladd@grs,7
  9136  1787  2F89               	goto	u3411
  9137  1788  2F8A               	goto	u3410
  9138  1789                     u3411:	
  9139  1789  2F98               	goto	l2460
  9140  178A                     u3410:	
  9141  178A                     l2454:	
  9142  178A  0869               	movf	___fladd@grs,w
  9143  178B  397F               	andlw	127
  9144  178C  1903               	btfsc	3,2
  9145  178D  2F8F               	goto	u3421
  9146  178E  2F90               	goto	u3420
  9147  178F                     u3421:	
  9148  178F  2F93               	goto	l683
  9149  1790                     u3420:	
  9150  1790                     l2456:	
  9151  1790  01E7               	clrf	___fladd@aexp
  9152  1791  0AE7               	incf	___fladd@aexp,f
  9153  1792  2F98               	goto	l2460
  9154  1793                     l683:	
  9155  1793  1C56               	btfss	___fladd@b,0
  9156  1794  2F96               	goto	u3431
  9157  1795  2F97               	goto	u3430
  9158  1796                     u3431:	
  9159  1796  2F98               	goto	l2460
  9160  1797                     u3430:	
  9161  1797  2F90               	goto	l2456
  9162  1798                     l2460:	
  9163  1798  0867               	movf	___fladd@aexp,w
  9164  1799  1903               	btfsc	3,2
  9165  179A  2F9C               	goto	u3441
  9166  179B  2F9D               	goto	u3440
  9167  179C                     u3441:	
  9168  179C  2FD1               	goto	l686
  9169  179D                     u3440:	
  9170  179D                     l2462:	
  9171  179D  3001               	movlw	1
  9172  179E  07D6               	addwf	___fladd@b,f
  9173  179F  3000               	movlw	0
  9174  17A0  1803               	skipnc
  9175  17A1  3001               	movlw	1
  9176  17A2  07D7               	addwf	___fladd@b+1,f
  9177  17A3  3000               	movlw	0
  9178  17A4  1803               	skipnc
  9179  17A5  3001               	movlw	1
  9180  17A6  07D8               	addwf	___fladd@b+2,f
  9181  17A7  3000               	movlw	0
  9182  17A8  1803               	skipnc
  9183  17A9  3001               	movlw	1
  9184  17AA  07D9               	addwf	___fladd@b+3,f
  9185  17AB                     l2464:	
  9186  17AB  1C59               	btfss	___fladd@b+3,0
  9187  17AC  2FAE               	goto	u3451
  9188  17AD  2FAF               	goto	u3450
  9189  17AE                     u3451:	
  9190  17AE  2FD1               	goto	l686
  9191  17AF                     u3450:	
  9192  17AF                     l2466:	
  9193  17AF  0856               	movf	___fladd@b,w
  9194  17B0  00DE               	movwf	??___fladd
  9195  17B1  0857               	movf	___fladd@b+1,w
  9196  17B2  00DF               	movwf	??___fladd+1
  9197  17B3  0858               	movf	___fladd@b+2,w
  9198  17B4  00E0               	movwf	??___fladd+2
  9199  17B5  0859               	movf	___fladd@b+3,w
  9200  17B6  00E1               	movwf	??___fladd+3
  9201  17B7  3001               	movlw	1
  9202  17B8  00E2               	movwf	??___fladd+4
  9203  17B9                     u3465:	
  9204  17B9  0D61               	rlf	??___fladd+3,w
  9205  17BA  0CE1               	rrf	??___fladd+3,f
  9206  17BB  0CE0               	rrf	??___fladd+2,f
  9207  17BC  0CDF               	rrf	??___fladd+1,f
  9208  17BD  0CDE               	rrf	??___fladd,f
  9209  17BE                     u3460:	
  9210  17BE  0BE2               	decfsz	??___fladd+4,f
  9211  17BF  2FB9               	goto	u3465
  9212  17C0  0861               	movf	??___fladd+3,w
  9213  17C1  00D9               	movwf	___fladd@b+3
  9214  17C2  0860               	movf	??___fladd+2,w
  9215  17C3  00D8               	movwf	___fladd@b+2
  9216  17C4  085F               	movf	??___fladd+1,w
  9217  17C5  00D7               	movwf	___fladd@b+1
  9218  17C6  085E               	movf	??___fladd,w
  9219  17C7  00D6               	movwf	___fladd@b
  9220  17C8  0A68               	incf	___fladd@bexp,w
  9221  17C9  1903               	btfsc	3,2
  9222  17CA  2FCC               	goto	u3471
  9223  17CB  2FCD               	goto	u3470
  9224  17CC                     u3471:	
  9225  17CC  2FD1               	goto	l686
  9226  17CD                     u3470:	
  9227  17CD                     l2468:	
  9228  17CD  3001               	movlw	1
  9229  17CE  00DE               	movwf	??___fladd
  9230  17CF  085E               	movf	??___fladd,w
  9231  17D0  07E8               	addwf	___fladd@bexp,f
  9232  17D1                     l686:	
  9233  17D1  0A68               	incf	___fladd@bexp,w
  9234  17D2  1903               	btfsc	3,2
  9235  17D3  2FD5               	goto	u3481
  9236  17D4  2FD6               	goto	u3480
  9237  17D5                     u3481:	
  9238  17D5  2FDB               	goto	l2472
  9239  17D6                     u3480:	
  9240  17D6                     l2470:	
  9241  17D6  0868               	movf	___fladd@bexp,w
  9242  17D7  1D03               	btfss	3,2
  9243  17D8  2FDA               	goto	u3491
  9244  17D9  2FDB               	goto	u3490
  9245  17DA                     u3491:	
  9246  17DA  2FE9               	goto	l2478
  9247  17DB                     u3490:	
  9248  17DB                     l2472:	
  9249  17DB  3000               	movlw	0
  9250  17DC  00D9               	movwf	___fladd@b+3
  9251  17DD  3000               	movlw	0
  9252  17DE  00D8               	movwf	___fladd@b+2
  9253  17DF  3000               	movlw	0
  9254  17E0  00D7               	movwf	___fladd@b+1
  9255  17E1  3000               	movlw	0
  9256  17E2  00D6               	movwf	___fladd@b
  9257  17E3                     l2474:	
  9258  17E3  0868               	movf	___fladd@bexp,w
  9259  17E4  1D03               	btfss	3,2
  9260  17E5  2FE7               	goto	u3501
  9261  17E6  2FE8               	goto	u3500
  9262  17E7                     u3501:	
  9263  17E7  2FE9               	goto	l2478
  9264  17E8                     u3500:	
  9265  17E8                     l2476:	
  9266  17E8  01E6               	clrf	___fladd@signs
  9267  17E9                     l2478:	
  9268  17E9  1C68               	btfss	___fladd@bexp,0
  9269  17EA  2FEC               	goto	u3511
  9270  17EB  2FED               	goto	u3510
  9271  17EC                     u3511:	
  9272  17EC  2FEF               	goto	l2482
  9273  17ED                     u3510:	
  9274  17ED                     l2480:	
  9275  17ED  17D8               	bsf	___fladd@b+2,7
  9276  17EE  2FF3               	goto	l694
  9277  17EF                     l2482:	
  9278  17EF  307F               	movlw	127
  9279  17F0  00DE               	movwf	??___fladd
  9280  17F1  085E               	movf	??___fladd,w
  9281  17F2  05D8               	andwf	___fladd@b+2,f
  9282  17F3                     l694:	
  9283  17F3  0868               	movf	___fladd@bexp,w
  9284  17F4  00DE               	movwf	??___fladd
  9285  17F5  1003               	clrc
  9286  17F6  0C5E               	rrf	??___fladd,w
  9287  17F7  00DF               	movwf	??___fladd+1
  9288  17F8  085F               	movf	??___fladd+1,w
  9289  17F9  00D9               	movwf	___fladd@b+3
  9290  17FA                     l2484:	
  9291  17FA  1FE6               	btfss	___fladd@signs,7
  9292  17FB  2FFD               	goto	u3521
  9293  17FC  2FFE               	goto	u3520
  9294  17FD                     u3521:	
  9295  17FD  2FFF               	goto	l695
  9296  17FE                     u3520:	
  9297  17FE                     l2486:	
  9298  17FE  17D9               	bsf	___fladd@b+3,7
  9299  17FF                     l695:	
  9300  17FF                     l665:	
  9301  17FF  0008               	return
  9302  1800                     __end_of___fladd:	
  9303                           
  9304                           	psect	text22
  9305  1B06                     __ptext22:	
  9306 ;; *************** function ___flneg *****************
  9307 ;; Defined at:
  9308 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\flneg.c"
  9309 ;; Parameters:    Size  Location     Type
  9310 ;;  f1              4    2[COMMON] unsigned char 
  9311 ;; Auto vars:     Size  Location     Type
  9312 ;;		None
  9313 ;; Return value:  Size  Location     Type
  9314 ;;                  4    2[COMMON] unsigned char 
  9315 ;; Registers used:
  9316 ;;		wreg
  9317 ;; Tracked objects:
  9318 ;;		On entry : 0/0
  9319 ;;		On exit  : 0/0
  9320 ;;		Unchanged: 0/0
  9321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9322 ;;      Params:         4       0       0       0       0
  9323 ;;      Locals:         0       0       0       0       0
  9324 ;;      Temps:          0       0       0       0       0
  9325 ;;      Totals:         4       0       0       0       0
  9326 ;;Total ram usage:        4 bytes
  9327 ;; Hardware stack levels used:    1
  9328 ;; Hardware stack levels required when called:    1
  9329 ;; This function calls:
  9330 ;;		Nothing
  9331 ;; This function is called by:
  9332 ;;		_sprintf
  9333 ;; This function uses a non-reentrant model
  9334 ;;
  9335                           
  9336                           
  9337                           ;psect for function ___flneg
  9338  1B06                     ___flneg:	
  9339  1B06                     l2880:	
  9340                           ;incstack = 0
  9341                           ; Regs used in ___flneg: [wreg]
  9342                           
  9343  1B06  0875               	movf	___flneg@f1+3,w
  9344  1B07  0474               	iorwf	___flneg@f1+2,w
  9345  1B08  0473               	iorwf	___flneg@f1+1,w
  9346  1B09  0472               	iorwf	___flneg@f1,w
  9347  1B0A  1903               	skipnz
  9348  1B0B  2B0D               	goto	u4641
  9349  1B0C  2B0E               	goto	u4640
  9350  1B0D                     u4641:	
  9351  1B0D  2B10               	goto	l2884
  9352  1B0E                     u4640:	
  9353  1B0E                     l2882:	
  9354  1B0E  3080               	movlw	128
  9355  1B0F  06F5               	xorwf	___flneg@f1+3,f
  9356  1B10                     l2884:	
  9357  1B10                     l524:	
  9358  1B10  0008               	return
  9359  1B11                     __end_of___flneg:	
  9360                           
  9361                           	psect	text23
  9362  1F5C                     __ptext23:	
  9363 ;; *************** function ___flge *****************
  9364 ;; Defined at:
  9365 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\flge.c"
  9366 ;; Parameters:    Size  Location     Type
  9367 ;;  ff1             4    2[COMMON] unsigned char 
  9368 ;;  ff2             4    6[COMMON] unsigned char 
  9369 ;; Auto vars:     Size  Location     Type
  9370 ;;		None
  9371 ;; Return value:  Size  Location     Type
  9372 ;;		None               void
  9373 ;; Registers used:
  9374 ;;		wreg, status,2, status,0
  9375 ;; Tracked objects:
  9376 ;;		On entry : 0/0
  9377 ;;		On exit  : 0/0
  9378 ;;		Unchanged: 0/0
  9379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9380 ;;      Params:         8       0       0       0       0
  9381 ;;      Locals:         0       0       0       0       0
  9382 ;;      Temps:          0       4       0       0       0
  9383 ;;      Totals:         8       4       0       0       0
  9384 ;;Total ram usage:       12 bytes
  9385 ;; Hardware stack levels used:    1
  9386 ;; Hardware stack levels required when called:    1
  9387 ;; This function calls:
  9388 ;;		Nothing
  9389 ;; This function is called by:
  9390 ;;		_sprintf
  9391 ;; This function uses a non-reentrant model
  9392 ;;
  9393                           
  9394                           
  9395                           ;psect for function ___flge
  9396  1F5C                     ___flge:	
  9397  1F5C                     l2860:	
  9398                           ;incstack = 0
  9399                           ; Regs used in ___flge: [wreg+status,2+status,0]
  9400                           
  9401  1F5C  3000               	movlw	0
  9402  1F5D  0572               	andwf	___flge@ff1,w
  9403  1F5E  1283               	bcf	3,5	;RP0=0, select bank0
  9404  1F5F  1303               	bcf	3,6	;RP1=0, select bank0
  9405  1F60  00A0               	movwf	??___flge
  9406  1F61  3000               	movlw	0
  9407  1F62  0573               	andwf	___flge@ff1+1,w
  9408  1F63  00A1               	movwf	??___flge+1
  9409  1F64  3080               	movlw	128
  9410  1F65  0574               	andwf	___flge@ff1+2,w
  9411  1F66  00A2               	movwf	??___flge+2
  9412  1F67  307F               	movlw	127
  9413  1F68  0575               	andwf	___flge@ff1+3,w
  9414  1F69  00A3               	movwf	??___flge+3
  9415  1F6A  0823               	movf	??___flge+3,w
  9416  1F6B  0422               	iorwf	??___flge+2,w
  9417  1F6C  0421               	iorwf	??___flge+1,w
  9418  1F6D  0420               	iorwf	??___flge,w
  9419  1F6E  1D03               	skipz
  9420  1F6F  2F71               	goto	u4571
  9421  1F70  2F72               	goto	u4570
  9422  1F71                     u4571:	
  9423  1F71  2F7A               	goto	l516
  9424  1F72                     u4570:	
  9425  1F72                     l2862:	
  9426  1F72  3000               	movlw	0
  9427  1F73  00F5               	movwf	___flge@ff1+3
  9428  1F74  3000               	movlw	0
  9429  1F75  00F4               	movwf	___flge@ff1+2
  9430  1F76  3000               	movlw	0
  9431  1F77  00F3               	movwf	___flge@ff1+1
  9432  1F78  3000               	movlw	0
  9433  1F79  00F2               	movwf	___flge@ff1
  9434  1F7A                     l516:	
  9435  1F7A  3000               	movlw	0
  9436  1F7B  0576               	andwf	___flge@ff2,w
  9437  1F7C  00A0               	movwf	??___flge
  9438  1F7D  3000               	movlw	0
  9439  1F7E  0577               	andwf	___flge@ff2+1,w
  9440  1F7F  00A1               	movwf	??___flge+1
  9441  1F80  3080               	movlw	128
  9442  1F81  0578               	andwf	___flge@ff2+2,w
  9443  1F82  00A2               	movwf	??___flge+2
  9444  1F83  307F               	movlw	127
  9445  1F84  0579               	andwf	___flge@ff2+3,w
  9446  1F85  00A3               	movwf	??___flge+3
  9447  1F86  0823               	movf	??___flge+3,w
  9448  1F87  0422               	iorwf	??___flge+2,w
  9449  1F88  0421               	iorwf	??___flge+1,w
  9450  1F89  0420               	iorwf	??___flge,w
  9451  1F8A  1D03               	skipz
  9452  1F8B  2F8D               	goto	u4581
  9453  1F8C  2F8E               	goto	u4580
  9454  1F8D                     u4581:	
  9455  1F8D  2F96               	goto	l2866
  9456  1F8E                     u4580:	
  9457  1F8E                     l2864:	
  9458  1F8E  3000               	movlw	0
  9459  1F8F  00F9               	movwf	___flge@ff2+3
  9460  1F90  3000               	movlw	0
  9461  1F91  00F8               	movwf	___flge@ff2+2
  9462  1F92  3000               	movlw	0
  9463  1F93  00F7               	movwf	___flge@ff2+1
  9464  1F94  3000               	movlw	0
  9465  1F95  00F6               	movwf	___flge@ff2
  9466  1F96                     l2866:	
  9467  1F96  1FF5               	btfss	___flge@ff1+3,7
  9468  1F97  2F99               	goto	u4591
  9469  1F98  2F9A               	goto	u4590
  9470  1F99                     u4591:	
  9471  1F99  2FBE               	goto	l2870
  9472  1F9A                     u4590:	
  9473  1F9A                     l2868:	
  9474  1F9A  3000               	movlw	0
  9475  1F9B  00A0               	movwf	??___flge
  9476  1F9C  3000               	movlw	0
  9477  1F9D  00A1               	movwf	??___flge+1
  9478  1F9E  3000               	movlw	0
  9479  1F9F  00A2               	movwf	??___flge+2
  9480  1FA0  3080               	movlw	128
  9481  1FA1  00A3               	movwf	??___flge+3
  9482  1FA2  0872               	movf	___flge@ff1,w
  9483  1FA3  02A0               	subwf	??___flge,f
  9484  1FA4  0873               	movf	___flge@ff1+1,w
  9485  1FA5  1C03               	skipc
  9486  1FA6  0F73               	incfsz	___flge@ff1+1,w
  9487  1FA7  2FA9               	goto	u4601
  9488  1FA8  2FAA               	goto	u4602
  9489  1FA9                     u4601:	
  9490  1FA9  02A1               	subwf	??___flge+1,f
  9491  1FAA                     u4602:	
  9492  1FAA  0874               	movf	___flge@ff1+2,w
  9493  1FAB  1C03               	skipc
  9494  1FAC  0F74               	incfsz	___flge@ff1+2,w
  9495  1FAD  2FAF               	goto	u4603
  9496  1FAE  2FB0               	goto	u4604
  9497  1FAF                     u4603:	
  9498  1FAF  02A2               	subwf	??___flge+2,f
  9499  1FB0                     u4604:	
  9500  1FB0  0875               	movf	___flge@ff1+3,w
  9501  1FB1  1C03               	skipc
  9502  1FB2  0F75               	incfsz	___flge@ff1+3,w
  9503  1FB3  2FB5               	goto	u4605
  9504  1FB4  2FB6               	goto	u4606
  9505  1FB5                     u4605:	
  9506  1FB5  02A3               	subwf	??___flge+3,f
  9507  1FB6                     u4606:	
  9508  1FB6  0823               	movf	??___flge+3,w
  9509  1FB7  00F5               	movwf	___flge@ff1+3
  9510  1FB8  0822               	movf	??___flge+2,w
  9511  1FB9  00F4               	movwf	___flge@ff1+2
  9512  1FBA  0821               	movf	??___flge+1,w
  9513  1FBB  00F3               	movwf	___flge@ff1+1
  9514  1FBC  0820               	movf	??___flge,w
  9515  1FBD  00F2               	movwf	___flge@ff1
  9516  1FBE                     l2870:	
  9517  1FBE  1FF9               	btfss	___flge@ff2+3,7
  9518  1FBF  2FC1               	goto	u4611
  9519  1FC0  2FC2               	goto	u4610
  9520  1FC1                     u4611:	
  9521  1FC1  2FE6               	goto	l519
  9522  1FC2                     u4610:	
  9523  1FC2                     l2872:	
  9524  1FC2  3000               	movlw	0
  9525  1FC3  00A0               	movwf	??___flge
  9526  1FC4  3000               	movlw	0
  9527  1FC5  00A1               	movwf	??___flge+1
  9528  1FC6  3000               	movlw	0
  9529  1FC7  00A2               	movwf	??___flge+2
  9530  1FC8  3080               	movlw	128
  9531  1FC9  00A3               	movwf	??___flge+3
  9532  1FCA  0876               	movf	___flge@ff2,w
  9533  1FCB  02A0               	subwf	??___flge,f
  9534  1FCC  0877               	movf	___flge@ff2+1,w
  9535  1FCD  1C03               	skipc
  9536  1FCE  0F77               	incfsz	___flge@ff2+1,w
  9537  1FCF  2FD1               	goto	u4621
  9538  1FD0  2FD2               	goto	u4622
  9539  1FD1                     u4621:	
  9540  1FD1  02A1               	subwf	??___flge+1,f
  9541  1FD2                     u4622:	
  9542  1FD2  0878               	movf	___flge@ff2+2,w
  9543  1FD3  1C03               	skipc
  9544  1FD4  0F78               	incfsz	___flge@ff2+2,w
  9545  1FD5  2FD7               	goto	u4623
  9546  1FD6  2FD8               	goto	u4624
  9547  1FD7                     u4623:	
  9548  1FD7  02A2               	subwf	??___flge+2,f
  9549  1FD8                     u4624:	
  9550  1FD8  0879               	movf	___flge@ff2+3,w
  9551  1FD9  1C03               	skipc
  9552  1FDA  0F79               	incfsz	___flge@ff2+3,w
  9553  1FDB  2FDD               	goto	u4625
  9554  1FDC  2FDE               	goto	u4626
  9555  1FDD                     u4625:	
  9556  1FDD  02A3               	subwf	??___flge+3,f
  9557  1FDE                     u4626:	
  9558  1FDE  0823               	movf	??___flge+3,w
  9559  1FDF  00F9               	movwf	___flge@ff2+3
  9560  1FE0  0822               	movf	??___flge+2,w
  9561  1FE1  00F8               	movwf	___flge@ff2+2
  9562  1FE2  0821               	movf	??___flge+1,w
  9563  1FE3  00F7               	movwf	___flge@ff2+1
  9564  1FE4  0820               	movf	??___flge,w
  9565  1FE5  00F6               	movwf	___flge@ff2
  9566  1FE6                     l519:	
  9567  1FE6  3080               	movlw	128
  9568  1FE7  06F5               	xorwf	___flge@ff1+3,f
  9569  1FE8  3080               	movlw	128
  9570  1FE9  06F9               	xorwf	___flge@ff2+3,f
  9571  1FEA  0879               	movf	___flge@ff2+3,w
  9572  1FEB  0275               	subwf	___flge@ff1+3,w
  9573  1FEC  1D03               	skipz
  9574  1FED  2FF8               	goto	u4635
  9575  1FEE  0878               	movf	___flge@ff2+2,w
  9576  1FEF  0274               	subwf	___flge@ff1+2,w
  9577  1FF0  1D03               	skipz
  9578  1FF1  2FF8               	goto	u4635
  9579  1FF2  0877               	movf	___flge@ff2+1,w
  9580  1FF3  0273               	subwf	___flge@ff1+1,w
  9581  1FF4  1D03               	skipz
  9582  1FF5  2FF8               	goto	u4635
  9583  1FF6  0876               	movf	___flge@ff2,w
  9584  1FF7  0272               	subwf	___flge@ff1,w
  9585  1FF8                     u4635:	
  9586  1FF8  1803               	skipnc
  9587  1FF9  2FFB               	goto	u4631
  9588  1FFA  2FFC               	goto	u4630
  9589  1FFB                     u4631:	
  9590  1FFB  2FFE               	goto	l2876
  9591  1FFC                     u4630:	
  9592  1FFC                     l2874:	
  9593  1FFC  1003               	clrc
  9594  1FFD  2FFF               	goto	l520
  9595  1FFE                     l2876:	
  9596  1FFE  1403               	setc
  9597  1FFF                     l520:	
  9598  1FFF  0008               	return
  9599  2000                     __end_of___flge:	
  9600                           
  9601                           	psect	text24
  9602  1D07                     __ptext24:	
  9603 ;; *************** function ___fleq *****************
  9604 ;; Defined at:
  9605 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fleq.c"
  9606 ;; Parameters:    Size  Location     Type
  9607 ;;  ff1             4    2[COMMON] unsigned char 
  9608 ;;  ff2             4    6[COMMON] unsigned char 
  9609 ;; Auto vars:     Size  Location     Type
  9610 ;;		None
  9611 ;; Return value:  Size  Location     Type
  9612 ;;		None               void
  9613 ;; Registers used:
  9614 ;;		wreg, status,2, status,0
  9615 ;; Tracked objects:
  9616 ;;		On entry : 0/0
  9617 ;;		On exit  : 0/0
  9618 ;;		Unchanged: 0/0
  9619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9620 ;;      Params:         8       0       0       0       0
  9621 ;;      Locals:         0       0       0       0       0
  9622 ;;      Temps:          0       4       0       0       0
  9623 ;;      Totals:         8       4       0       0       0
  9624 ;;Total ram usage:       12 bytes
  9625 ;; Hardware stack levels used:    1
  9626 ;; Hardware stack levels required when called:    1
  9627 ;; This function calls:
  9628 ;;		Nothing
  9629 ;; This function is called by:
  9630 ;;		_sprintf
  9631 ;; This function uses a non-reentrant model
  9632 ;;
  9633                           
  9634                           
  9635                           ;psect for function ___fleq
  9636  1D07                     ___fleq:	
  9637  1D07                     l2848:	
  9638                           ;incstack = 0
  9639                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  9640                           
  9641  1D07  3000               	movlw	0
  9642  1D08  0572               	andwf	___fleq@ff1,w
  9643  1D09  1283               	bcf	3,5	;RP0=0, select bank0
  9644  1D0A  1303               	bcf	3,6	;RP1=0, select bank0
  9645  1D0B  00A0               	movwf	??___fleq
  9646  1D0C  3000               	movlw	0
  9647  1D0D  0573               	andwf	___fleq@ff1+1,w
  9648  1D0E  00A1               	movwf	??___fleq+1
  9649  1D0F  3080               	movlw	128
  9650  1D10  0574               	andwf	___fleq@ff1+2,w
  9651  1D11  00A2               	movwf	??___fleq+2
  9652  1D12  307F               	movlw	127
  9653  1D13  0575               	andwf	___fleq@ff1+3,w
  9654  1D14  00A3               	movwf	??___fleq+3
  9655  1D15  0823               	movf	??___fleq+3,w
  9656  1D16  0422               	iorwf	??___fleq+2,w
  9657  1D17  0421               	iorwf	??___fleq+1,w
  9658  1D18  0420               	iorwf	??___fleq,w
  9659  1D19  1D03               	skipz
  9660  1D1A  2D1C               	goto	u4541
  9661  1D1B  2D1D               	goto	u4540
  9662  1D1C                     u4541:	
  9663  1D1C  2D25               	goto	l511
  9664  1D1D                     u4540:	
  9665  1D1D                     l2850:	
  9666  1D1D  3000               	movlw	0
  9667  1D1E  00F5               	movwf	___fleq@ff1+3
  9668  1D1F  3000               	movlw	0
  9669  1D20  00F4               	movwf	___fleq@ff1+2
  9670  1D21  3000               	movlw	0
  9671  1D22  00F3               	movwf	___fleq@ff1+1
  9672  1D23  3000               	movlw	0
  9673  1D24  00F2               	movwf	___fleq@ff1
  9674  1D25                     l511:	
  9675  1D25  3000               	movlw	0
  9676  1D26  0576               	andwf	___fleq@ff2,w
  9677  1D27  00A0               	movwf	??___fleq
  9678  1D28  3000               	movlw	0
  9679  1D29  0577               	andwf	___fleq@ff2+1,w
  9680  1D2A  00A1               	movwf	??___fleq+1
  9681  1D2B  3080               	movlw	128
  9682  1D2C  0578               	andwf	___fleq@ff2+2,w
  9683  1D2D  00A2               	movwf	??___fleq+2
  9684  1D2E  307F               	movlw	127
  9685  1D2F  0579               	andwf	___fleq@ff2+3,w
  9686  1D30  00A3               	movwf	??___fleq+3
  9687  1D31  0823               	movf	??___fleq+3,w
  9688  1D32  0422               	iorwf	??___fleq+2,w
  9689  1D33  0421               	iorwf	??___fleq+1,w
  9690  1D34  0420               	iorwf	??___fleq,w
  9691  1D35  1D03               	skipz
  9692  1D36  2D38               	goto	u4551
  9693  1D37  2D39               	goto	u4550
  9694  1D38                     u4551:	
  9695  1D38  2D41               	goto	l512
  9696  1D39                     u4550:	
  9697  1D39                     l2852:	
  9698  1D39  3000               	movlw	0
  9699  1D3A  00F9               	movwf	___fleq@ff2+3
  9700  1D3B  3000               	movlw	0
  9701  1D3C  00F8               	movwf	___fleq@ff2+2
  9702  1D3D  3000               	movlw	0
  9703  1D3E  00F7               	movwf	___fleq@ff2+1
  9704  1D3F  3000               	movlw	0
  9705  1D40  00F6               	movwf	___fleq@ff2
  9706  1D41                     l512:	
  9707  1D41  0879               	movf	___fleq@ff2+3,w
  9708  1D42  0675               	xorwf	___fleq@ff1+3,w
  9709  1D43  1D03               	skipz
  9710  1D44  2D4F               	goto	u4565
  9711  1D45  0878               	movf	___fleq@ff2+2,w
  9712  1D46  0674               	xorwf	___fleq@ff1+2,w
  9713  1D47  1D03               	skipz
  9714  1D48  2D4F               	goto	u4565
  9715  1D49  0877               	movf	___fleq@ff2+1,w
  9716  1D4A  0673               	xorwf	___fleq@ff1+1,w
  9717  1D4B  1D03               	skipz
  9718  1D4C  2D4F               	goto	u4565
  9719  1D4D  0876               	movf	___fleq@ff2,w
  9720  1D4E  0672               	xorwf	___fleq@ff1,w
  9721  1D4F                     u4565:	
  9722  1D4F  1903               	skipnz
  9723  1D50  2D52               	goto	u4561
  9724  1D51  2D53               	goto	u4560
  9725  1D52                     u4561:	
  9726  1D52  2D55               	goto	l2856
  9727  1D53                     u4560:	
  9728  1D53                     l2854:	
  9729  1D53  1003               	clrc
  9730  1D54  2D56               	goto	l513
  9731  1D55                     l2856:	
  9732  1D55  1403               	setc
  9733  1D56                     l513:	
  9734  1D56  0008               	return
  9735  1D57                     __end_of___fleq:	
  9736                           
  9737                           	psect	text25
  9738  1C2C                     __ptext25:	
  9739 ;; *************** function _lcd_write_string *****************
  9740 ;; Defined at:
  9741 ;;		line 59 in file "LCD_Init.c"
  9742 ;; Parameters:    Size  Location     Type
  9743 ;;  var             2    5[COMMON] PTR unsigned char 
  9744 ;;		 -> lcd_write_float@buffer(4), lcd_write_int@buffer(4), STR_1(11), 
  9745 ;; Auto vars:     Size  Location     Type
  9746 ;;  i               2    0[BANK0 ] int 
  9747 ;; Return value:  Size  Location     Type
  9748 ;;                  1    wreg      void 
  9749 ;; Registers used:
  9750 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9751 ;; Tracked objects:
  9752 ;;		On entry : 0/0
  9753 ;;		On exit  : 0/0
  9754 ;;		Unchanged: 0/0
  9755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9756 ;;      Params:         2       0       0       0       0
  9757 ;;      Locals:         0       2       0       0       0
  9758 ;;      Temps:          3       0       0       0       0
  9759 ;;      Totals:         5       2       0       0       0
  9760 ;;Total ram usage:        7 bytes
  9761 ;; Hardware stack levels used:    1
  9762 ;; Hardware stack levels required when called:    2
  9763 ;; This function calls:
  9764 ;;		_lcd_write_char
  9765 ;; This function is called by:
  9766 ;;		_main
  9767 ;;		_lcd_write_int
  9768 ;;		_lcd_write_float
  9769 ;; This function uses a non-reentrant model
  9770 ;;
  9771                           
  9772                           
  9773                           ;psect for function _lcd_write_string
  9774  1C2C                     _lcd_write_string:	
  9775  1C2C                     l3466:	
  9776                           ;incstack = 0
  9777                           ; Regs used in _lcd_write_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9778                           
  9779                           
  9780                           ;LCD_Init.c: 60:     int i;;LCD_Init.c: 61:  for(i=0;var[i]!='\0';i++)
  9781  1C2C  1283               	bcf	3,5	;RP0=0, select bank0
  9782  1C2D  1303               	bcf	3,6	;RP1=0, select bank0
  9783  1C2E  01A0               	clrf	lcd_write_string@i
  9784  1C2F  01A1               	clrf	lcd_write_string@i+1
  9785  1C30  2C55               	goto	l3472
  9786  1C31                     l3468:	
  9787                           
  9788                           ;LCD_Init.c: 62:     lcd_write_char(var[i]);
  9789  1C31  0820               	movf	lcd_write_string@i,w
  9790  1C32  0775               	addwf	lcd_write_string@var,w
  9791  1C33  00F8               	movwf	??_lcd_write_string+1
  9792  1C34  0876               	movf	lcd_write_string@var+1,w
  9793  1C35  00F7               	movwf	??_lcd_write_string
  9794  1C36  1803               	skipnc
  9795  1C37  0AF7               	incf	??_lcd_write_string,f
  9796  1C38  1FA0               	btfss	lcd_write_string@i,7
  9797  1C39  2C3B               	goto	u5640
  9798  1C3A  03F7               	decf	??_lcd_write_string,f
  9799  1C3B                     u5640:	
  9800  1C3B  0877               	movf	??_lcd_write_string,w
  9801  1C3C  00F9               	movwf	??_lcd_write_string+2
  9802  1C3D  0879               	movf	??_lcd_write_string+2,w
  9803  1C3E  1283               	bcf	3,5	;RP0=0, select bank0
  9804  1C3F  1303               	bcf	3,6	;RP1=0, select bank0
  9805  1C40  00FF               	movwf	btemp+1
  9806  1C41  0878               	movf	??_lcd_write_string+1,w
  9807  1C42  0084               	movwf	4
  9808  1C43  160A  118A  2000  160A  158A  	fcall	stringtab
  9809  1C48  160A  158A  2337  160A  158A  	fcall	_lcd_write_char
  9810  1C4D                     l3470:	
  9811  1C4D  3001               	movlw	1
  9812  1C4E  1283               	bcf	3,5	;RP0=0, select bank0
  9813  1C4F  1303               	bcf	3,6	;RP1=0, select bank0
  9814  1C50  07A0               	addwf	lcd_write_string@i,f
  9815  1C51  1803               	skipnc
  9816  1C52  0AA1               	incf	lcd_write_string@i+1,f
  9817  1C53  3000               	movlw	0
  9818  1C54  07A1               	addwf	lcd_write_string@i+1,f
  9819  1C55                     l3472:	
  9820  1C55  0820               	movf	lcd_write_string@i,w
  9821  1C56  0775               	addwf	lcd_write_string@var,w
  9822  1C57  00F8               	movwf	??_lcd_write_string+1
  9823  1C58  0876               	movf	lcd_write_string@var+1,w
  9824  1C59  00F7               	movwf	??_lcd_write_string
  9825  1C5A  1803               	skipnc
  9826  1C5B  0AF7               	incf	??_lcd_write_string,f
  9827  1C5C  1FA0               	btfss	lcd_write_string@i,7
  9828  1C5D  2C5F               	goto	u5650
  9829  1C5E  03F7               	decf	??_lcd_write_string,f
  9830  1C5F                     u5650:	
  9831  1C5F  0877               	movf	??_lcd_write_string,w
  9832  1C60  00F9               	movwf	??_lcd_write_string+2
  9833  1C61  0879               	movf	??_lcd_write_string+2,w
  9834  1C62  1283               	bcf	3,5	;RP0=0, select bank0
  9835  1C63  1303               	bcf	3,6	;RP1=0, select bank0
  9836  1C64  00FF               	movwf	btemp+1
  9837  1C65  0878               	movf	??_lcd_write_string+1,w
  9838  1C66  0084               	movwf	4
  9839  1C67  160A  118A  2000  160A  158A  	fcall	stringtab
  9840  1C6C  3A00               	xorlw	0
  9841  1C6D  1D03               	skipz
  9842  1C6E  2C70               	goto	u5661
  9843  1C6F  2C71               	goto	u5660
  9844  1C70                     u5661:	
  9845  1C70  2C31               	goto	l3468
  9846  1C71                     u5660:	
  9847  1C71                     l100:	
  9848  1C71  0008               	return
  9849  1C72                     __end_of_lcd_write_string:	
  9850                           
  9851                           	psect	text26
  9852  1B37                     __ptext26:	
  9853 ;; *************** function _lcd_write_char *****************
  9854 ;; Defined at:
  9855 ;;		line 51 in file "LCD_Init.c"
  9856 ;; Parameters:    Size  Location     Type
  9857 ;;  var             1    wreg     unsigned char 
  9858 ;; Auto vars:     Size  Location     Type
  9859 ;;  var             1    4[COMMON] unsigned char 
  9860 ;; Return value:  Size  Location     Type
  9861 ;;                  1    wreg      void 
  9862 ;; Registers used:
  9863 ;;		wreg
  9864 ;; Tracked objects:
  9865 ;;		On entry : 0/0
  9866 ;;		On exit  : 0/0
  9867 ;;		Unchanged: 0/0
  9868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9869 ;;      Params:         0       0       0       0       0
  9870 ;;      Locals:         1       0       0       0       0
  9871 ;;      Temps:          2       0       0       0       0
  9872 ;;      Totals:         3       0       0       0       0
  9873 ;;Total ram usage:        3 bytes
  9874 ;; Hardware stack levels used:    1
  9875 ;; Hardware stack levels required when called:    1
  9876 ;; This function calls:
  9877 ;;		Nothing
  9878 ;; This function is called by:
  9879 ;;		_lcd_write_string
  9880 ;; This function uses a non-reentrant model
  9881 ;;
  9882                           
  9883                           
  9884                           ;psect for function _lcd_write_char
  9885  1B37                     _lcd_write_char:	
  9886                           
  9887                           ;incstack = 0
  9888                           ; Regs used in _lcd_write_char: [wreg]
  9889                           ;lcd_write_char@var stored from wreg
  9890  1B37  00F4               	movwf	lcd_write_char@var
  9891  1B38                     l3420:	
  9892                           
  9893                           ;LCD_Init.c: 52:     PORTBbits.RB6 = 1;
  9894  1B38  1283               	bcf	3,5	;RP0=0, select bank0
  9895  1B39  1303               	bcf	3,6	;RP1=0, select bank0
  9896  1B3A  1706               	bsf	6,6	;volatile
  9897  1B3B                     l3422:	
  9898                           
  9899                           ;LCD_Init.c: 53:     PORTD = var;
  9900  1B3B  0874               	movf	lcd_write_char@var,w
  9901  1B3C  0088               	movwf	8	;volatile
  9902  1B3D                     l3424:	
  9903                           
  9904                           ;LCD_Init.c: 54:     PORTBbits.RB7 = 1;
  9905  1B3D  1786               	bsf	6,7	;volatile
  9906                           
  9907                           ;LCD_Init.c: 55:     _delay((unsigned long)((4)*(4000000/4000.0)));
  9908  1B3E  3006               	movlw	6
  9909  1B3F  00F3               	movwf	??_lcd_write_char+1
  9910  1B40  3030               	movlw	48
  9911  1B41  00F2               	movwf	??_lcd_write_char
  9912  1B42                     u6117:	
  9913  1B42  0BF2               	decfsz	??_lcd_write_char,f
  9914  1B43  2B42               	goto	u6117
  9915  1B44  0BF3               	decfsz	??_lcd_write_char+1,f
  9916  1B45  2B42               	goto	u6117
  9917  1B46  0000               	nop
  9918  1B47                     l3426:	
  9919                           
  9920                           ;LCD_Init.c: 56:     PORTBbits.RB7 = 0;
  9921  1B47  1283               	bcf	3,5	;RP0=0, select bank0
  9922  1B48  1303               	bcf	3,6	;RP1=0, select bank0
  9923  1B49  1386               	bcf	6,7	;volatile
  9924  1B4A                     l94:	
  9925  1B4A  0008               	return
  9926  1B4B                     __end_of_lcd_write_char:	
  9927                           
  9928                           	psect	text27
  9929  1B63                     __ptext27:	
  9930 ;; *************** function _lcd_set_cursor *****************
  9931 ;; Defined at:
  9932 ;;		line 42 in file "LCD_Init.c"
  9933 ;; Parameters:    Size  Location     Type
  9934 ;;  posx            1    wreg     unsigned char 
  9935 ;;  posy            1    5[COMMON] unsigned char 
  9936 ;; Auto vars:     Size  Location     Type
  9937 ;;  posx            1    6[COMMON] unsigned char 
  9938 ;; Return value:  Size  Location     Type
  9939 ;;                  1    wreg      void 
  9940 ;; Registers used:
  9941 ;;		wreg, status,2, status,0, pclath, cstack
  9942 ;; Tracked objects:
  9943 ;;		On entry : 0/0
  9944 ;;		On exit  : 0/0
  9945 ;;		Unchanged: 0/0
  9946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9947 ;;      Params:         1       0       0       0       0
  9948 ;;      Locals:         1       0       0       0       0
  9949 ;;      Temps:          0       0       0       0       0
  9950 ;;      Totals:         2       0       0       0       0
  9951 ;;Total ram usage:        2 bytes
  9952 ;; Hardware stack levels used:    1
  9953 ;; Hardware stack levels required when called:    2
  9954 ;; This function calls:
  9955 ;;		_lcd_cmd
  9956 ;; This function is called by:
  9957 ;;		_main
  9958 ;; This function uses a non-reentrant model
  9959 ;;
  9960                           
  9961                           
  9962                           ;psect for function _lcd_set_cursor
  9963  1B63                     _lcd_set_cursor:	
  9964                           
  9965                           ;incstack = 0
  9966                           ; Regs used in _lcd_set_cursor: [wreg+status,2+status,0+pclath+cstack]
  9967                           ;lcd_set_cursor@posx stored from wreg
  9968  1B63  00F6               	movwf	lcd_set_cursor@posx
  9969  1B64                     l3286:	
  9970                           
  9971                           ;LCD_Init.c: 43:     if(posy == 1){
  9972  1B64  0375               	decf	lcd_set_cursor@posy,w
  9973  1B65  1D03               	btfss	3,2
  9974  1B66  2B68               	goto	u5391
  9975  1B67  2B69               	goto	u5390
  9976  1B68                     u5391:	
  9977  1B68  2B70               	goto	l3290
  9978  1B69                     u5390:	
  9979  1B69                     l3288:	
  9980                           
  9981                           ;LCD_Init.c: 44:         lcd_cmd (0x80 + posx - 1);
  9982  1B69  0876               	movf	lcd_set_cursor@posx,w
  9983  1B6A  3E7F               	addlw	127
  9984  1B6B  160A  158A  2323  160A  158A  	fcall	_lcd_cmd
  9985  1B70                     l3290:	
  9986                           
  9987                           ;LCD_Init.c: 46:     if(posy == 2){
  9988  1B70  3002               	movlw	2
  9989  1B71  0675               	xorwf	lcd_set_cursor@posy,w
  9990  1B72  1D03               	btfss	3,2
  9991  1B73  2B75               	goto	u5401
  9992  1B74  2B76               	goto	u5400
  9993  1B75                     u5401:	
  9994  1B75  2B7D               	goto	l91
  9995  1B76                     u5400:	
  9996  1B76                     l3292:	
  9997                           
  9998                           ;LCD_Init.c: 47:         lcd_cmd (0xC0 + posx - 1);
  9999  1B76  0876               	movf	lcd_set_cursor@posx,w
 10000  1B77  3EBF               	addlw	191
 10001  1B78  160A  158A  2323  160A  158A  	fcall	_lcd_cmd
 10002  1B7D                     l91:	
 10003  1B7D  0008               	return
 10004  1B7E                     __end_of_lcd_set_cursor:	
 10005                           
 10006                           	psect	text28
 10007  07F8                     __ptext28:	
 10008 ;; *************** function _lcd_clr *****************
 10009 ;; Defined at:
 10010 ;;		line 38 in file "LCD_Init.c"
 10011 ;; Parameters:    Size  Location     Type
 10012 ;;		None
 10013 ;; Auto vars:     Size  Location     Type
 10014 ;;		None
 10015 ;; Return value:  Size  Location     Type
 10016 ;;                  1    wreg      void 
 10017 ;; Registers used:
 10018 ;;		wreg, status,2, status,0, pclath, cstack
 10019 ;; Tracked objects:
 10020 ;;		On entry : 0/0
 10021 ;;		On exit  : 0/0
 10022 ;;		Unchanged: 0/0
 10023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10024 ;;      Params:         0       0       0       0       0
 10025 ;;      Locals:         0       0       0       0       0
 10026 ;;      Temps:          0       0       0       0       0
 10027 ;;      Totals:         0       0       0       0       0
 10028 ;;Total ram usage:        0 bytes
 10029 ;; Hardware stack levels used:    1
 10030 ;; Hardware stack levels required when called:    2
 10031 ;; This function calls:
 10032 ;;		_lcd_cmd
 10033 ;; This function is called by:
 10034 ;;		_main
 10035 ;; This function uses a non-reentrant model
 10036 ;;
 10037                           
 10038                           
 10039                           ;psect for function _lcd_clr
 10040  07F8                     _lcd_clr:	
 10041  07F8                     l3282:	
 10042                           ;incstack = 0
 10043                           ; Regs used in _lcd_clr: [wreg+status,2+status,0+pclath+cstack]
 10044                           
 10045                           
 10046                           ;LCD_Init.c: 39:     lcd_cmd(0x01);
 10047  07F8  3001               	movlw	1
 10048  07F9  160A  158A  2323  120A  118A  	fcall	_lcd_cmd
 10049  07FE                     l86:	
 10050  07FE  0008               	return
 10051  07FF                     __end_of_lcd_clr:	
 10052                           
 10053                           	psect	text29
 10054  1CB8                     __ptext29:	
 10055 ;; *************** function _initLCD *****************
 10056 ;; Defined at:
 10057 ;;		line 9 in file "LCD_Init.c"
 10058 ;; Parameters:    Size  Location     Type
 10059 ;;		None
 10060 ;; Auto vars:     Size  Location     Type
 10061 ;;		None
 10062 ;; Return value:  Size  Location     Type
 10063 ;;                  1    wreg      void 
 10064 ;; Registers used:
 10065 ;;		wreg, status,2, status,0, pclath, cstack
 10066 ;; Tracked objects:
 10067 ;;		On entry : 0/0
 10068 ;;		On exit  : 0/0
 10069 ;;		Unchanged: 0/0
 10070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10071 ;;      Params:         0       0       0       0       0
 10072 ;;      Locals:         0       0       0       0       0
 10073 ;;      Temps:          2       0       0       0       0
 10074 ;;      Totals:         2       0       0       0       0
 10075 ;;Total ram usage:        2 bytes
 10076 ;; Hardware stack levels used:    1
 10077 ;; Hardware stack levels required when called:    2
 10078 ;; This function calls:
 10079 ;;		_lcd_cmd
 10080 ;; This function is called by:
 10081 ;;		_main
 10082 ;; This function uses a non-reentrant model
 10083 ;;
 10084                           
 10085                           
 10086                           ;psect for function _initLCD
 10087  1CB8                     _initLCD:	
 10088  1CB8                     l3248:	
 10089                           ;incstack = 0
 10090                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
 10091                           
 10092                           
 10093                           ;LCD_Init.c: 10: _delay((unsigned long)((15)*(4000000/4000.0)));
 10094  1CB8  3014               	movlw	20
 10095  1CB9  00F6               	movwf	??_initLCD+1
 10096  1CBA  3079               	movlw	121
 10097  1CBB  00F5               	movwf	??_initLCD
 10098  1CBC                     u6127:	
 10099  1CBC  0BF5               	decfsz	??_initLCD,f
 10100  1CBD  2CBC               	goto	u6127
 10101  1CBE  0BF6               	decfsz	??_initLCD+1,f
 10102  1CBF  2CBC               	goto	u6127
 10103  1CC0  2CC1               	nop2
 10104  1CC1                     l3250:	
 10105                           
 10106                           ;LCD_Init.c: 12: lcd_cmd(0x030);
 10107  1CC1  3030               	movlw	48
 10108  1CC2  160A  158A  2323  160A  158A  	fcall	_lcd_cmd
 10109  1CC7                     l3252:	
 10110                           
 10111                           ;LCD_Init.c: 13: _delay((unsigned long)((5)*(4000000/4000.0)));
 10112  1CC7  3007               	movlw	7
 10113  1CC8  00F6               	movwf	??_initLCD+1
 10114  1CC9  307D               	movlw	125
 10115  1CCA  00F5               	movwf	??_initLCD
 10116  1CCB                     u6137:	
 10117  1CCB  0BF5               	decfsz	??_initLCD,f
 10118  1CCC  2CCB               	goto	u6137
 10119  1CCD  0BF6               	decfsz	??_initLCD+1,f
 10120  1CCE  2CCB               	goto	u6137
 10121                           
 10122                           ;LCD_Init.c: 15: lcd_cmd(0x030);
 10123  1CCF  3030               	movlw	48
 10124  1CD0  160A  158A  2323  160A  158A  	fcall	_lcd_cmd
 10125  1CD5                     l3254:	
 10126                           
 10127                           ;LCD_Init.c: 16: _delay((unsigned long)((11)*(4000000/4000.0)));
 10128  1CD5  300F               	movlw	15
 10129  1CD6  00F6               	movwf	??_initLCD+1
 10130  1CD7  3047               	movlw	71
 10131  1CD8  00F5               	movwf	??_initLCD
 10132  1CD9                     u6147:	
 10133  1CD9  0BF5               	decfsz	??_initLCD,f
 10134  1CDA  2CD9               	goto	u6147
 10135  1CDB  0BF6               	decfsz	??_initLCD+1,f
 10136  1CDC  2CD9               	goto	u6147
 10137  1CDD  2CDE               	nop2
 10138  1CDE                     l3256:	
 10139                           
 10140                           ;LCD_Init.c: 18: lcd_cmd(0x030);
 10141  1CDE  3030               	movlw	48
 10142  1CDF  160A  158A  2323  160A  158A  	fcall	_lcd_cmd
 10143                           
 10144                           ;LCD_Init.c: 19: _delay((unsigned long)((160)*(4000000/4000000.0)));
 10145  1CE4  3035               	movlw	53
 10146  1CE5  00F5               	movwf	??_initLCD
 10147  1CE6                     u6157:	
 10148  1CE6  0BF5               	decfsz	??_initLCD,f
 10149  1CE7  2CE6               	goto	u6157
 10150  1CE8                     l3258:	
 10151                           
 10152                           ;LCD_Init.c: 21: lcd_cmd(0x38);
 10153  1CE8  3038               	movlw	56
 10154  1CE9  160A  158A  2323  160A  158A  	fcall	_lcd_cmd
 10155  1CEE                     l3260:	
 10156                           
 10157                           ;LCD_Init.c: 22: lcd_cmd(0x10);
 10158  1CEE  3010               	movlw	16
 10159  1CEF  160A  158A  2323  160A  158A  	fcall	_lcd_cmd
 10160  1CF4                     l3262:	
 10161                           
 10162                           ;LCD_Init.c: 23: lcd_cmd(0x01);
 10163  1CF4  3001               	movlw	1
 10164  1CF5  160A  158A  2323  160A  158A  	fcall	_lcd_cmd
 10165  1CFA                     l3264:	
 10166                           
 10167                           ;LCD_Init.c: 24: lcd_cmd(0x06);
 10168  1CFA  3006               	movlw	6
 10169  1CFB  160A  158A  2323  160A  158A  	fcall	_lcd_cmd
 10170  1D00                     l3266:	
 10171                           
 10172                           ;LCD_Init.c: 25: lcd_cmd(0x0C);
 10173  1D00  300C               	movlw	12
 10174  1D01  160A  158A  2323  160A  158A  	fcall	_lcd_cmd
 10175  1D06                     l80:	
 10176  1D06  0008               	return
 10177  1D07                     __end_of_initLCD:	
 10178                           
 10179                           	psect	text30
 10180  1B23                     __ptext30:	
 10181 ;; *************** function _lcd_cmd *****************
 10182 ;; Defined at:
 10183 ;;		line 30 in file "LCD_Init.c"
 10184 ;; Parameters:    Size  Location     Type
 10185 ;;  command         1    wreg     unsigned char 
 10186 ;; Auto vars:     Size  Location     Type
 10187 ;;  command         1    4[COMMON] unsigned char 
 10188 ;; Return value:  Size  Location     Type
 10189 ;;                  1    wreg      void 
 10190 ;; Registers used:
 10191 ;;		wreg
 10192 ;; Tracked objects:
 10193 ;;		On entry : 0/0
 10194 ;;		On exit  : 0/0
 10195 ;;		Unchanged: 0/0
 10196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10197 ;;      Params:         0       0       0       0       0
 10198 ;;      Locals:         1       0       0       0       0
 10199 ;;      Temps:          2       0       0       0       0
 10200 ;;      Totals:         3       0       0       0       0
 10201 ;;Total ram usage:        3 bytes
 10202 ;; Hardware stack levels used:    1
 10203 ;; Hardware stack levels required when called:    1
 10204 ;; This function calls:
 10205 ;;		Nothing
 10206 ;; This function is called by:
 10207 ;;		_initLCD
 10208 ;;		_lcd_clr
 10209 ;;		_lcd_set_cursor
 10210 ;; This function uses a non-reentrant model
 10211 ;;
 10212                           
 10213                           
 10214                           ;psect for function _lcd_cmd
 10215  1B23                     _lcd_cmd:	
 10216                           
 10217                           ;incstack = 0
 10218                           ; Regs used in _lcd_cmd: [wreg]
 10219                           ;lcd_cmd@command stored from wreg
 10220  1B23  00F4               	movwf	lcd_cmd@command
 10221  1B24                     l3002:	
 10222                           
 10223                           ;LCD_Init.c: 31:     PORTBbits.RB6 = 0;
 10224  1B24  1283               	bcf	3,5	;RP0=0, select bank0
 10225  1B25  1303               	bcf	3,6	;RP1=0, select bank0
 10226  1B26  1306               	bcf	6,6	;volatile
 10227  1B27                     l3004:	
 10228                           
 10229                           ;LCD_Init.c: 32:     PORTD = command;
 10230  1B27  0874               	movf	lcd_cmd@command,w
 10231  1B28  0088               	movwf	8	;volatile
 10232  1B29                     l3006:	
 10233                           
 10234                           ;LCD_Init.c: 33:     PORTBbits.RB7 = 1;
 10235  1B29  1786               	bsf	6,7	;volatile
 10236                           
 10237                           ;LCD_Init.c: 34:     _delay((unsigned long)((4)*(4000000/4000.0)));
 10238  1B2A  3006               	movlw	6
 10239  1B2B  00F3               	movwf	??_lcd_cmd+1
 10240  1B2C  3030               	movlw	48
 10241  1B2D  00F2               	movwf	??_lcd_cmd
 10242  1B2E                     u6167:	
 10243  1B2E  0BF2               	decfsz	??_lcd_cmd,f
 10244  1B2F  2B2E               	goto	u6167
 10245  1B30  0BF3               	decfsz	??_lcd_cmd+1,f
 10246  1B31  2B2E               	goto	u6167
 10247  1B32  0000               	nop
 10248  1B33                     l3008:	
 10249                           
 10250                           ;LCD_Init.c: 35:     PORTBbits.RB7 = 0;
 10251  1B33  1283               	bcf	3,5	;RP0=0, select bank0
 10252  1B34  1303               	bcf	3,6	;RP1=0, select bank0
 10253  1B35  1386               	bcf	6,7	;volatile
 10254  1B36                     l83:	
 10255  1B36  0008               	return
 10256  1B37                     __end_of_lcd_cmd:	
 10257                           
 10258                           	psect	text31
 10259  1EBE                     __ptext31:	
 10260 ;; *************** function _initADC *****************
 10261 ;; Defined at:
 10262 ;;		line 5 in file "ADC_Init.c"
 10263 ;; Parameters:    Size  Location     Type
 10264 ;;  analog          1    wreg     unsigned char 
 10265 ;; Auto vars:     Size  Location     Type
 10266 ;;  analog          1    4[COMMON] unsigned char 
 10267 ;; Return value:  Size  Location     Type
 10268 ;;                  1    wreg      void 
 10269 ;; Registers used:
 10270 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10271 ;; Tracked objects:
 10272 ;;		On entry : 0/0
 10273 ;;		On exit  : 0/0
 10274 ;;		Unchanged: 0/0
 10275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10276 ;;      Params:         0       0       0       0       0
 10277 ;;      Locals:         1       0       0       0       0
 10278 ;;      Temps:          2       0       0       0       0
 10279 ;;      Totals:         3       0       0       0       0
 10280 ;;Total ram usage:        3 bytes
 10281 ;; Hardware stack levels used:    1
 10282 ;; Hardware stack levels required when called:    1
 10283 ;; This function calls:
 10284 ;;		Nothing
 10285 ;; This function is called by:
 10286 ;;		_main
 10287 ;; This function uses a non-reentrant model
 10288 ;;
 10289                           
 10290                           
 10291                           ;psect for function _initADC
 10292  1EBE                     _initADC:	
 10293                           
 10294                           ;incstack = 0
 10295                           ; Regs used in _initADC: [wreg-fsr0h+status,2+status,0]
 10296                           ;initADC@analog stored from wreg
 10297  1EBE  00F4               	movwf	initADC@analog
 10298  1EBF                     l3268:	
 10299                           
 10300                           ;ADC_Init.c: 6:     INTCONbits.GIE = 1;
 10301  1EBF  178B               	bsf	11,7	;volatile
 10302                           
 10303                           ;ADC_Init.c: 7:     INTCONbits.PEIE = 1;
 10304  1EC0  170B               	bsf	11,6	;volatile
 10305                           
 10306                           ;ADC_Init.c: 9:     PIE1bits.ADIE = 1;
 10307  1EC1  1683               	bsf	3,5	;RP0=1, select bank1
 10308  1EC2  1303               	bcf	3,6	;RP1=0, select bank1
 10309  1EC3  170C               	bsf	12,6	;volatile
 10310                           
 10311                           ;ADC_Init.c: 11:     PIR1bits.ADIF = 0;
 10312  1EC4  1283               	bcf	3,5	;RP0=0, select bank0
 10313  1EC5  1303               	bcf	3,6	;RP1=0, select bank0
 10314  1EC6  130C               	bcf	12,6	;volatile
 10315                           
 10316                           ;ADC_Init.c: 13:     ADCON0bits.ADCS1 = 0;
 10317  1EC7  139F               	bcf	31,7	;volatile
 10318                           
 10319                           ;ADC_Init.c: 14:     ADCON0bits.ADCS0 = 1;
 10320  1EC8  171F               	bsf	31,6	;volatile
 10321                           
 10322                           ;ADC_Init.c: 15:     ADCON0bits.ADON = 1;
 10323  1EC9  141F               	bsf	31,0	;volatile
 10324                           
 10325                           ;ADC_Init.c: 17:     switch(analog){
 10326  1ECA  2F1B               	goto	l3272
 10327  1ECB                     l120:	
 10328                           ;ADC_Init.c: 18:         case 0:
 10329                           
 10330                           
 10331                           ;ADC_Init.c: 19:             ADCON0bits.CHS3 = 0;
 10332  1ECB  129F               	bcf	31,5	;volatile
 10333                           
 10334                           ;ADC_Init.c: 20:             ADCON0bits.CHS2 = 0;
 10335  1ECC  121F               	bcf	31,4	;volatile
 10336                           
 10337                           ;ADC_Init.c: 21:             ADCON0bits.CHS1 = 0;
 10338  1ECD  119F               	bcf	31,3	;volatile
 10339                           
 10340                           ;ADC_Init.c: 22:             ADCON0bits.CHS0 = 0;
 10341  1ECE  111F               	bcf	31,2	;volatile
 10342                           
 10343                           ;ADC_Init.c: 23:             break;
 10344  1ECF  2F55               	goto	l3274
 10345  1ED0                     l122:	
 10346                           ;ADC_Init.c: 25:         case 1:
 10347                           
 10348                           
 10349                           ;ADC_Init.c: 26:             ADCON0bits.CHS3 = 0;
 10350  1ED0  129F               	bcf	31,5	;volatile
 10351                           
 10352                           ;ADC_Init.c: 27:             ADCON0bits.CHS2 = 0;
 10353  1ED1  121F               	bcf	31,4	;volatile
 10354                           
 10355                           ;ADC_Init.c: 28:             ADCON0bits.CHS1 = 0;
 10356  1ED2  119F               	bcf	31,3	;volatile
 10357                           
 10358                           ;ADC_Init.c: 29:             ADCON0bits.CHS0 = 1;
 10359  1ED3  151F               	bsf	31,2	;volatile
 10360                           
 10361                           ;ADC_Init.c: 30:             break;
 10362  1ED4  2F55               	goto	l3274
 10363  1ED5                     l123:	
 10364                           ;ADC_Init.c: 32:         case 2:
 10365                           
 10366                           
 10367                           ;ADC_Init.c: 33:             ADCON0bits.CHS3 = 0;
 10368  1ED5  129F               	bcf	31,5	;volatile
 10369                           
 10370                           ;ADC_Init.c: 34:             ADCON0bits.CHS2 = 0;
 10371  1ED6  121F               	bcf	31,4	;volatile
 10372                           
 10373                           ;ADC_Init.c: 35:             ADCON0bits.CHS1 = 1;
 10374  1ED7  159F               	bsf	31,3	;volatile
 10375                           
 10376                           ;ADC_Init.c: 36:             ADCON0bits.CHS0 = 0;
 10377  1ED8  111F               	bcf	31,2	;volatile
 10378                           
 10379                           ;ADC_Init.c: 37:             break;
 10380  1ED9  2F55               	goto	l3274
 10381  1EDA                     l124:	
 10382                           ;ADC_Init.c: 39:         case 3:
 10383                           
 10384                           
 10385                           ;ADC_Init.c: 40:             ADCON0bits.CHS3 = 0;
 10386  1EDA  129F               	bcf	31,5	;volatile
 10387                           
 10388                           ;ADC_Init.c: 41:             ADCON0bits.CHS2 = 0;
 10389  1EDB  121F               	bcf	31,4	;volatile
 10390                           
 10391                           ;ADC_Init.c: 42:             ADCON0bits.CHS1 = 1;
 10392  1EDC  159F               	bsf	31,3	;volatile
 10393                           
 10394                           ;ADC_Init.c: 43:             ADCON0bits.CHS0 = 1;
 10395  1EDD  151F               	bsf	31,2	;volatile
 10396                           
 10397                           ;ADC_Init.c: 44:             break;
 10398  1EDE  2F55               	goto	l3274
 10399  1EDF                     l125:	
 10400                           ;ADC_Init.c: 46:         case 4:
 10401                           
 10402                           
 10403                           ;ADC_Init.c: 47:             ADCON0bits.CHS3 = 0;
 10404  1EDF  129F               	bcf	31,5	;volatile
 10405                           
 10406                           ;ADC_Init.c: 48:             ADCON0bits.CHS2 = 1;
 10407  1EE0  161F               	bsf	31,4	;volatile
 10408                           
 10409                           ;ADC_Init.c: 49:             ADCON0bits.CHS1 = 0;
 10410  1EE1  119F               	bcf	31,3	;volatile
 10411                           
 10412                           ;ADC_Init.c: 50:             ADCON0bits.CHS0 = 0;
 10413  1EE2  111F               	bcf	31,2	;volatile
 10414                           
 10415                           ;ADC_Init.c: 51:             break;
 10416  1EE3  2F55               	goto	l3274
 10417  1EE4                     l126:	
 10418                           ;ADC_Init.c: 53:         case 5:
 10419                           
 10420                           
 10421                           ;ADC_Init.c: 54:             ADCON0bits.CHS3 = 0;
 10422  1EE4  129F               	bcf	31,5	;volatile
 10423                           
 10424                           ;ADC_Init.c: 55:             ADCON0bits.CHS2 = 1;
 10425  1EE5  161F               	bsf	31,4	;volatile
 10426                           
 10427                           ;ADC_Init.c: 56:             ADCON0bits.CHS1 = 0;
 10428  1EE6  119F               	bcf	31,3	;volatile
 10429                           
 10430                           ;ADC_Init.c: 57:             ADCON0bits.CHS0 = 1;
 10431  1EE7  151F               	bsf	31,2	;volatile
 10432                           
 10433                           ;ADC_Init.c: 58:             break;
 10434  1EE8  2F55               	goto	l3274
 10435  1EE9                     l127:	
 10436                           ;ADC_Init.c: 60:         case 6:
 10437                           
 10438                           
 10439                           ;ADC_Init.c: 61:             ADCON0bits.CHS3 = 0;
 10440  1EE9  129F               	bcf	31,5	;volatile
 10441                           
 10442                           ;ADC_Init.c: 62:             ADCON0bits.CHS2 = 1;
 10443  1EEA  161F               	bsf	31,4	;volatile
 10444                           
 10445                           ;ADC_Init.c: 63:             ADCON0bits.CHS1 = 1;
 10446  1EEB  159F               	bsf	31,3	;volatile
 10447                           
 10448                           ;ADC_Init.c: 64:             ADCON0bits.CHS0 = 0;
 10449  1EEC  111F               	bcf	31,2	;volatile
 10450                           
 10451                           ;ADC_Init.c: 65:             break;
 10452  1EED  2F55               	goto	l3274
 10453  1EEE                     l128:	
 10454                           ;ADC_Init.c: 67:         case 7:
 10455                           
 10456                           
 10457                           ;ADC_Init.c: 68:             ADCON0bits.CHS3 = 0;
 10458  1EEE  129F               	bcf	31,5	;volatile
 10459                           
 10460                           ;ADC_Init.c: 69:             ADCON0bits.CHS2 = 1;
 10461  1EEF  161F               	bsf	31,4	;volatile
 10462                           
 10463                           ;ADC_Init.c: 70:             ADCON0bits.CHS1 = 1;
 10464  1EF0  159F               	bsf	31,3	;volatile
 10465                           
 10466                           ;ADC_Init.c: 71:             ADCON0bits.CHS0 = 1;
 10467  1EF1  151F               	bsf	31,2	;volatile
 10468                           
 10469                           ;ADC_Init.c: 72:             break;
 10470  1EF2  2F55               	goto	l3274
 10471  1EF3                     l129:	
 10472                           ;ADC_Init.c: 74:         case 8:
 10473                           
 10474                           
 10475                           ;ADC_Init.c: 75:             ADCON0bits.CHS3 = 1;
 10476  1EF3  169F               	bsf	31,5	;volatile
 10477                           
 10478                           ;ADC_Init.c: 76:             ADCON0bits.CHS2 = 0;
 10479  1EF4  121F               	bcf	31,4	;volatile
 10480                           
 10481                           ;ADC_Init.c: 77:             ADCON0bits.CHS1 = 0;
 10482  1EF5  119F               	bcf	31,3	;volatile
 10483                           
 10484                           ;ADC_Init.c: 78:             ADCON0bits.CHS0 = 0;
 10485  1EF6  111F               	bcf	31,2	;volatile
 10486                           
 10487                           ;ADC_Init.c: 79:             break;
 10488  1EF7  2F55               	goto	l3274
 10489  1EF8                     l130:	
 10490                           ;ADC_Init.c: 81:         case 9:
 10491                           
 10492                           
 10493                           ;ADC_Init.c: 82:             ADCON0bits.CHS3 = 1;
 10494  1EF8  169F               	bsf	31,5	;volatile
 10495                           
 10496                           ;ADC_Init.c: 83:             ADCON0bits.CHS2 = 0;
 10497  1EF9  121F               	bcf	31,4	;volatile
 10498                           
 10499                           ;ADC_Init.c: 84:             ADCON0bits.CHS1 = 0;
 10500  1EFA  119F               	bcf	31,3	;volatile
 10501                           
 10502                           ;ADC_Init.c: 85:             ADCON0bits.CHS0 = 1;
 10503  1EFB  151F               	bsf	31,2	;volatile
 10504                           
 10505                           ;ADC_Init.c: 86:             break;
 10506  1EFC  2F55               	goto	l3274
 10507  1EFD                     l131:	
 10508                           ;ADC_Init.c: 88:         case 10:
 10509                           
 10510                           
 10511                           ;ADC_Init.c: 89:             ADCON0bits.CHS3 = 1;
 10512  1EFD  169F               	bsf	31,5	;volatile
 10513                           
 10514                           ;ADC_Init.c: 90:             ADCON0bits.CHS2 = 0;
 10515  1EFE  121F               	bcf	31,4	;volatile
 10516                           
 10517                           ;ADC_Init.c: 91:             ADCON0bits.CHS1 = 1;
 10518  1EFF  159F               	bsf	31,3	;volatile
 10519                           
 10520                           ;ADC_Init.c: 92:             ADCON0bits.CHS0 = 0;
 10521  1F00  111F               	bcf	31,2	;volatile
 10522                           
 10523                           ;ADC_Init.c: 93:             break;
 10524  1F01  2F55               	goto	l3274
 10525  1F02                     l132:	
 10526                           ;ADC_Init.c: 95:         case 11:
 10527                           
 10528                           
 10529                           ;ADC_Init.c: 96:             ADCON0bits.CHS3 = 1;
 10530  1F02  169F               	bsf	31,5	;volatile
 10531                           
 10532                           ;ADC_Init.c: 97:             ADCON0bits.CHS2 = 0;
 10533  1F03  121F               	bcf	31,4	;volatile
 10534                           
 10535                           ;ADC_Init.c: 98:             ADCON0bits.CHS1 = 1;
 10536  1F04  159F               	bsf	31,3	;volatile
 10537                           
 10538                           ;ADC_Init.c: 99:             ADCON0bits.CHS0 = 1;
 10539  1F05  151F               	bsf	31,2	;volatile
 10540                           
 10541                           ;ADC_Init.c: 100:             break;
 10542  1F06  2F55               	goto	l3274
 10543  1F07                     l133:	
 10544                           ;ADC_Init.c: 102:         case 12:
 10545                           
 10546                           
 10547                           ;ADC_Init.c: 103:             ADCON0bits.CHS3 = 1;
 10548  1F07  169F               	bsf	31,5	;volatile
 10549                           
 10550                           ;ADC_Init.c: 104:             ADCON0bits.CHS2 = 1;
 10551  1F08  161F               	bsf	31,4	;volatile
 10552                           
 10553                           ;ADC_Init.c: 105:             ADCON0bits.CHS1 = 0;
 10554  1F09  119F               	bcf	31,3	;volatile
 10555                           
 10556                           ;ADC_Init.c: 106:             ADCON0bits.CHS0 = 0;
 10557  1F0A  111F               	bcf	31,2	;volatile
 10558                           
 10559                           ;ADC_Init.c: 107:             break;
 10560  1F0B  2F55               	goto	l3274
 10561  1F0C                     l134:	
 10562                           ;ADC_Init.c: 109:         case 13:
 10563                           
 10564                           
 10565                           ;ADC_Init.c: 110:             ADCON0bits.CHS3 = 1;
 10566  1F0C  169F               	bsf	31,5	;volatile
 10567                           
 10568                           ;ADC_Init.c: 111:             ADCON0bits.CHS2 = 1;
 10569  1F0D  161F               	bsf	31,4	;volatile
 10570                           
 10571                           ;ADC_Init.c: 112:             ADCON0bits.CHS1 = 0;
 10572  1F0E  119F               	bcf	31,3	;volatile
 10573                           
 10574                           ;ADC_Init.c: 113:             ADCON0bits.CHS0 = 1;
 10575  1F0F  151F               	bsf	31,2	;volatile
 10576                           
 10577                           ;ADC_Init.c: 114:             break;
 10578  1F10  2F55               	goto	l3274
 10579  1F11                     l135:	
 10580                           ;ADC_Init.c: 116:         case 14:
 10581                           
 10582                           
 10583                           ;ADC_Init.c: 117:             ADCON0bits.CHS3 = 1;
 10584  1F11  169F               	bsf	31,5	;volatile
 10585                           
 10586                           ;ADC_Init.c: 118:             ADCON0bits.CHS2 = 1;
 10587  1F12  161F               	bsf	31,4	;volatile
 10588                           
 10589                           ;ADC_Init.c: 119:             ADCON0bits.CHS1 = 1;
 10590  1F13  159F               	bsf	31,3	;volatile
 10591                           
 10592                           ;ADC_Init.c: 120:             ADCON0bits.CHS0 = 0;
 10593  1F14  111F               	bcf	31,2	;volatile
 10594                           
 10595                           ;ADC_Init.c: 121:             break;
 10596  1F15  2F55               	goto	l3274
 10597  1F16                     l136:	
 10598                           ;ADC_Init.c: 123:         case 15:
 10599                           
 10600                           
 10601                           ;ADC_Init.c: 124:             ADCON0bits.CHS3 = 1;
 10602  1F16  169F               	bsf	31,5	;volatile
 10603                           
 10604                           ;ADC_Init.c: 125:             ADCON0bits.CHS2 = 1;
 10605  1F17  161F               	bsf	31,4	;volatile
 10606                           
 10607                           ;ADC_Init.c: 126:             ADCON0bits.CHS1 = 1;
 10608  1F18  159F               	bsf	31,3	;volatile
 10609                           
 10610                           ;ADC_Init.c: 127:             ADCON0bits.CHS0 = 1;
 10611  1F19  151F               	bsf	31,2	;volatile
 10612                           
 10613                           ;ADC_Init.c: 128:             break;
 10614  1F1A  2F55               	goto	l3274
 10615  1F1B                     l3272:	
 10616  1F1B  0874               	movf	initADC@analog,w
 10617  1F1C  00F2               	movwf	??_initADC
 10618  1F1D  01F3               	clrf	??_initADC+1
 10619                           
 10620                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10621                           ; Switch size 1, requested type "simple"
 10622                           ; Number of cases is 1, Range of values is 0 to 0
 10623                           ; switch strategies available:
 10624                           ; Name         Instructions Cycles
 10625                           ; simple_byte            4     3 (average)
 10626                           ; direct_byte           11     8 (fixed)
 10627                           ; jumptable            260     6 (fixed)
 10628                           ;	Chosen strategy is simple_byte
 10629  1F1E  0873               	movf	??_initADC+1,w
 10630  1F1F  3A00               	xorlw	0	; case 0
 10631  1F20  1903               	skipnz
 10632  1F21  2F23               	goto	l3812
 10633  1F22  2F55               	goto	l3274
 10634  1F23                     l3812:	
 10635                           
 10636                           ; Switch size 1, requested type "simple"
 10637                           ; Number of cases is 16, Range of values is 0 to 15
 10638                           ; switch strategies available:
 10639                           ; Name         Instructions Cycles
 10640                           ; simple_byte           49    25 (average)
 10641                           ; direct_byte           56     8 (fixed)
 10642                           ; jumptable            260     6 (fixed)
 10643                           ;	Chosen strategy is simple_byte
 10644  1F23  0872               	movf	??_initADC,w
 10645  1F24  3A00               	xorlw	0	; case 0
 10646  1F25  1903               	skipnz
 10647  1F26  2ECB               	goto	l120
 10648  1F27  3A01               	xorlw	1	; case 1
 10649  1F28  1903               	skipnz
 10650  1F29  2ED0               	goto	l122
 10651  1F2A  3A03               	xorlw	3	; case 2
 10652  1F2B  1903               	skipnz
 10653  1F2C  2ED5               	goto	l123
 10654  1F2D  3A01               	xorlw	1	; case 3
 10655  1F2E  1903               	skipnz
 10656  1F2F  2EDA               	goto	l124
 10657  1F30  3A07               	xorlw	7	; case 4
 10658  1F31  1903               	skipnz
 10659  1F32  2EDF               	goto	l125
 10660  1F33  3A01               	xorlw	1	; case 5
 10661  1F34  1903               	skipnz
 10662  1F35  2EE4               	goto	l126
 10663  1F36  3A03               	xorlw	3	; case 6
 10664  1F37  1903               	skipnz
 10665  1F38  2EE9               	goto	l127
 10666  1F39  3A01               	xorlw	1	; case 7
 10667  1F3A  1903               	skipnz
 10668  1F3B  2EEE               	goto	l128
 10669  1F3C  3A0F               	xorlw	15	; case 8
 10670  1F3D  1903               	skipnz
 10671  1F3E  2EF3               	goto	l129
 10672  1F3F  3A01               	xorlw	1	; case 9
 10673  1F40  1903               	skipnz
 10674  1F41  2EF8               	goto	l130
 10675  1F42  3A03               	xorlw	3	; case 10
 10676  1F43  1903               	skipnz
 10677  1F44  2EFD               	goto	l131
 10678  1F45  3A01               	xorlw	1	; case 11
 10679  1F46  1903               	skipnz
 10680  1F47  2F02               	goto	l132
 10681  1F48  3A07               	xorlw	7	; case 12
 10682  1F49  1903               	skipnz
 10683  1F4A  2F07               	goto	l133
 10684  1F4B  3A01               	xorlw	1	; case 13
 10685  1F4C  1903               	skipnz
 10686  1F4D  2F0C               	goto	l134
 10687  1F4E  3A03               	xorlw	3	; case 14
 10688  1F4F  1903               	skipnz
 10689  1F50  2F11               	goto	l135
 10690  1F51  3A01               	xorlw	1	; case 15
 10691  1F52  1903               	skipnz
 10692  1F53  2F16               	goto	l136
 10693  1F54  2F55               	goto	l3274
 10694  1F55                     l3274:	
 10695                           
 10696                           ;ADC_Init.c: 130:     ADCON1 = 0;
 10697  1F55  1683               	bsf	3,5	;RP0=1, select bank1
 10698  1F56  1303               	bcf	3,6	;RP1=0, select bank1
 10699  1F57  019F               	clrf	31	;volatile
 10700  1F58                     l3276:	
 10701                           
 10702                           ;ADC_Init.c: 132:     ADCON0bits.GO_DONE = 1;
 10703  1F58  1283               	bcf	3,5	;RP0=0, select bank0
 10704  1F59  1303               	bcf	3,6	;RP1=0, select bank0
 10705  1F5A  149F               	bsf	31,1	;volatile
 10706  1F5B                     l137:	
 10707  1F5B  0008               	return
 10708  1F5C                     __end_of_initADC:	
 10709                           
 10710                           	psect	text32
 10711  1B4B                     __ptext32:	
 10712 ;; *************** function _ISR *****************
 10713 ;; Defined at:
 10714 ;;		line 34 in file "LCD.c"
 10715 ;; Parameters:    Size  Location     Type
 10716 ;;		None
 10717 ;; Auto vars:     Size  Location     Type
 10718 ;;		None
 10719 ;; Return value:  Size  Location     Type
 10720 ;;                  1    wreg      void 
 10721 ;; Registers used:
 10722 ;;		None
 10723 ;; Tracked objects:
 10724 ;;		On entry : 0/0
 10725 ;;		On exit  : 0/0
 10726 ;;		Unchanged: 0/0
 10727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10728 ;;      Params:         0       0       0       0       0
 10729 ;;      Locals:         0       0       0       0       0
 10730 ;;      Temps:          2       0       0       0       0
 10731 ;;      Totals:         2       0       0       0       0
 10732 ;;Total ram usage:        2 bytes
 10733 ;; Hardware stack levels used:    1
 10734 ;; This function calls:
 10735 ;;		Nothing
 10736 ;; This function is called by:
 10737 ;;		Interrupt level 1
 10738 ;; This function uses a non-reentrant model
 10739 ;;
 10740                           
 10741                           
 10742                           ;psect for function _ISR
 10743  1B4B                     _ISR:	
 10744  1B4B                     i1l3296:	
 10745                           
 10746                           ;LCD.c: 35:     INTCONbits.GIE = 0;
 10747  1B4B  138B               	bcf	11,7	;volatile
 10748                           
 10749                           ;LCD.c: 36:     INTCONbits.PEIE = 0;
 10750  1B4C  130B               	bcf	11,6	;volatile
 10751                           
 10752                           ;LCD.c: 38:     if(ADCON0bits.GO_DONE == 0){
 10753  1B4D  1283               	bcf	3,5	;RP0=0, select bank0
 10754  1B4E  1303               	bcf	3,6	;RP1=0, select bank0
 10755  1B4F  189F               	btfsc	31,1	;volatile
 10756  1B50  2B52               	goto	u541_21
 10757  1B51  2B53               	goto	u541_20
 10758  1B52                     u541_21:	
 10759  1B52  2B5A               	goto	i1l57
 10760  1B53                     u541_20:	
 10761  1B53                     i1l3298:	
 10762                           
 10763                           ;LCD.c: 39:         ready = 1;
 10764  1B53  1683               	bsf	3,5	;RP0=1, select bank1
 10765  1B54  1303               	bcf	3,6	;RP1=0, select bank1
 10766  1B55  01DF               	clrf	_ready^(0+128)
 10767  1B56  0ADF               	incf	_ready^(0+128),f
 10768                           
 10769                           ;LCD.c: 40:         PIR1bits.ADIF = 0;
 10770  1B57  1283               	bcf	3,5	;RP0=0, select bank0
 10771  1B58  1303               	bcf	3,6	;RP1=0, select bank0
 10772  1B59  130C               	bcf	12,6	;volatile
 10773  1B5A                     i1l57:	
 10774                           ;LCD.c: 41:     }
 10775                           
 10776                           
 10777                           ;LCD.c: 43:     INTCONbits.GIE = 1;
 10778  1B5A  178B               	bsf	11,7	;volatile
 10779                           
 10780                           ;LCD.c: 44:     INTCONbits.PEIE = 1;
 10781  1B5B  170B               	bsf	11,6	;volatile
 10782  1B5C                     i1l58:	
 10783  1B5C  0871               	movf	??_ISR+1,w
 10784  1B5D  008A               	movwf	10
 10785  1B5E  0E70               	swapf	??_ISR^(0+4294967168),w
 10786  1B5F  0083               	movwf	3
 10787  1B60  0EFE               	swapf	btemp,f
 10788  1B61  0E7E               	swapf	btemp,w
 10789  1B62  0009               	retfie
 10790  1B63                     __end_of_ISR:	
 10791  007E                     btemp	set	126	;btemp
 10792  007E                     wtemp0	set	126
 10793                           
 10794                           	psect	intentry
 10795  0004                     __pintentry:	
 10796                           ;incstack = 0
 10797                           ; Regs used in _ISR: []
 10798                           
 10799  0004                     interrupt_function:	
 10800  007E                     saved_w	set	btemp
 10801  0004  00FE               	movwf	btemp
 10802  0005  0E03               	swapf	3,w
 10803  0006  00F0               	movwf	??_ISR
 10804  0007  080A               	movf	10,w
 10805  0008  00F1               	movwf	??_ISR+1
 10806  0009  160A  158A  2B4B   	ljmp	_ISR


Data Sizes:
    Strings     19
    Constant    144
    Data        0
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      12
    BANK0            80     80      80
    BANK1            80     54      64
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_3(CODE[5]), STR_2(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 4
		 -> lcd_write_float@buffer(BANK1[4]), lcd_write_int@buffer(BANK1[4]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    lcd_write_string@var	PTR unsigned char  size(2) Largest target is 11
		 -> lcd_write_float@buffer(BANK1[4]), lcd_write_int@buffer(BANK1[4]), STR_1(CODE[11]), 


Critical Paths under _main in COMMON

    _sprintf->___lldiv
    _sprintf->__div_to_l_
    ___awdiv->___awmod
    ___lwdiv->___lwmod
    ___flmul->__Umul8_16
    ___llmod->___lldiv
    _lcd_write_string->_lcd_write_char
    _lcd_set_cursor->_lcd_cmd
    _lcd_clr->_lcd_cmd
    _initLCD->_lcd_cmd

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_lcd_write_float
    _lcd_write_int->_sprintf
    _lcd_write_float->_sprintf
    _sprintf->___fladd
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___llmod->___lldiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_lcd_write_float
    _main->_lcd_write_int
    _lcd_write_int->_sprintf
    _lcd_write_float->_sprintf
    _sprintf->___flsub

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0   70771
                                             46 BANK1      8     8      0
                            ___awdiv
                             ___wmul
                           ___xxtofl
                            _initADC
                            _initLCD
                            _lcd_clr
                     _lcd_set_cursor
                    _lcd_write_float
                      _lcd_write_int
                   _lcd_write_string
 ---------------------------------------------------------------------------------
 (1) _lcd_write_int                                        8     8      0   33713
                                             38 BANK1      8     8      0
                   _lcd_write_string
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _lcd_write_float                                      9     5      4   33803
                                             79 BANK0      1     1      0
                                             38 BANK1      8     4      4
                   _lcd_write_string
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             42    37      5   33123
                                             74 BANK0      5     0      5
                                              8 BANK1     30    30      0
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                               19    15      4    7560
                                             34 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4    1208
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4    1516
                                              9 COMMON     1     1      0
                                              0 BANK0      8     4      4
                            ___awmod (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              20    16      4    6139
                                             34 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     615
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     781
                                              8 COMMON     1     1      0
                                              0 BANK0      7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             26    18      8    4393
                                              8 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (5) __Umul8_16                                            9     7      2     799
                                              2 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         18    10      8     455
                                              2 COMMON     8     0      8
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          15     7      8     455
                                              2 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     474
                                              2 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     548
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                             10     2      8     952
                                              5 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     618
                                              2 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             11     7      4     457
                                             53 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    2485
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    2288
                                             54 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     121
                                              2 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     790
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) ___fleq                                              12     4      8     394
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _lcd_write_string                                     7     5      2     431
                                              5 COMMON     5     3      2
                                              0 BANK0      2     2      0
                     _lcd_write_char
 ---------------------------------------------------------------------------------
 (2) _lcd_write_char                                       3     3      0      31
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd_set_cursor                                       2     1      1     186
                                              5 COMMON     2     1      1
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_clr                                              0     0      0      22
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              2     2      0      22
                                              5 COMMON     2     2      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              3     3      0      22
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _initADC                                              3     3      0      22
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
     ___awmod (ARG)
     ___wmul (ARG)
   ___wmul
   ___xxtofl
   _initADC
   _initLCD
     _lcd_cmd
   _lcd_clr
     _lcd_cmd
   _lcd_set_cursor
     _lcd_cmd
   _lcd_write_float
     _lcd_write_string
       _lcd_write_char
     _sprintf
       ___awdiv
         ___awmod (ARG)
         ___wmul (ARG)
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
               ___wmul (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___fleq
       ___flge
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___flneg
       ___flsub
         ___fladd
           _fround (ARG)
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
                 ___wmul (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
               ___wmul (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
           ___wmul (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
   _lcd_write_int
     _lcd_write_string
       _lcd_write_char
     _sprintf
       ___awdiv
         ___awmod (ARG)
         ___wmul (ARG)
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
               ___wmul (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___fleq
       ___flge
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___flneg
       ___flsub
         ___fladd
           _fround (ARG)
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
                 ___wmul (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
               ___wmul (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
           ___wmul (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
   _lcd_write_string
     _lcd_write_char

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      9C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     36      40       7       80.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      9C      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Feb 08 08:56:05 2020

                        pc 0002                __CFG_CP$OFF 0000                         l80 1D06  
                       l83 1B36                         l91 1B7D                         l86 07FE  
                       l94 1B4A               ___awdiv@sign 0025                         fsr 0004  
      ___wmul@multiplicand 0074        __Umul8_16@word_mpld 0078                        l100 1C71  
                      l103 1BF1                        l120 1ECB                        l130 1EF8  
                      l122 1ED0                        l106 07F7                        l131 1EFD  
                      l123 1ED5                        l132 1F02                        l124 1EDA  
                      l300 04F4                        l133 1F07                        l125 1EDF  
                      l134 1F0C                        l126 1EE4                        l135 1F11  
                      l127 1EE9                        l136 1F16                        l128 1EEE  
                      l137 1F5B                        l129 1EF3                        l321 07C9  
           lcd_cmd@command 0074                        l325 1B8A                        l246 0FFF  
                      l511 1D25                        l327 1BA2                        l239 1577  
                      l512 1D41                        l520 1FFF                        l513 1D56  
                      l361 1EBD                        l265 00A2                        l506 135D  
                      l516 1F7A                        l524 1B10                        l293 04B0  
                      l542 12AC                        l519 1FE6                        l535 111E  
                      l543 121E                        l631 1CB7                        l528 1133  
                      l800 11C5                        l553 129F                        l641 1C2B  
                      l538 1133                        l546 126F                        l491 1E55  
                      l652 15DB                        l581 1DFC                        l814 1BB7  
                      l806 1B22                        l478 0870                        l495 136A  
                      l656 1682                        l496 12CF                        l816 1BC9  
                      l760 0C90                        l673 174D                        l665 17FF  
                      l658 1659                        l754 0C08                        l683 1793  
                      l499 132D                        l748 0C9C                        l677 1771  
                      l694 17F3                        l686 17D1                        l695 17FF  
                      l792 119D                        l698 1DA6                        l786 1158  
                      l788 11EF                        l799 11B9               __CFG_CPD$OFF 0000  
                      _ISR 1B4B                        _adc 00DE                        fsr0 0004  
                      indf 0000               ___awmod@sign 0078               ___flmul@aexp 003A  
             ___flmul@bexp 003B               ___flmul@sign 0035               ___flmul@temp 0040  
             ___flmul@prod 003C            ?_lcd_set_cursor 0075               __CFG_LVP$OFF 0000  
                     ?_ISR 0070               ___fltol@exp1 005F                       l2200 0862  
                     l3002 1B24                       l2202 0867                       l2210 1DFE  
                     l3004 1B27                       l2300 1589                       l2204 086C  
                     l2220 1E12                       l2212 1E02                       l3006 1B29  
                     l2310 159D                       l2302 158A                       l2150 1BA4  
                     l2230 1E2A                       l2222 1E18                       l2214 1E07  
                     l3008 1B33                       l2400 16AB                       l2320 15B3  
                     l2304 158F                       l2312 159F                       l2160 1BC5  
                     l2152 1BA6                       l2240 1E4C                       l2232 1E34  
                     l2224 1E1B                       l2216 1E09                       l2208 1DFD  
                     l2410 16C2                       l2402 16AF                       l2330 15C8  
                     l2322 15B9                       l2314 15A7                       l2306 1594  
                     l2154 1BAD                       l2170 0814                       l2242 1E51  
                     l2234 1E3A                       l2226 1E22                       l2218 1E0D  
                     l2420 1725                       l2412 16C3                       l2404 16B3  
                     l2340 15E5                       l2332 15D0                       l2324 15BD  
                     l2316 15AC                       l2308 159C                       l2156 1BB1  
                     l2500 0958                       l2180 0825                       l2172 0816  
                     l2164 0808                       l2236 1E41                       l2228 1E26  
                     l2430 175A                       l2422 172B                       l2414 16CC  
                     l2406 16BC                       l2350 15F9                       l2342 15E9  
                     l2334 15D1                       l2326 15BE                       l2318 15B2  
                     l2158 1BC0                       l2510 0975                       l2502 0960  
                     l2190 083D                       l2182 082B                       l2174 081A  
                     l2166 080B                       l2238 1E47                       l2440 1775  
                     l2424 1730                       l2408 16BE                       l2416 16D1  
                     l2360 160D                       l2352 15FD                       l2344 15ED  
                     l2328 15C3                       l2336 15D3                       l2600 0C20  
                     l2520 098C                       l2512 0979                       l2504 0962  
                     l3400 1C7F                       l2280 1C06                       l2272 1BF2  
                     l2192 084E                       l2184 082E                       l2176 081F  
                     l2168 080F                       l3250 1CC1                       l2442 1778  
                     l2434 1763                       l2418 16E7                       l2426 173F  
                     l2450 1785                       l2370 1621                       l2362 1611  
                     l2354 1601                       l2346 15F1                       l2338 15E1  
                     l2610 0C5B                       l2602 0C24                       l2522 098E  
                     l2514 097A                       l2506 096A                       l3410 1CA5  
                     l3402 1C86                       l2282 1C0A                       l2274 1BF8  
                     l2290 1C27                       l2194 0854                       l2186 0835  
                     l2178 0823                       l3260 1CEE                       l3252 1CC7  
                     l3420 1B38                       l2460 1798                       l2452 1786  
                     l2444 177A                       l2436 176C                       l2428 1755  
                     l2380 1666                       l2364 1615                       l2356 1605  
                     l2348 15F5                       l2372 1625                       l2620 0C88  
                     l2612 0C6A                       l2604 0C3D                       l2540 09FF  
                     l2532 09A9                       l2524 0996                       l2516 097F  
                     l2508 096F                       l3412 1CA6                       l3404 1C8A  
                     l2284 1C14                       l2276 1BFB                       l2700 1B1F  
                     l2196 0855                       l2188 0839                       l3500 009C  
                     l3262 1CF4                       l3254 1CD5                       l3422 1B3B  
                     l2470 17D6                       l2462 179D                       l2454 178A  
                     l2446 177F                       l2438 1770                       l2382 1668  
                     l2390 167A                       l2374 1626                       l2366 1619  
                     l2358 1609                       l2294 1578                       l2622 0C89  
                     l2614 0C74                       l2606 0C43                       l2550 0A7C  
                     l2542 0A2B                       l2534 09B9                       l2526 099B  
                     l2518 0984                       l3414 1CAD                       l3406 1C8E  
                     l2286 1C1A                       l2278 1C02                       l3430 1374  
                     l2702 1B21                       l2198 085C                       l3510 00D4  
                     l3502 00A0                       l3272 1F1B                       l3264 1CFA  
                     l3256 1CDE                       l3248 1CB8                       l3424 1B3D  
                     l2480 17ED                       l2472 17DB                       l2464 17AB  
                     l2456 1790                       l2448 1781                       l2392 1686  
                     l2384 166C                       l2376 163D                       l2368 161D  
                     l2296 157F                       l2720 1225                       l2712 120C  
                     l2624 0C94                       l2616 0C76                       l2608 0C50  
                     l2560 0AFC                       l2552 0A99                       l2544 0A47  
                     l2536 09C6                       l2528 09A0                       l3408 1C9F  
                     l3416 1CB3                       l2288 1C21                       l3600 0425  
                     l3520 0107                       l3512 00D8                       l3274 1F55  
                     l3266 1D00                       l3258 1CE8                       l3282 07F8  
                     l3290 1B70                       l3426 1B47                       l2482 17EF  
                     l2474 17E3                       l2466 17AF                       l2394 168B  
                     l2386 166D                       l2378 165D                       l2298 1585  
                     l3450 1DB4                       l2810 1B7E                       l2730 1256  
                     l2722 1234                       l2706 11F0                       l2618 0C84  
                     l2570 0BB4                       l2562 0B29                       l2554 0AA9  
                     l2546 0A63                       l2538 09E3                       l2490 0943  
                     l3442 1534                       l3610 04C1                       l3602 042A  
                     l3530 014C                       l3522 0120                       l3514 00DC  
                     l3506 00A4                       l3276 1F58                       l3268 1EBF  
                     l3292 1B76                       l2484 17FA                       l2476 17E8  
                     l2468 17CD                       l2388 1676                       l2900 10EC  
                     l3460 1DEE                       l3452 1DC1                       l2820 1B9E  
                     l2812 1B80                       l2804 1352                       l2732 1260  
                     l2724 1236                       l2708 1203                       l2580 0BD9  
                     l2572 0BBD                       l2564 0B39                       l2556 0AC6  
                     l2548 0A6C                       l2492 0949                       l3436 1483  
                     l3428 136E                       l2660 0CAD                       l3620 04EE  
                     l3612 04C5                       l3604 0465                       l3540 0192  
                     l3532 0152                       l3524 0124                       l3516 00EA  
                     l3508 00C8                       l3700 07AF                       l3286 1B64  
                     l3470 1C4D                       l2486 17FE                       l2478 17E9  
                     l2398 1694                       l2910 10FA                       l2902 10EE  
                     l2830 1E78                       l3454 1DC5                       l3462 1DF4  
                     l3446 1DA7                       l2814 1B84                       l2806 1362  
                     l2734 1261                       l2726 123F                       l2718 121F  
                     l2590 0BF1                       l2582 0BE2                       l2574 0BCB  
                     l2566 0B66                       l2558 0ADF                       l2494 094D  
                     l3438 1489                       l2654 0CA0                       l3630 052B  
                     l3622 04FD                       l3614 04CB                       l3606 04A4  
                     l3550 0239                       l3542 01B1                       l3534 0165  
                     l3526 0128                       l3518 00EE                       l3702 07C5  
                     l3288 1B69                       l3472 1C55                       l2920 1123  
                     l2904 10F2                       l2912 110C                       l2840 1EA6  
                     l2832 1E7C                       l2824 1E56                       l3456 1DD7  
                     l3448 1DB1                       l2816 1B91                       l2760 12BA  
                     l2752 1294                       l2744 127B                       l2736 1269  
                     l2728 1248                       l2592 0C05                       l2576 0BD4  
                     l2584 0BE8                       l2568 0B8C                       l2496 094E  
                     l2488 093C                       l2672 0E26                       l2656 0CA4  
                     l3632 0586                       l3640 0667                       l3624 0502  
                     l3616 04D8                       l3608 04B8                       l3560 02C1  
                     l3544 01FC                       l3536 0188                       l3528 0141  
                     l3552 0241                       l3480 0035                       l3712 1BCD  
                     l3720 0876                       l3466 1C2C                       l2850 1D1D  
                     l2922 1128                       l2842 1EAF                       l2834 1E85  
                     l2826 1E68                       l3458 1DE5                       l2818 1B98  
                     l2770 12D0                       l2754 12A4                       l2738 1273  
                     l2746 128D                       l2586 0BEC                       l2578 0BD8  
                     l2498 0953                       l3394 1C72                       l2690 0FD3  
                     l2666 0D97                       l2658 0CA6                       l3642 066F  
                     l3634 05C1                       l3626 0509                       l3618 04E7  
                     l3570 0323                       l3562 02E8                       l3554 0250  
                     l3546 0215                       l3538 018C                       l3650 0687  
                     l3810 00BA                       l3490 0053                       l3482 003A  
                     l3474 0023                       l3714 07CA                       l3730 088D  
                     l3722 0877                       l3812 1F23                       l3468 1C31  
                     l2852 1D39                       l2860 1F5C                       l2836 1E97  
                     l2828 1E6B                       l2844 1EB5                       l2780 12FD  
                     l2772 12D8                       l2764 12C3                       l2596 0C0D  
                     l2588 0BED                       l3396 1C76                       l2684 0F44  
                     l2668 0D9E                       l2676 0E53                       l3660 06AF  
                     l3652 0698                       l3644 0676                       l3636 0600  
                     l3628 050D                       l3580 039E                       l3572 0341  
                     l3564 02F7                       l3556 0297                       l3548 021E  
                     l3492 0058                       l3484 003C                       l3476 0028  
                     l3740 08BD                       l3732 0896                       l3724 0878  
                     l3716 0871                       l2854 1D53                       l2870 1FBE  
                     l2862 1F72                       l2918 1113                       l2838 1EA5  
                     l2950 1137                       l2790 1331                       l2782 130F  
                     l2774 12E9                       l2758 12AD                       l2598 0C12  
                     l3398 1C7C                       l2694 1B12                       l2686 0F4B  
                     l2678 0E5A                       l3662 06B5                       l3654 069C  
                     l3646 067A                       l3638 060C                       l3590 03D1  
                     l3582 03CD                       l3566 0312                       l3558 02A6  
                     l3494 006D                       l3486 004A                       l3478 002E  
                     l3750 08FB                       l3742 08C2                       l3734 08A4  
                     l3726 0882                       l3718 0875                       l2856 1D55  
                     l2848 1D07                       l2872 1FC2                       l2864 1F8E  
                     l2880 1B06                       l2944 1D57                       l2952 113C  
                     l2784 131D                       l2776 12EB                       l2696 1B13  
                     l3680 0711                       l3672 06C5                       l3664 06BD  
                     l3656 06A0                       l3648 0680                       l3584 03CF  
                     l3576 0360                       l3568 031B                       l3496 0084  
                     l3488 004D                       l3752 08FE                       l3744 08C8  
                     l3736 08A9                       l3728 0887                       l2874 1FFC  
                     l2866 1F96                       l2882 1B0E                       l2946 1D5B  
                     l2890 10C5                       l2970 1186                       l2962 1169  
                     l2954 1140                       l2786 131E                       l2778 12F4  
                     l2698 1B19                       l3690 073F                       l3682 0712  
                     l3666 06C3                       l3658 06A4                       l3594 0408  
                     l3578 0369                       l3498 008A                       l3754 0904  
                     l3746 08CF                       l3738 08AF                       l2876 1FFE  
                     l2868 1F9A                       l2884 1B10                       l2980 11BD  
                     l2972 1194                       l2964 116E                       l2956 1150  
                     l2796 1339                       l2788 1327                       l3692 0744  
                     l3684 0721                       l3676 06FC                       l3596 0412  
                     l3756 090C                       l3748 08FA                       l2894 10CE  
                     l2990 11E7                       l2982 11C7                       l2974 11A4  
                     l2966 117B                       l2958 1160                       l2798 134B  
                     l3694 0799                       l3686 072A                       l3678 0706  
                     l3598 041E                       l3758 092B                       l2896 10E3  
                     l2888 10B8                       l2984 11DD                       l2976 11AF  
                     l2968 1182                       l3688 0738                       l2898 10E4  
                     l2986 11E2                       l2978 11B3                       l3698 07A1  
                     l2988 11E6                       STR_1 10A0                       STR_2 10B0  
                     STR_3 10AB                       u3010 1BF8                       u3011 1BF7  
                     u3100 15B2                       u3101 15B1                       u3110 15BD  
                     u3030 1C0A                       u3111 15BC                       u3031 1C09  
                     u3200 166C                       u3120 15C3                       u3040 1C14  
                     u3201 166B                       u3121 15C2                       u3041 1C13  
                     u3025 1BFC                       u3130 15C8                       u3131 15C7  
                     u3300 16E7                       u3220 1682                       u3140 15E1  
                     u3060 1C27                       u3301 16E6                       u3221 1681  
                     u3141 15E0                       u3061 1C26                       u3045 1C10  
                     u4005 0CCF                       u3230 1686                       u3150 15E5  
                     u3070 1589                       u4110 0F4B                       u4030 0D9E  
                     u3311 16FE                       u3303 16E3                       u3231 1685  
                     u3215 166F                       u3151 15E4                       u3071 1588  
                     u3055 1C1B                       u4111 0F4A                       u4031 0D9D  
                     u4015 0D0B                       u3400 1785                       u3320 1712  
                     u3312 16FF                       u3240 168B                       u3160 163D  
                     u3080 158F                       u4200 1256                       u3401 1784  
                     u3321 1713                       u3313 1704                       u3241 168A  
                     u3161 163C                       u3081 158E                       u4201 1255  
                     u4105 0F03                       u4025 0D56                       u3410 178A  
                     u3330 1730                       u3322 1718                       u3314 1705  
                     u3170 1648                       u3090 1594                       u3411 1789  
                     u3331 172F                       u3323 1719                       u3315 170A  
                     u3251 169D                       u3171 1646                       u3091 1593  
                     u3500 17E8                       u3420 1790                       u3340 1755  
                     u3316 170B                       u3260 16AF                       u3252 16A4  
                     u3180 1649                       u4300 12BA                       u4220 126F  
                     u3501 17E7                       u3421 178F                       u3341 1754  
                     u3261 16AE                       u3253 16AB                       u3165 1639  
                     u4301 12B9                       u4221 126E                       u4205 1252  
                     u4125 0F5E                       u4045 0DB1                       u3510 17ED  
                     u3430 1797                       u3350 175A                       u3270 16B3  
                     u3190 165D                       u4310 12CE                       u4230 1273  
                     u4150 1B19                       u4070 0E5A                       u3511 17EC  
                     u3431 1796                       u3351 1759                       u3271 16B2  
                     u3191 165C                       u4311 12CD                       u4231 1272  
                     u4215 1262                       u4151 1B18                       u4135 0F9A  
                     u4071 0E59                       u4055 0DED                       u3520 17FE  
                     u3440 179D                       u3280 16C2                       u4400 1351  
                     u4240 127A                       u2720 1BB1                       u3600 09A0  
                     u4160 1B1F                       u6000 06FB                       u3521 17FD  
                     u3441 179C                       u3281 16C1                       u4401 1350  
                     u4241 1279                       u2721 1BB0                       u3601 099F  
                     u4161 1B1E                       u4145 0FD6                       u4065 0E29  
                     u6001 06FA                       u3450 17AF                       u3370 1770  
                     u4330 130F                       u4170 1203                       u3530 094D  
                     u2810 084E                       u6010 0706                       u3451 17AE  
                     u3371 176F                       u4331 130E                       u4171 1202  
                     u3611 09F1                       u3531 094C                       u2811 084D  
                     u6011 0705                       u3460 17BE                       u3380 1775  
                     u4420 1362                       u4260 128C                       u4180 121D  
                     u2740 1BC5                       u3612 09F8                       u3540 0953  
                     u2900 1E34                       u6020 0711                       u3381 1774  
                     u3365 1765                       u4421 1361                       u4325 12F6  
                     u4261 128B                       u4181 121C                       u2741 1BC4  
                     u3701 0B1B                       u3621 0A0D                       u3613 09FF  
                     u3541 0952                       u2805 083E                       u2901 1E33  
                     u4085 0E7C                       u6021 0710                       u6005 06F7  
                     u3470 17CD                       u3390 177F                       u4510 1E97  
                     u4430 1B84                       u4350 132D                       u4270 1293  
                     u3702 0B22                       u3622 0A14                       u3550 0958  
                     u2830 0862                       u2750 080F                       u6030 0721  
                     u3471 17CC                       u3391 177E                       u3295 16C5  
                     u4511 1E96                       u4431 1B83                       u4415 1354  
                     u4351 132C                       u4335 130B                       u4271 1292  
                     u4255 127C                       u2735 1BB8                       u3711 0B48  
                     u3703 0B29                       u3631 0A39                       u3623 0A1B  
                     u3551 0957                       u2831 0861                       u2815 084A  
                     u2751 080E                       u4095 0EB8                       u6031 0720  
                     u5400 1B76                       u3480 17D6                       u4360 1331  
                     u3800 0BEC                       u3720 0B72                       u3712 0B4F  
                     u3632 0A40                       u3560 0979                       u2840 0867  
                     u2760 081A                       u2920 1E47                       u6040 0738  
                     u5401 1B75                       u4601 1FA9                       u3481 17D5  
                     u3465 17B9                       u4505 1E7E                       u4361 1330  
                     u4345 1320                       u3801 0BEB                       u3713 0B56  
                     u3641 0A55                       u3633 0A47                       u3561 0978  
                     u2841 0866                       u2825 0856                       u2761 0819  
                     u2921 1E46                       u2905 1E30                       u6041 0737  
                     u6025 070D                       u4610 1FC2                       u4602 1FAA  
                     u3490 17DB                       u4530 1EB5                       u4370 1338  
                     u4290 12A4                       u3810 0BF1                       u3642 0A5C  
                     u3570 097F                       u2770 082B                       u2930 1E4C  
                     u2850 1E02                       u4611 1FC1                       u4603 1FAF  
                     u3491 17DA                       u4531 1EB4                       u4515 1E93  
                     u4371 1337                       u4291 12A3                       u4195 1241  
                     u3811 0BF0                       u3731 0B7E                       u3643 0A63  
                     u3571 097E                       u2771 082A                       u2931 1E4B  
                     u2915 1E3B                       u2851 1E01                       u6035 071D  
                     u6107 08B7                       u4540 1D1D                       u4604 1FB0  
                     u4700 110B                       u4460 1B9E                       u3820 0C05  
                     u3740 0B9A                       u3732 0B85                       u3580 0984  
                     u5500 1374                       u2860 1E0D                       u6060 07AF  
                     u6117 1B42                       u4541 1D1C                       u4621 1FD1  
                     u4605 1FB5                       u4701 110A                       u4525 1EA7  
                     u4461 1B9D                       u4445 1B8B                       u4285 1296  
                     u3821 0C04                       u3733 0B8C                       u3725 0B6D  
                     u3661 0A8B                       u3581 0983                       u5501 1373  
                     u2861 1E0C                       u6061 07AE                       u4550 1D39  
                     u4630 1FFC                       u4622 1FD2                       u4606 1FB6  
                     u4710 1112                       u4470 1E68                       u4390 134A  
                     u3830 0C0C                       u3662 0A92                       u3590 099B  
                     u5430 1C7C                       u2790 083D                       u2870 1E18  
                     u6070 07C5                       u6127 1CBC                       u4551 1D38  
                     u4631 1FFB                       u4623 1FD7                       u4711 1111  
                     u4471 1E67                       u4455 1B92                       u4391 1349  
                     u3831 0C0B                       u3751 0BA6                       u3671 0AB8  
                     u3663 0A99                       u3655 0A65                       u3591 099A  
                     u5431 1C7B                       u2791 083C                       u2871 1E17  
                     u6071 07C4                       u6055 0753                       u4560 1D53  
                     u4624 1FD8                       u4640 1B0E                       u5600 1DC5  
                     u3840 0C12                       u3752 0BAD                       u3672 0ABF  
                     u6080 08CF                       u6137 1CCB                       u4561 1D52  
                     u4625 1FDD                       u4641 1B0D                       u5601 1DC4  
                     u4385 133A                       u3841 0C11                       u3753 0BB4  
                     u3745 0B95                       u3673 0AC6                       u2785 082F  
                     u6081 08CE                       u4626 1FDE                       u4570 1F72  
                     u4730 1123                       u4650 10C5                       u4490 1E7C  
                     u5610 1DD7                       u4810 113C                       u3850 0C24  
                     u5450 1C8E                       u2890 1E2A                       u6147 1CD9  
                     u4635 1FF8                       u4571 1F71                       u4731 1122  
                     u4651 10C4                       u4491 1E7B                       u5611 1DD6  
                     u4811 113B                       u3851 0C23                       u3691 0AEE  
                     u5451 1C8D                       u5515 1391                       u2891 1E29  
                     u4580 1F8E                       u4740 1128                       u4660 10DC  
                     u4900 11B9                       u4820 1140                       u3860 0C33  
                     u3780 0BD8                       u3692 0AF5                       u5540 1489  
                     u5700 00D4                       u6157 1CE6                       u4565 1D4F  
                     u4581 1F8D                       u4741 1127                       u4725 1115  
                     u4485 1E6D                       u4901 11B8                       u4821 113F  
                     u3781 0BD7                       u3765 0BB6                       u3693 0AFC  
                     u3685 0AC8                       u5445 1C80                       u5541 1488  
                     u5525 13ED                       u2885 1E1C                       u5701 00D3  
                     u5390 1B69                       u4590 1F9A                       u4670 10F2  
                     u5630 1DF4                       u4910 11BD                       u4830 1160  
                     u3870 0C50                       u5470 1C9F                       u5710 00D8  
                     u6167 1B2E                       u5391 1B68                       u4591 1F99  
                     u4671 10F1                       u5631 1DF3                       u5615 1DD3  
                     u4911 11BC                       u4831 115F                       u3871 0C4F  
                     u3775 0BCD                       u5471 1C9E                       u5535 1442  
                     u5711 00D7                       u5640 1C3B                       u4680 10F9  
                     u4920 11D2                       u3880 0C6A                       u5800 02E8  
                     u5720 0107                       i1l57 1B5A                       u4681 10F8  
                     u4665 10D7                       u5625 1DE6                       u3881 0C69  
                     u3865 0C2E                       u5465 1C8F                       u5801 02E7  
                     u5721 0106                       u6097 089E                       i1l58 1B5C  
                     u5650 1C5F                       u4930 11E2                       u4850 1181  
                     u3890 0C88                       u5490 1CB3                       u5810 02F7  
                     u5730 0141                       u4931 11E1                       u4851 1180  
                     u3891 0C87                       u3875 0C4C                       u3795 0BDB  
                     u5491 1CB2                       u5475 1C9B                       u5555 14A6  
                     u5811 02F6                       u5731 0140                       u5660 1C71  
                     u5580 1DB1                       u4940 11E6                       u3980 0CA4  
                     u5900 04E7                       u5820 0312                       u5740 018C  
                     u5661 1C70                       u5581 1DB0                       u4941 11E5  
                     u4925 11CD                       u4845 1173                       u3885 0C66  
                     u5485 1CA7                       u5565 14F3                       u3981 0CA3  
                     u5901 04E6                       u5821 0311                       u5741 018B  
                     u4870 11A3                       u3990 0CAD                       u5910 0502  
                     u5750 0215                       u5670 002E                       u4695 10FB  
                     u4871 11A2                       u5575 153F                       u3991 0CAC  
                     u5911 0501                       u5815 02F3                       u5751 0214  
                     u5671 002D                       u5840 0407                       u5760 0239  
                     u5680 004A                       u4865 1195                       u5905 04E3  
                     u5841 0406                       u5761 0238                       u5681 0049  
                     u4890 11B3                       u5850 0412                       u5770 0250  
                     u5690 009B                       u5595 1DB6                       u4891 11B2  
                     u5851 0411                       u5835 03D4                       u5771 024F  
                     u5691 009A                       u5940 066E                       u5860 041E  
                     u5780 02A6                       u4885 11A8                       u5941 066D  
                     u5925 0589                       u5861 041D                       u5845 0403  
                     u5781 02A5                       u5950 0686                       u5790 02C1  
                     u5951 0685                       u5935 060F                       u5791 02C0  
                     u5775 024C                       u5960 06A0                       u5880 04B7  
                     u5961 069F                       u5881 04B6                       u5785 02A2  
                     u5970 06B5                       u5890 04D8                       u5971 06B4  
                     u5891 04D7                       u5875 042D                       u5980 06BD  
                     u5981 06BC                       u5895 04D4                       u5995 06C8  
             __CFG_WRT$OFF 0000                       _adc2 007B     __end_of_lcd_write_char 1B4B  
                     _main 0871                       btemp 007E                       start 000C  
           ?_lcd_write_int 0070              __CFG_IESO$OFF 0000               _sprintf$1025 00AD  
                    ??_ISR 0070              ___fltol@sign1 005E            __end_of___fladd 1800  
                    ?_main 0070            __end_of___awdiv 0871            __end_of___flneg 1B11  
            __CFG_WDTE$OFF 0000            __end_of___awmod 1E56            __end_of___flmul 0C9D  
          __end_of___flsub 1DA7            __end_of___fltol 1134                      _ANSEL 0188  
          __end_of___lldiv 1EBE            ___awdiv@divisor 0020            __end_of___llmod 1DFD  
          __end_of___lwdiv 1CB8            __end_of___lwmod 1C2C            ___awdiv@counter 0024  
                    _PORTA 0005                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      _TRISA 0085                      _TRISB 0086  
                    _TRISC 0087                      _TRISD 0088             __CFG_FCMEN$OFF 0000  
          __end_of_lcd_cmd 1B37            __end_of_lcd_clr 07FF            __end_of_initADC 1F5C  
  __end_of_lcd_write_float 07F8            __end_of_initLCD 1D07            __end_of_dpowers 10A0  
                    _scale 0C9D                      _ready 00DF            __end_of_isdigit 1B23  
           __CFG_BOREN$OFF 0000                      pclath 000A            ?_lcd_write_char 0070  
                    status 0003                      wtemp0 007E            __end_of_sprintf 07CA  
           __CFG_MCLRE$OFF 0000            __initialization 000F               __end_of_main 093C  
                   ??_main 00CE       __size_of__tdiv_to_l_ 00BD                     _ADCON1 009F  
         ___llmod@dividend 0029                     ?_scale 0042                     _ADRESH 001E  
         ___awdiv@dividend 0022                     i1l3296 1B4B                     i1l3298 1B53  
                   u541_20 1B53                     u541_21 1B52            ??_lcd_write_int 00C6  
         __end_of___xxtofl 11F0          lcd_write_char@var 0074             __CFG_PWRTE$OFF 0000  
         __end_of__powers_ 1044                     ___flge 1F5C                     ___fleq 1D07  
                ??___fladd 005E                     ___wmul 1B7E                  ??___awdiv 0079  
                ??___flneg 0076                  ??___awmod 0076                  ??___flmul 0030  
                ??___flsub 007B                  ??___fltol 0059                  ??___lldiv 007A  
                ??___llmod 002D                  ??___lwdiv 0078                  ??___lwmod 0076  
                   _fround 136B           ___awdiv@quotient 0026            ___awmod@divisor 0072  
 __end_of_lcd_write_string 1C72            ___awmod@counter 0077                  ??_lcd_cmd 0072  
                ??_lcd_clr 0075                  ??_initADC 0072                  ??_initLCD 0075  
                ??_isdigit 0072         __size_of__Umul8_16 0027                     saved_w 007E  
         ?_lcd_write_float 00C6                  ??_sprintf 00A8                 ___flge@ff1 0072  
               ___flge@ff2 0076               ___xxtofl@arg 0022               ___xxtofl@exp 0021  
        lcd_write_string@i 0020               ___xxtofl@val 0072                 ___fleq@ff1 0072  
               ___fleq@ff2 0076    __end_of__initialization 001C                 ___flneg@f1 0072  
               ___fltol@f1 0055             __pcstackCOMMON 0070              __end_of_scale 1000  
         ??_lcd_set_cursor 0076                 __div_to_l_ 12AD            __div_to_l_@exp1 0025  
          __div_to_l_@cntr 0024                    ??_scale 0046            __div_to_l_@quot 0020  
               __pbssBANK1 00D6              __div_to_l_@f1 0072              __div_to_l_@f2 0076  
        __end_of__Umul8_16 1BCA      lcd_write_float@buffer 00CA                 __pmaintext 0871  
                  ?___flge 0072                    ?___fleq 0072                    ?___wmul 0072  
            initADC@analog 0074      lcd_write_float@numero 00C6                 __pintentry 0004  
                  ?_fround 0042                  ?___xxtofl 0072           ??_lcd_write_char 0072  
               __stringtab 1000          __end_of__npowers_ 1078                 _scale$1024 0050  
          __size_of___flge 00A4            __size_of___fleq 0050                    ___fladd 1578  
                  ___awdiv 0808                    ___flneg 1B06                    ___awmod 1DFD  
                  ___flmul 093C                    ___flsub 1D57                    ___fltol 10B8  
                  ___lldiv 1E56            __size_of___wmul 0025                    ___llmod 1DA7  
                  ___lwdiv 1C72                    ___lwmod 1BF2                    _decimal 00DA  
          __size_of_fround 020D                    __ptext1 1BCA                    __ptext2 07CA  
                  __ptext3 0020                    __ptext4 0C9D                    __ptext5 1DFD  
                  __ptext6 0808                    __ptext7 1B11                    __ptext8 136B  
                  __ptext9 1BF2                    _lcd_cmd 1B23                    _lcd_clr 07F8  
                  _initADC 1EBE                    _initLCD 1CB8               __size_of_ISR 0018  
              ?__div_to_l_ 0072                    _dpowers 1078                    _isdigit 1B11  
               ??___xxtofl 0076           ___awmod@dividend 0074                    _sprintf 0020  
                  _voltaje 00D6       end_of_initialization 001C            ___lldiv@divisor 0072  
          ___lldiv@counter 0024             __tdiv_to_l_@f1 0072             __tdiv_to_l_@f2 0076  
            ??__tdiv_to_l_ 0020                  _PORTBbits 0006          ?_lcd_write_string 0075  
              ___fladd@grs 0069         ??_lcd_write_string 0077              ___xxtofl@sign 0020  
              ___flmul@grs 0036      __end_of_lcd_write_int 1BF2        __size_of__div_to_l_ 00BE  
           __end_of___flge 2000             __end_of___fleq 1D57             __end_of___wmul 1BA3  
           __end_of_fround 1578        start_initialization 000F                __end_of_ISR 1B63  
      __end_of__tdiv_to_l_ 12AD            ___llmod@divisor 0025            ___llmod@counter 002E  
 __size_of_lcd_write_float 002E   __CFG_FOSC$INTRC_NOCLKOUT 0000                   ??___flge 0020  
                 ??___fleq 0020                   ??___wmul 0076                  __Umul8_16 1BA3  
                 ??_fround 0046              sprintf@tmpval 00B6                  ___fladd@a 005A  
                ___fladd@b 0056                 fround@prec 0055                  ___flmul@a 002C  
                ___flmul@b 0028                __pbssCOMMON 007B                  ___flsub@a 00A0  
                ___flsub@b 00A4                  ___latbits 0002              __pcstackBANK0 0020  
            __pcstackBANK1 00A0          __size_of___xxtofl 00BC                sprintf@flag 00B2  
              sprintf@eexp 00B4                sprintf@fval 00BF                sprintf@prec 00C3  
                _main$1021 00D2           ___lwdiv@dividend 0022                   ?___fladd 0056  
                 ?___awdiv 0020                   ?___flneg 0072                   ?___awmod 0072  
                 ?___flmul 0028                   ?___flsub 00A0                   ?___fltol 0055  
                 ?___lldiv 0072                   ?___llmod 0025                  __npowers_ 1044  
               ?__Umul8_16 0072                   ?___lwdiv 0020                   ?___lwmod 0072  
                __pstrings 1000                __tdiv_to_l_ 11F0                   ?_lcd_cmd 0070  
                 ?_lcd_clr 0070                   ?_initADC 0070               ??__div_to_l_ 007A  
                 ?_initLCD 0070                   ?_isdigit 0070           ___lwdiv@quotient 0025  
                 ?_sprintf 006A             __size_of_scale 0363    __size_of_lcd_set_cursor 001B  
        interrupt_function 0004             ___wmul@product 0076                   _PIE1bits 008C  
                 _PIR1bits 000C         __end_of__div_to_l_ 136B          ??_lcd_write_float 006F  
               _ADCON0bits 001F                __stringbase 100F          ___wmul@multiplier 0072  
__size_of_lcd_write_string 0046    __size_of_lcd_write_char 0014                ??__Umul8_16 0074  
         __size_of___fladd 0288           __size_of___awdiv 0069           __size_of___flneg 000B  
         __size_of___awmod 0059           __size_of___flmul 0361           __size_of___flsub 0050  
         __size_of___fltol 007C           __size_of___lldiv 0068           __size_of___llmod 0056  
         __size_of___lwdiv 0046           __size_of___lwmod 003A                _fround$1022 0051  
              _fround$1023 004D         __end_of__stringtab 1010                _isdigit$845 0072  
         __size_of_lcd_cmd 0014           __size_of_lcd_clr 0007                 sprintf@val 00BA  
       lcd_set_cursor@posx 0076         lcd_set_cursor@posy 0075           __size_of_initADC 009E  
         __size_of_initLCD 004F                   ___xxtofl 1134           __size_of_isdigit 0012  
          ___lwdiv@divisor 0020            ___lwdiv@counter 0024                   __ptext10 1C72  
                 __ptext11 093C                   __ptext20 1D57                   __ptext12 1BA3  
                 __ptext21 1578                   __ptext13 11F0                   __ptext30 1B23  
                 __ptext22 1B06                   __ptext14 12AD                   __ptext31 1EBE  
                 __ptext23 1F5C                   __ptext15 1134                   __ptext32 1B4B  
                 __ptext24 1D07                   __ptext16 1B7E                   __ptext25 1C2C  
                 __ptext17 1DA7                   __ptext26 1B37                   __ptext18 1E56  
                 __ptext27 1B63                   __ptext19 10B8                   __ptext28 07F8  
                 __ptext29 1CB8          __CFG_BOR4V$BOR40V 0000                   __powers_ 1010  
         __size_of_sprintf 07AA        lcd_write_int@buffer 00CA              __size_of_main 00CB  
      lcd_write_int@numero 00C9                 _INTCONbits 000B     __size_of_lcd_write_int 0028  
                 isdigit@c 0073                   scale@scl 0054                   intlevel1 0000  
           _lcd_set_cursor 1B63                  sprintf@ap 00B1           __tdiv_to_l_@exp1 0029  
         __tdiv_to_l_@cntr 0028                  sprintf@sp 00BE           __tdiv_to_l_@quot 0024  
         ___lwmod@dividend 0074           ___lldiv@dividend 0076                  stringcode 100A  
             ?__tdiv_to_l_ 0072     __Umul8_16@multiplicand 0072                   sprintf@c 00C5  
                 sprintf@f 006A           ___lldiv@quotient 0020            ___lwmod@divisor 0072  
          ___lwmod@counter 0077                   stringdir 100A                   stringtab 1000  
   __end_of_lcd_set_cursor 1B7E              ___fladd@signs 0066           _lcd_write_string 1C2C  
             ___fladd@aexp 0067               ___fladd@bexp 0068            _lcd_write_float 07CA  
     __Umul8_16@multiplier 007A             _lcd_write_char 1B37        lcd_write_string@var 0075  
            _lcd_write_int 1BCA          __Umul8_16@product 0076  
